% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/design.R
\name{EdibbleDesign}
\alias{EdibbleDesign}
\title{An R6 Class for an edibble design}
\description{
An object with EdibbleDesign holds the core information related to
the experimental design.
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{active}}{get the active view}

\item{\code{name}}{The name of the design or project}

\item{\code{names_trts}}{The treatment names.}

\item{\code{names_units}}{The unit variable names.}

\item{\code{names_resp}}{The unit variable names.}

\item{\code{names_vars}}{The name of all variables.}

\item{\code{graph}}{An edibble graph.}

\item{\code{table}}{A table served from the edibble graph.}

\item{\code{validation}}{Data validation for response.}

\item{\code{context}}{The context of the experiment.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{EdibbleDesign$new()}}
\item \href{#method-finalize}{\code{EdibbleDesign$finalize()}}
\item \href{#method-plot}{\code{EdibbleDesign$plot()}}
\item \href{#method-print}{\code{EdibbleDesign$print()}}
\item \href{#method-save_seed}{\code{EdibbleDesign$save_seed()}}
\item \href{#method-muffle}{\code{EdibbleDesign$muffle()}}
\item \href{#method-chatty}{\code{EdibbleDesign$chatty()}}
\item \href{#method-activate_table}{\code{EdibbleDesign$activate_table()}}
\item \href{#method-activate_graph}{\code{EdibbleDesign$activate_graph()}}
\item \href{#method-rename}{\code{EdibbleDesign$rename()}}
\item \href{#method-add_variable}{\code{EdibbleDesign$add_variable()}}
\item \href{#method-add_allocation}{\code{EdibbleDesign$add_allocation()}}
\item \href{#method-assign_allocation}{\code{EdibbleDesign$assign_allocation()}}
\item \href{#method-clone}{\code{EdibbleDesign$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialise the edibble design. See also \code{\link[=start_design]{start_design()}}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EdibbleDesign$new(name = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name or title of the project. The title
should be informative and not overly long.
If not supplied the default is "An edibble design".}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-finalize"></a>}}
\if{latex}{\out{\hypertarget{method-finalize}{}}}
\subsection{Method \code{finalize()}}{
Invoked when the EdibbleDesign object is deleted.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EdibbleDesign$finalize()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plot"></a>}}
\if{latex}{\out{\hypertarget{method-plot}{}}}
\subsection{Method \code{plot()}}{
Plot the intermediate contruct.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EdibbleDesign$plot(view = c("high", "low"), ..., main = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{view}}{A high- or -low level view.}

\item{\code{...}}{Arguments passed into \code{plot.igraph}.}

\item{\code{main}}{The title of the plot. By default it is the
name of the EdibbleDesign object.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Print the intermediate construct.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EdibbleDesign$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Arguments passed into \code{print}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-save_seed"></a>}}
\if{latex}{\out{\hypertarget{method-save_seed}{}}}
\subsection{Method \code{save_seed()}}{
This saves the \code{.Random.seed} used just prior to the
randomisation process.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EdibbleDesign$save_seed()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-muffle"></a>}}
\if{latex}{\out{\hypertarget{method-muffle}{}}}
\subsection{Method \code{muffle()}}{
Turn off messages.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EdibbleDesign$muffle()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-chatty"></a>}}
\if{latex}{\out{\hypertarget{method-chatty}{}}}
\subsection{Method \code{chatty()}}{
Turn on messages.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EdibbleDesign$chatty()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-activate_table"></a>}}
\if{latex}{\out{\hypertarget{method-activate_table}{}}}
\subsection{Method \code{activate_table()}}{
Change active view to table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EdibbleDesign$activate_table()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-activate_graph"></a>}}
\if{latex}{\out{\hypertarget{method-activate_graph}{}}}
\subsection{Method \code{activate_graph()}}{
Change active view to graph.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EdibbleDesign$activate_graph()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rename"></a>}}
\if{latex}{\out{\hypertarget{method-rename}{}}}
\subsection{Method \code{rename()}}{
Rename the variables
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EdibbleDesign$rename(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Similar to \code{dplyr::rename}, use \code{new_name = old_name} to
rename variables.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_variable"></a>}}
\if{latex}{\out{\hypertarget{method-add_variable}{}}}
\subsection{Method \code{add_variable()}}{
Add the variable to the graph.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EdibbleDesign$add_variable(value, vname, attr)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{Short hand value of what to add.}

\item{\code{vname}}{The variable name}

\item{\code{attr}}{The vertex attributes.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_allocation"></a>}}
\if{latex}{\out{\hypertarget{method-add_allocation}{}}}
\subsection{Method \code{add_allocation()}}{
This adds edges that connect treatment to unit.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EdibbleDesign$add_allocation(trts, unit)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{trts}}{The name of the treatments.}

\item{\code{unit}}{The name of the unit. There should be only one unit.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-assign_allocation"></a>}}
\if{latex}{\out{\hypertarget{method-assign_allocation}{}}}
\subsection{Method \code{assign_allocation()}}{
This removes "t2vmay" edges and assigns edges from treatment to variable.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EdibbleDesign$assign_allocation()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{EdibbleDesign$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
