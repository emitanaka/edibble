% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/context.R
\name{design-context}
\alias{design-context}
\alias{set_context}
\alias{sort_context}
\alias{suppress_context}
\alias{express_context}
\title{Describe context related to experiment}
\usage{
set_context(.edibble, ...)

sort_context(
  .edibble,
  descending = FALSE,
  method = c("auto", "shell", "radix")
)

suppress_context(.edibble)

express_context(.edibble)
}
\arguments{
\item{.edibble}{An edibble design (\code{EdibbleDesign}), an edibble data frame (\code{edbl_df}) or an
object that contains the edibble data frame in the attribute
\code{design}.}

\item{...}{Strings of contexts or notes for the experiment. The context
maybe named. If you context it is wrong, consider writing the context
in an external file then write the reference to the file in context
instead. Input strings support inline markup that use \href{https://github.com/tidyverse/glue}{glue braces}
as well \href{https://cli.r-lib.org/articles/semantic-cli.html#inline-text-formatting}{cli markup formatter}.
The formatting is evaluated and stored in \code{EdibbleDesign}.}

\item{descending}{Whether to sort it in ascending or descending alphabetical
order.}

\item{method}{the method to use for ordering. See \code{\link[base:order]{base::order()}} for
explanation.}
}
\value{
Same as original except \code{EdibbleDesign} updated with context.
}
\description{
\code{set_context} stores a simple context about the experiment.
The context is printed when the return object is printed as well
as exported in the title sheet (see \code{\link[=export_design]{export_design()}}). If the context
already exists then it will be overwritten.

You can use \code{sort_context} to reorder named context alphabetically. If
you don't want to see the context printed out each time, use \code{suppress_context}
to muffle the context and \code{express_context} to turn on the context print out.
Use \code{switch_context} to turn on print out of context if it was switched off,
or turn off print out if it was switched on.
}
\examples{
files <- c("details.txt", "about.docx")
start_design("COVID-19") \%>\%
  set_context(question = "Does {.field Pfizer vaccine} work?",
              where = "Tested in {.emph lab}",
              contact = "{.strong Jane Doe} ({.email jane.doe@fakeaddress.com}) for domain knowledge",
              "Context do not have to be named",
              "The function {.fn designRandomise} from {.pkg dae} randomises allocation of treatments",
              "Other detailed information in {.file {files}}",
              "Check more details at {.url https://covid-19-au.com/}")
}
\seealso{
Other user-facing functions: 
\code{\link{allocate_trts}()},
\code{\link{expect_vars}()},
\code{\link{export_design}()},
\code{\link{randomise_trts}()},
\code{\link{record_vars}()},
\code{\link{serve_table}()},
\code{\link{set_trts}()},
\code{\link{set_units}()},
\code{\link{start_design}()}
}
\concept{user-facing functions}
