[{"path":"https://edibble.emitanaka.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 edibble authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://edibble.emitanaka.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emi Tanaka. Author, maintainer, copyright holder.","code":""},{"path":"https://edibble.emitanaka.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tanaka, E. (2023) edibble: R-package experimental design. GitHub repository. https://github.com/emitanaka/edibble","code":"@Misc{,   title = {edibble: An R-package for experimental design},   author = {Emi Tanaka},   year = {2023},   publisher = {GitHub},   journal = {GitHub repository},   url = {https://github.com/emitanaka/edibble}, }"},{"path":[]},{"path":"https://edibble.emitanaka.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"edibble - an R package to facilitate construction of experimental designs","text":"can install package CRAN: can install development version :","code":"install.packages(\"edibble\") # install.packages(\"remotes\") remotes::install_github(\"emitanaka/edibble\")"},{"path":"https://edibble.emitanaka.org/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"edibble - an R package to facilitate construction of experimental designs","text":"goal edibble R-package aid plan, design simulation experiments mapping fundamental components experiments object oriented system. edibble system built principle system must make easy recover experimental context encouraging user explicit experimental details fundamental terms.","code":""},{"path":"https://edibble.emitanaka.org/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"edibble - an R package to facilitate construction of experimental designs","text":"Consider experiment want know effective way teaching (flipped traditional style) teaching particular subject different forms exams (take-home, open-book closed-book) affect student’s marks. four classes subject class holding 30 students. teaching style can applied whole class exam can different individual students. constructing experiment, might want think recording level unit values variables can recorded . export edibble design using export_design function, variables recording constraint values expect, e.g. factors, cells drop-menu select possible values.  addition, spreadsheet every observational level. E.g. room teacher students one class rather entering duplicate information, exported another sheet data entry.  also support complex nesting structures. can always make structure using edibble take resulting data frame use experimental design software. ’s also possible bring existing data frame edibble want take advantage exporting feature edibble.","code":"library(edibble)  set.seed(2020)  des <- design(name = \"Effective teaching\") %>%     set_units(class = 4,               student = nested_in(class, 30)) %>%     set_trts(style = c(\"flipped\", \"traditional\"),              exam = c(\"take-home\", \"open-book\", \"closed-book\")) %>%     allot_trts(style ~ class,                exam ~ student) %>%     assign_trts(\"random\")  serve_table(des) #> # An edibble: 120 x 4 #>        class     student       style        exam #>    <unit(4)> <unit(120)>    <trt(2)>    <trt(3)> #>        <chr>       <chr>       <chr>       <chr>                                 #>  1    class1  student001 traditional closed-book #>  2    class1  student002 traditional open-book   #>  3    class1  student003 traditional take-home   #>  4    class1  student004 traditional closed-book #>  5    class1  student005 traditional take-home   #>  6    class1  student006 traditional take-home   #>  7    class1  student007 traditional open-book   #>  8    class1  student008 traditional open-book   #>  9    class1  student009 traditional closed-book #> 10    class1  student010 traditional closed-book #> # ℹ 110 more rows out <- des %>%      set_rcrds_of(student = c(\"exam_mark\",                              \"quiz1_mark\",                              \"quiz2_mark\",                              \"gender\"),               class = c(\"room\",                         \"teacher\")) %>%     expect_rcrds(exam_mark <= 100,                  exam_mark >= 0,                  quiz1_mark <= 15L,                  quiz1_mark >= 0L,                  quiz2_mark <= 30L,                  quiz2_mark >= 0L,                  factor(gender, levels = c(\"female\", \"male\", \"non-binary\", \"unknown\"))) %>%     serve_table()  out #> # An edibble: 120 x 10 #>        class     student       style        exam exam_mark quiz1_mark quiz2_mark #>    <unit(4)> <unit(120)>    <trt(2)>    <trt(3)>    <rcrd>     <rcrd>     <rcrd> #>        <chr>       <chr>       <chr>       <chr>     <dbl>      <dbl>      <dbl> #>  1    class1  student001 traditional closed-book         o          o          o #>  2    class1  student002 traditional open-book           o          o          o #>  3    class1  student003 traditional take-home           o          o          o #>  4    class1  student004 traditional closed-book         o          o          o #>  5    class1  student005 traditional take-home           o          o          o #>  6    class1  student006 traditional take-home           o          o          o #>  7    class1  student007 traditional open-book           o          o          o #>  8    class1  student008 traditional open-book           o          o          o #>  9    class1  student009 traditional closed-book         o          o          o #> 10    class1  student010 traditional closed-book         o          o          o #> # ℹ 110 more rows #> # ℹ 3 more variables: gender <rcrd>, room <rcrd>, teacher <rcrd> export_design(out, file = \"/PATH/TO/FILE.xlsx\") design(\"nesting structure\") %>%    # there are 3 sites labelled A, B, C   set_units(site = c(\"A\", \"B\", \"C\"),             # each site has 2 blocks except B with 3 sites             block = nested_in(site,                                \"B\" ~ 3,                                 . ~ 2),             # levels can be specified by their number instead             # so for below \"block1\" has 30 plots,              # \"block2\" and \"block3\" has 40 plots,             # the rest of blocks have 20 plots.             plot = nested_in(block,                                1 ~ 30,                         c(2, 3) ~ 40,                               . ~ 20)) %>%    serve_table() #> # nesting structure  #> # An edibble: 190 x 3 #>         site     block        plot #>    <unit(3)> <unit(7)> <unit(190)> #>        <chr>     <chr>       <chr>                                               #>  1         A    block1     plot001 #>  2         A    block1     plot002 #>  3         A    block1     plot003 #>  4         A    block1     plot004 #>  5         A    block1     plot005 #>  6         A    block1     plot006 #>  7         A    block1     plot007 #>  8         A    block1     plot008 #>  9         A    block1     plot009 #> 10         A    block1     plot010 #> # ℹ 180 more rows"},{"path":"https://edibble.emitanaka.org/index.html","id":"experimental-data","dir":"","previous_headings":"","what":"Experimental data","title":"edibble - an R package to facilitate construction of experimental designs","text":"tidyverse well suited data science project workflow illustrated (B) (Grolemund Wickham 2017). experimental data, statistical aspect begins obtaining data depicted (). focus edibble facilitate work ().  edibble R-package differ considerably packages constructing experimental design focus whole process less randomisation process (software generally focus well ). features include: declaratively create experimental designs based experimental components (e.g. units treatments), explicitly specify variables recorded (e.g. response), set expected values variables recorded restrict data entry design exported xlsx file, simulate values record variables, make classical named designs see Cookbook chapter.","code":""},{"path":"https://edibble.emitanaka.org/index.html","id":"documents","dir":"","previous_headings":"","what":"Documents","title":"edibble - an R package to facilitate construction of experimental designs","text":"Work--progress book package can found . preprint framework can found .","code":""},{"path":"https://edibble.emitanaka.org/index.html","id":"limitations","dir":"","previous_headings":"","what":"Limitations","title":"edibble - an R package to facilitate construction of experimental designs","text":"Currently, edibble: expects know number units available start. Unknown numbers supported future versions. edibble supports experiments comparative experiments. enough testing design diagnosed construction (done regardless much testing edibble implements).","code":""},{"path":"https://edibble.emitanaka.org/index.html","id":"related-work","dir":"","previous_headings":"","what":"Related Work","title":"edibble - an R package to facilitate construction of experimental designs","text":"way edibble specifies experimental design largely novel (say ) work resembles . ’m concurrently working two extension packages: deggust - visualise designs constructed edibble ggplot2 objects (WIP). sizzled - experiments require sample size calculation (WIP). related work. can also look CRAN Task View Design Experiment Analysis Experimental Data whole collection. DeclareDesign survey sampling designs designr balanced factorial designs crossed nested random fixed effect data frame dae functions useful design ANOVA experiments (fact powering randomisation edibble) plotdesignr designing agronomic field experiments","code":""},{"path":"https://edibble.emitanaka.org/index.html","id":"acknowledgement","dir":"","previous_headings":"","what":"Acknowledgement","title":"edibble - an R package to facilitate construction of experimental designs","text":"edibble hugely inspired work Tidyverse Team. ’m grateful dedication work Tidyverse Team, well R Development Core Team supports core R ecosystem, made developing package possible.","code":""},{"path":"https://edibble.emitanaka.org/index.html","id":"tidyverse-familiarity","dir":"","previous_headings":"","what":"Tidyverse familiarity","title":"edibble - an R package to facilitate construction of experimental designs","text":"implementation edibble adopt similar nomenclature design philosophy tidyverse (, ’s likely shortcoming) tidyverse users can leverage familiarity tidyverse language using edibble. Specifically, edibble follows philosophy: main functions one thing consistent form <verb>_<noun> (e.g. set_units set_rcrds) nouns generally plural. Exceptions subject matter clearly singular (e.g. design set_context); pipable functions; dots arguments dynamic dots; duplicate names repaired option tibble additions edibble graph; ability developers extend certain components. specification complex nested structure drawing similarity dplyr::case_when (LHS character integer edibble however).","code":""},{"path":"https://edibble.emitanaka.org/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"edibble - an R package to facilitate construction of experimental designs","text":"Please note edibble project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":null,"dir":"Reference","previous_headings":"","what":"An object to query, record and modify an edibble graph — Provenance","title":"An object to query, record and modify an edibble graph — Provenance","text":"object query, record modify edibble graph object query, record modify edibble graph","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"An object to query, record and modify an edibble graph — Provenance","text":"Provenance contains set operations manipulate nodes edges edibble graph object.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"An object to query, record and modify an edibble graph — Provenance","text":"fct_nodes Get factor nodes lvl_nodes Get level nodes fct_edges Get factor edges lvl_edges Get level edges fct_n Get number nodes factor graph lvl_n Get number nodes level graph rcrd_ids Get ids edbl_rcrd factors. unit_ids Get ids edbl_unit factors. trt_ids Get ids edbl_trt factors. is_connected Check nodes connected. Get new factor id. Get new level id. Given particular DAG, return topological order Remember one order.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"An object to query, record and modify an edibble graph — Provenance","text":"Provenance$new() Provenance$set_title() Provenance$set_name() Provenance$set_validation() Provenance$set_simulate() Provenance$reactivate() Provenance$deactivate() Provenance$fct_id() Provenance$fct_id_parent() Provenance$fct_id_child() Provenance$fct_id_ancestor() Provenance$fct_id_descendant() Provenance$fct_id_leaves() Provenance$lvl_id() Provenance$lvl_id_parent() Provenance$lvl_id_child() Provenance$lvl_id_ancestor() Provenance$fct_id_from_lvl_id() Provenance$fct_id_from_lvl_values() Provenance$lvl_id_from_fct_id() Provenance$fct_names() Provenance$unit_names() Provenance$trt_names() Provenance$rcrd_names() Provenance$rcrd_class() Provenance$lvl_values() Provenance$unit_values() Provenance$trt_values() Provenance$rcrd_values() Provenance$fct_role() Provenance$fct_levels() Provenance$fct_levels_id_to_edbl_fct() Provenance$fct_levels_id_to_value() Provenance$fct_levels_value_to_id() Provenance$fct_exists() Provenance$trt_exists() Provenance$unit_exists() Provenance$rcrd_exists() Provenance$append_fct_nodes() Provenance$append_lvl_nodes() Provenance$append_fct_edges() Provenance$append_lvl_edges() Provenance$serve_units() Provenance$serve_trts() Provenance$serve_rcrds() Provenance$make_trts_table() Provenance$graph_subset() Provenance$save_seed() Provenance$get_title() Provenance$get_validation() Provenance$get_trail() Provenance$get_graph() Provenance$get_seed() Provenance$get_session_info() Provenance$get_edibble_version() Provenance$get_simulate() Provenance$get_simulate_result_env() Provenance$mapping() Provenance$mapping_to_unit() Provenance$record_step() Provenance$lvl_mapping() Provenance$record_track_external() Provenance$fct_id_links() Provenance$fct_graph_components() Provenance$lvl_graph_components() Provenance$clone()","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Initialise function","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$new(graph = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"graph edibble graph.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-set-title-","dir":"Reference","previous_headings":"","what":"Method set_title()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Set title.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$set_title(title)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"title title experiment","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-set-name-","dir":"Reference","previous_headings":"","what":"Method set_name()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Set name.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$set_name(name)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"name name edibble graph object.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-set-validation-","dir":"Reference","previous_headings":"","what":"Method set_validation()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Set validation.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$set_validation(validation, type = \"rcrds\")"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"validation validation statement. type type validation.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-set-simulate-","dir":"Reference","previous_headings":"","what":"Method set_simulate()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Set simulation process","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$set_simulate(name, process, rcrds)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"name name process process function simulate record rcrds record factor name simulating .","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-reactivate-","dir":"Reference","previous_headings":"","what":"Method reactivate()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Reactivate graph provenance object.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$reactivate(   design,   overwrite = c(\"graph\", \"anatomy\", \"recipe\", \"validation\", \"simulate\") )"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"design edibble design overwrite vector character overwrite supplied design object.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-deactivate-","dir":"Reference","previous_headings":"","what":"Method deactivate()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Deactivate provenance object.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$deactivate(delete = c(\"graph\", \"anatomy\", \"recipe\", \"validation\"))"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"delete vector character delete.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-id-","dir":"Reference","previous_headings":"","what":"Method fct_id()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get id based either name factor node. none supplied give .","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_id(name = NULL, role = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"name name node. role role node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-id-parent-","dir":"Reference","previous_headings":"","what":"Method fct_id_parent()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get factor parent ids","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_id_parent(id = NULL, role = NULL, type = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. role role node. type type edge link.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-id-child-","dir":"Reference","previous_headings":"","what":"Method fct_id_child()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get factor child ids. role supplied child fit role","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_id_child(id = NULL, role = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. role role node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-id-ancestor-","dir":"Reference","previous_headings":"","what":"Method fct_id_ancestor()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get factor ancestor ids","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_id_ancestor(id = NULL, role = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. role role node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-id-descendant-","dir":"Reference","previous_headings":"","what":"Method fct_id_descendant()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get factor descendant ids","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_id_descendant(id = NULL, role = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. role role node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-id-leaves-","dir":"Reference","previous_headings":"","what":"Method fct_id_leaves()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get leave factor ids.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_id_leaves(role = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"role role node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-lvl-id-","dir":"Reference","previous_headings":"","what":"Method lvl_id()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get id based name level node. Assumes level ids obtained fid","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$lvl_id(value = NULL, role = NULL, fid = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"value value node. role role node. fid factor id.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-lvl-id-parent-","dir":"Reference","previous_headings":"","what":"Method lvl_id_parent()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get level parent ids","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$lvl_id_parent(id = NULL, role = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. role role node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-lvl-id-child-","dir":"Reference","previous_headings":"","what":"Method lvl_id_child()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get level child ids","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$lvl_id_child(id = NULL, role = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. role role node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-lvl-id-ancestor-","dir":"Reference","previous_headings":"","what":"Method lvl_id_ancestor()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get level ancestor ids","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$lvl_id_ancestor(id = NULL, role = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. role role node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-id-from-lvl-id-","dir":"Reference","previous_headings":"","what":"Method fct_id_from_lvl_id()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Find factor id level ids.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_id_from_lvl_id(id = NULL, fid_search = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. fid_search vector fids search .","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-id-from-lvl-values-","dir":"Reference","previous_headings":"","what":"Method fct_id_from_lvl_values()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Find factor id level values.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_id_from_lvl_values(value = NULL, fid_search = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"value value node. fid_search vector fids search .","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-lvl-id-from-fct-id-","dir":"Reference","previous_headings":"","what":"Method lvl_id_from_fct_id()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Find level id given fid","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$lvl_id_from_fct_id(fid = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"fid factor id.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-names-","dir":"Reference","previous_headings":"","what":"Method fct_names()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get factor names based id role","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_names(id = NULL, role = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. role role node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-unit-names-","dir":"Reference","previous_headings":"","what":"Method unit_names()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get unit names","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$unit_names(id = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-trt-names-","dir":"Reference","previous_headings":"","what":"Method trt_names()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get treatment names","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$trt_names(id = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-rcrd-names-","dir":"Reference","previous_headings":"","what":"Method rcrd_names()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get record names.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$rcrd_names(id = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-23","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-rcrd-class-","dir":"Reference","previous_headings":"","what":"Method rcrd_class()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get class record validation.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$rcrd_class(name = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-24","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"name name node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-lvl-values-","dir":"Reference","previous_headings":"","what":"Method lvl_values()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get level values based id role just role defined. id must fid","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$lvl_values(id = NULL, role = NULL, fid = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-25","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. role role node. fid factor id.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-unit-values-","dir":"Reference","previous_headings":"","what":"Method unit_values()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get unit values.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$unit_values(id = NULL, fid = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-26","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. fid factor id.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-trt-values-","dir":"Reference","previous_headings":"","what":"Method trt_values()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get treatment values.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$trt_values(id = NULL, fid = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-27","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. fid factor id.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-rcrd-values-","dir":"Reference","previous_headings":"","what":"Method rcrd_values()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get record values.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$rcrd_values(uid = NULL, fid = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-28","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"uid unit level id fid factor id.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-role-","dir":"Reference","previous_headings":"","what":"Method fct_role()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get role vertex given factor id","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_role(id = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-29","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-levels-","dir":"Reference","previous_headings":"","what":"Method fct_levels()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get levels factor","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_levels(id = NULL, name = NULL, return = c(\"id\", \"value\"))"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-30","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. name name node. return return \"id\" \"value\" format.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-levels-id-to-edbl-fct-","dir":"Reference","previous_headings":"","what":"Method fct_levels_id_to_edbl_fct()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Factor levels edble factor","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_levels_id_to_edbl_fct(fct_levels, role)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-31","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"fct_levels factor levels id. role role node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-levels-id-to-value-","dir":"Reference","previous_headings":"","what":"Method fct_levels_id_to_value()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get factor levels value given id format","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_levels_id_to_value(fct_levels)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-32","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"fct_levels list factor levels id format.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-levels-value-to-id-","dir":"Reference","previous_headings":"","what":"Method fct_levels_value_to_id()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get factor levels id given value format.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_levels_value_to_id(fct_levels)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-33","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"fct_levels list factor levels id format.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-exists-","dir":"Reference","previous_headings":"","what":"Method fct_exists()","title":"An object to query, record and modify an edibble graph — Provenance","text":"One name, id role defined check exists. one arguments name, id role supplied, intersection checked.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_exists(id = NULL, name = NULL, role = NULL, abort = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-34","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. name name node. role role node. abort Whether abort.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-trt-exists-","dir":"Reference","previous_headings":"","what":"Method trt_exists()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Check treatment exists.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$trt_exists(id = NULL, name = NULL, abort = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-35","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. name name node. abort Whether abort.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-unit-exists-","dir":"Reference","previous_headings":"","what":"Method unit_exists()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Check unit exists.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$unit_exists(id = NULL, name = NULL, abort = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-36","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. name name node. abort Whether abort.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-rcrd-exists-","dir":"Reference","previous_headings":"","what":"Method rcrd_exists()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Check record exists.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-37","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$rcrd_exists(id = NULL, name = NULL, abort = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-37","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. name name node. abort Whether abort.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-append-fct-nodes-","dir":"Reference","previous_headings":"","what":"Method append_fct_nodes()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Given node data, append factor nodes","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-38","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$append_fct_nodes(name, role, attrs = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-38","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"name name node. role role node. attrs attributes.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-append-lvl-nodes-","dir":"Reference","previous_headings":"","what":"Method append_lvl_nodes()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Given node data, append level nodes","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-39","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$append_lvl_nodes(   value,   n = NULL,   label = NULL,   attrs = NULL,   fid = NULL )"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-39","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"value value node. n number replications. label labels levels. attrs attributes. fid factor id.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-append-fct-edges-","dir":"Reference","previous_headings":"","what":"Method append_fct_edges()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Given edge data, append factor edges","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-40","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$append_fct_edges(from, to, type = NULL, group = NULL, attrs = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-40","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"node id . node id . type type edges. group group id. attrs attributes.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-append-lvl-edges-","dir":"Reference","previous_headings":"","what":"Method append_lvl_edges()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Given edge data, append level edges","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-41","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$append_lvl_edges(from, to, attrs = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-41","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"node id . node id . attrs attributes.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-serve-units-","dir":"Reference","previous_headings":"","what":"Method serve_units()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Serve units.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-42","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$serve_units(id = NULL, return = c(\"id\", \"value\"))"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-42","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. return return \"id\" \"value\" format.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-serve-trts-","dir":"Reference","previous_headings":"","what":"Method serve_trts()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Serve treatments","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-43","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$serve_trts(id = NULL, return = c(\"id\", \"value\"))"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-43","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. return return \"id\" \"value\" format.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-serve-rcrds-","dir":"Reference","previous_headings":"","what":"Method serve_rcrds()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Serve records","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-44","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$serve_rcrds(id = NULL, return = c(\"id\", \"value\"))"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-44","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. return return \"id\" \"value\" format.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-make-trts-table-","dir":"Reference","previous_headings":"","what":"Method make_trts_table()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Make treatments table","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-45","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$make_trts_table(id = NULL, return = c(\"id\", \"value\"))"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-45","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. return return \"id\" \"value\" format.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"An object to query, record and modify an edibble graph — Provenance","text":"treatment table","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-graph-subset-","dir":"Reference","previous_headings":"","what":"Method graph_subset()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Subset graph","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-46","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$graph_subset(   id = NULL,   include = c(\"self\", \"child\", \"parent\", \"ancestors\") )"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-46","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. include \"self\" input id, \"child\" child also, \"parent\" parent also, nodes immediately related, \"ancestors\" ancestors","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"An object to query, record and modify an edibble graph — Provenance","text":"subsetted graph","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-save-seed-","dir":"Reference","previous_headings":"","what":"Method save_seed()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Save seed","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-47","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$save_seed(seed, type)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-47","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"seed seed. type Type.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-get-title-","dir":"Reference","previous_headings":"","what":"Method get_title()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get title","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-48","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$get_title()"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-get-validation-","dir":"Reference","previous_headings":"","what":"Method get_validation()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get validation","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-49","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$get_validation(type = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-48","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"type type.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-get-trail-","dir":"Reference","previous_headings":"","what":"Method get_trail()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get trail.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-50","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$get_trail()"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-get-graph-","dir":"Reference","previous_headings":"","what":"Method get_graph()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get graph","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-51","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$get_graph()"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-get-seed-","dir":"Reference","previous_headings":"","what":"Method get_seed()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get seed","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-52","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$get_seed()"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-get-session-info-","dir":"Reference","previous_headings":"","what":"Method get_session_info()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get session information","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-53","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$get_session_info()"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-get-edibble-version-","dir":"Reference","previous_headings":"","what":"Method get_edibble_version()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get edibble version.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-54","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$get_edibble_version()"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-get-simulate-","dir":"Reference","previous_headings":"","what":"Method get_simulate()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get simulation information","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-55","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$get_simulate(name = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-49","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"name process name. one name allowed.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-get-simulate-result-env-","dir":"Reference","previous_headings":"","what":"Method get_simulate_result_env()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get simulation results","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-56","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$get_simulate_result_env(name = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-50","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"name process name. one name allowed.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-mapping-","dir":"Reference","previous_headings":"","what":"Method mapping()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Mapping role role","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-57","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$mapping(role_from, role_to)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-51","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"role_from role . role_to role .","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-mapping-to-unit-","dir":"Reference","previous_headings":"","what":"Method mapping_to_unit()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Mapping id unit","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-58","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$mapping_to_unit(id = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-52","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-record-step-","dir":"Reference","previous_headings":"","what":"Method record_step()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Record step.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-59","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$record_step()"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-lvl-mapping-","dir":"Reference","previous_headings":"","what":"Method lvl_mapping()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get level edges factor","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-60","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$lvl_mapping(from, to, return = c(\"vector\", \"table\"))"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-53","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":", factor id. return return \"id\" \"value\" format.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-record-track-external-","dir":"Reference","previous_headings":"","what":"Method record_track_external()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Record track external.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-61","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$record_track_external(code)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-54","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"code code record.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-id-links-","dir":"Reference","previous_headings":"","what":"Method fct_id_links()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Find id linked.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-62","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_id_links(id = NULL, role = NULL, link = c(\"direct\", \"indirect\"))"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-55","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node. role role node. link Whether link direct indirect","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"An object to query, record and modify an edibble graph — Provenance","text":"id linked factors, excluding .","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-fct-graph-components-","dir":"Reference","previous_headings":"","what":"Method fct_graph_components()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get nodes components (subgraph number)","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-63","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$fct_graph_components(id = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-56","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"id id corresponding node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-lvl-graph-components-","dir":"Reference","previous_headings":"","what":"Method lvl_graph_components()","title":"An object to query, record and modify an edibble graph — Provenance","text":"Get nodes components (subgraph number)","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-64","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$lvl_graph_components()"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"An object to query, record and modify an edibble graph — Provenance","text":"objects class cloneable method.","code":""},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"usage-65","dir":"Reference","previous_headings":"","what":"Usage","title":"An object to query, record and modify an edibble graph — Provenance","text":"","code":"Provenance$clone(deep = FALSE)"},{"path":"https://edibble.emitanaka.org/reference/Provenance.html","id":"arguments-57","dir":"Reference","previous_headings":"","what":"Arguments","title":"An object to query, record and modify an edibble graph — Provenance","text":"deep Whether make deep clone.","code":""},{"path":"https://edibble.emitanaka.org/reference/activate_provenance.html","id":null,"dir":"Reference","previous_headings":"","what":"Activate the provenance in the edibble design object — activate_provenance","title":"Activate the provenance in the edibble design object — activate_provenance","text":"developer function create new Kitchen class existing design.","code":""},{"path":"https://edibble.emitanaka.org/reference/activate_provenance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Activate the provenance in the edibble design object — activate_provenance","text":"","code":"activate_provenance(   .edibble,   overwrite = c(\"graph\", \"anatomy\", \"recipe\", \"validation\", \"simulate\") )"},{"path":"https://edibble.emitanaka.org/reference/activate_provenance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Activate the provenance in the edibble design object — activate_provenance","text":".edibble edibble object. overwrite object overwrite provenance object.","code":""},{"path":"https://edibble.emitanaka.org/reference/activate_provenance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Activate the provenance in the edibble design object — activate_provenance","text":"Provenance object.","code":""},{"path":"https://edibble.emitanaka.org/reference/activate_provenance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Activate the provenance in the edibble design object — activate_provenance","text":"","code":"activate_provenance(takeout()) #> → No name was supplied so selecting a random named experimental design... #> → Selected Factorial Design #> <Provenance> #>   Public: #>     append_fct_edges: function (from, to, type = NULL, group = NULL, attrs = NULL)  #>     append_fct_nodes: function (name, role, attrs = NULL)  #>     append_lvl_edges: function (from, to, attrs = NULL)  #>     append_lvl_nodes: function (value, n = NULL, label = NULL, attrs = NULL, fid = NULL)  #>     clone: function (deep = FALSE)  #>     deactivate: function (delete = c(\"graph\", \"anatomy\", \"recipe\", \"validation\"))  #>     fct_edges: active binding #>     fct_exists: function (id = NULL, name = NULL, role = NULL, abort = TRUE)  #>     fct_graph_components: function (id = NULL)  #>     fct_id: function (name = NULL, role = NULL)  #>     fct_id_ancestor: function (id = NULL, role = NULL)  #>     fct_id_child: function (id = NULL, role = NULL)  #>     fct_id_descendant: function (id = NULL, role = NULL)  #>     fct_id_from_lvl_id: function (id = NULL, fid_search = NULL)  #>     fct_id_from_lvl_values: function (value = NULL, fid_search = NULL)  #>     fct_id_leaves: function (role = NULL)  #>     fct_id_links: function (id = NULL, role = NULL, link = c(\"direct\", \"indirect\"))  #>     fct_id_parent: function (id = NULL, role = NULL, type = NULL)  #>     fct_levels: function (id = NULL, name = NULL, return = c(\"id\", \"value\"))  #>     fct_levels_id_to_edbl_fct: function (fct_levels, role)  #>     fct_levels_id_to_value: function (fct_levels)  #>     fct_levels_value_to_id: function (fct_levels)  #>     fct_n: active binding #>     fct_names: function (id = NULL, role = NULL)  #>     fct_nodes: active binding #>     fct_role: function (id = NULL)  #>     get_edibble_version: function ()  #>     get_graph: function ()  #>     get_seed: function ()  #>     get_session_info: function ()  #>     get_simulate: function (name = NULL)  #>     get_simulate_result_env: function (name = NULL)  #>     get_title: function ()  #>     get_trail: function ()  #>     get_validation: function (type = NULL)  #>     graph_subset: function (id = NULL, include = c(\"self\", \"child\", \"parent\", \"ancestors\"))  #>     initialize: function (graph = NULL)  #>     is_connected: active binding #>     lvl_edges: active binding #>     lvl_graph_components: function ()  #>     lvl_id: function (value = NULL, role = NULL, fid = NULL)  #>     lvl_id_ancestor: function (id = NULL, role = NULL)  #>     lvl_id_child: function (id = NULL, role = NULL)  #>     lvl_id_from_fct_id: function (fid = NULL)  #>     lvl_id_parent: function (id = NULL, role = NULL)  #>     lvl_mapping: function (from, to, return = c(\"vector\", \"table\"))  #>     lvl_n: active binding #>     lvl_nodes: active binding #>     lvl_values: function (id = NULL, role = NULL, fid = NULL)  #>     make_trts_table: function (id = NULL, return = c(\"id\", \"value\"))  #>     mapping: function (role_from, role_to)  #>     mapping_to_unit: function (id = NULL)  #>     rcrd_class: function (name = NULL)  #>     rcrd_exists: function (id = NULL, name = NULL, abort = TRUE)  #>     rcrd_ids: active binding #>     rcrd_names: function (id = NULL)  #>     rcrd_values: function (uid = NULL, fid = NULL)  #>     reactivate: function (design, overwrite = c(\"graph\", \"anatomy\", \"recipe\",  #>     record_step: function ()  #>     record_track_external: function (code)  #>     save_seed: function (seed, type)  #>     serve_rcrds: function (id = NULL, return = c(\"id\", \"value\"))  #>     serve_trts: function (id = NULL, return = c(\"id\", \"value\"))  #>     serve_units: function (id = NULL, return = c(\"id\", \"value\"))  #>     set_name: function (name)  #>     set_simulate: function (name, process, rcrds)  #>     set_title: function (title)  #>     set_validation: function (validation, type = \"rcrds\")  #>     trt_exists: function (id = NULL, name = NULL, abort = TRUE)  #>     trt_ids: active binding #>     trt_names: function (id = NULL)  #>     trt_values: function (id = NULL, fid = NULL)  #>     unit_exists: function (id = NULL, name = NULL, abort = TRUE)  #>     unit_ids: active binding #>     unit_names: function (id = NULL)  #>     unit_values: function (id = NULL, fid = NULL)  #>   Private: #>     add_trail_internal: function (code)  #>     anatomy: formula #>     build_condtable: function (subgraph, return)  #>     build_subtable: function (subgraph, return)  #>     edbl_version: package_version, numeric_version #>     fct_id_last: 3 #>     fct_new_id: function (n = 1)  #>     graph: edbl_graph #>     graph_topological_order: function (graph, reverse = TRUE)  #>     lvl_id_last: 107 #>     lvl_new_id: function (n = 1)  #>     name: edibble #>     node_id_parent_child: function (id = NULL, role = NULL, type = NULL, node = c(\"factor\",  #>     recipe: design(title = \"Factorial Design\") set_units(.edibble =  ... #>     record_track_internal: function ()  #>     seed: list #>     session_info: sessionInfo #>     simulate: list #>     simulate_result_env: environment #>     table: list #>     title: Factorial Design #>     trail: list #>     validate_id: function (id, n = NULL, role = NULL)  #>     validate_name: function (name)  #>     validate_role: function (role)  #>     validation: list #>     var_id_ancestor: function (id = NULL, role = NULL, node = c(\"factor\", \"level\"))  #>     var_id_descendant: function (id = NULL, role = NULL, node = c(\"factor\", \"level\"))"},{"path":"https://edibble.emitanaka.org/reference/allot_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Allot treatments to units and serve table — allot_table","title":"Allot treatments to units and serve table — allot_table","text":"function short hand combines allot_trts(), assign_trts() serve_table().","code":""},{"path":"https://edibble.emitanaka.org/reference/allot_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Allot treatments to units and serve table — allot_table","text":"","code":"allot_table(   .edibble,   ...,   order = \"random\",   seed = NULL,   constrain = nesting_structure(.edibble),   .record = TRUE )"},{"path":"https://edibble.emitanaka.org/reference/allot_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Allot treatments to units and serve table — allot_table","text":".edibble edibble design units, treatments allotment defined. ... One-sided two-sided formula. input one-sided formula whole treatment applied specified unit. order character vector signifying apportion treatments units. value either \"random\", \"systematic\", \"systematic-random\" class name corresponding algorithm order_trts(). \"random\" allocates treatment randomly units based specified allotment restrictions implied unit structure. \"systematic\" allocates treatment systematic order units. \"systematic-random\" allocates treatment systematic order units possible divide treatments equally (number units divisible number levels treatment factor), extras chosen randomly. seed scalar value used set seed result reproducible. constrain nesting structure units. .record Whether record step.","code":""},{"path":"https://edibble.emitanaka.org/reference/allot_trts.html","id":null,"dir":"Reference","previous_headings":"","what":"Define allotment of treatments to units — allot_trts","title":"Define allotment of treatments to units — allot_trts","text":"function adds edges factor nodes describe high-level relationship factors. function actually assign edges level nodes.","code":""},{"path":"https://edibble.emitanaka.org/reference/allot_trts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define allotment of treatments to units — allot_trts","text":"","code":"allot_trts(.edibble, ..., .record = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/allot_trts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define allotment of treatments to units — allot_trts","text":".edibble edibble design units, treatments allotment defined. ... One-sided two-sided formula. input one-sided formula whole treatment applied specified unit. .record Whether record step.","code":""},{"path":"https://edibble.emitanaka.org/reference/allot_trts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define allotment of treatments to units — allot_trts","text":"Return edibble design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/allot_trts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define allotment of treatments to units — allot_trts","text":"","code":"design() %>%   set_units(block = 10,             plot = nested_in(block, 3)) %>%   set_trts(treat = c(\"A\", \"B\", \"C\"),            pest = c(\"a\", \"b\")) %>%   allot_trts(treat ~ plot,               pest ~ block) #> An edibble design #> ├─block (10 levels) #> │ └─plot (30 levels) #> │   └─treat (3 levels) #> └─pest (2 levels)"},{"path":"https://edibble.emitanaka.org/reference/allot_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Define allotment of units to nested units — allot_units","title":"Define allotment of units to nested units — allot_units","text":"function adds edges factor nodes describe high-level relationship factors. function actually assign edges level nodes.","code":""},{"path":"https://edibble.emitanaka.org/reference/allot_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define allotment of units to nested units — allot_units","text":"","code":"allot_units(.edibble, ..., .record = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/allot_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define allotment of units to nested units — allot_units","text":".edibble edibble design units, treatments allotment defined. ... two-sided formula. .record Whether record step.","code":""},{"path":"https://edibble.emitanaka.org/reference/allot_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define allotment of units to nested units — allot_units","text":"Return edibble design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/allot_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define allotment of units to nested units — allot_units","text":"","code":"design() %>%   set_units(block = 10,             plot = 20) %>%   allot_units(block ~ plot) #> An edibble design #> └─block (10 levels) #>   └─plot (20 levels)"},{"path":"https://edibble.emitanaka.org/reference/as.data.frame.edbl_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert edibble table to normal data frame — as.data.frame.edbl_table","title":"Convert edibble table to normal data frame — as.data.frame.edbl_table","text":"Convert edibble table normal data frame","code":""},{"path":"https://edibble.emitanaka.org/reference/as.data.frame.edbl_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert edibble table to normal data frame — as.data.frame.edbl_table","text":"","code":"# S3 method for edbl_table as.data.frame(x, ..., levels_as = \"factor\", ignore_numeric = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/as.data.frame.edbl_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert edibble table to normal data frame — as.data.frame.edbl_table","text":"x edibble table ... Unused. .e. coerce numeric factors. levels_as Coerce edibble factors either \"factor\" \"character\". ignore_numeric Whether coerce numeric factors . Default TRUE,","code":""},{"path":"https://edibble.emitanaka.org/reference/as_tibble.edbl_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an edibble data frame to normal data frame — as_tibble.edbl_table","title":"Convert an edibble data frame to normal data frame — as_tibble.edbl_table","text":"patch function issue edbl factors","code":""},{"path":"https://edibble.emitanaka.org/reference/as_tibble.edbl_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an edibble data frame to normal data frame — as_tibble.edbl_table","text":"","code":"# S3 method for edbl_table as_tibble(x, ...)"},{"path":"https://edibble.emitanaka.org/reference/as_tibble.edbl_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an edibble data frame to normal data frame — as_tibble.edbl_table","text":"x can list data frame ... currently used.","code":""},{"path":"https://edibble.emitanaka.org/reference/as_tibble.edbl_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an edibble data frame to normal data frame — as_tibble.edbl_table","text":"data.frame.","code":""},{"path":"https://edibble.emitanaka.org/reference/assign_fcts.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign treatments or units to units — assign_fcts","title":"Assign treatments or units to units — assign_fcts","text":"function assigns specific treatment unit levels actual units.","code":""},{"path":"https://edibble.emitanaka.org/reference/assign_fcts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign treatments or units to units — assign_fcts","text":"","code":"assign_trts(   .edibble,   order = \"random\",   seed = NULL,   constrain = nesting_structure(.edibble),   ...,   .record = TRUE )  assign_units(   .edibble,   order = \"random\",   seed = NULL,   constrain = nesting_structure(.edibble),   ...,   .record = TRUE )"},{"path":"https://edibble.emitanaka.org/reference/assign_fcts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign treatments or units to units — assign_fcts","text":".edibble edibble design units, treatments allotment defined. order character vector signifying apportion treatments units. value either \"random\", \"systematic\", \"systematic-random\" class name corresponding algorithm order_trts(). \"random\" allocates treatment randomly units based specified allotment restrictions implied unit structure. \"systematic\" allocates treatment systematic order units. \"systematic-random\" allocates treatment systematic order units possible divide treatments equally (number units divisible number levels treatment factor), extras chosen randomly. seed scalar value used set seed result reproducible. constrain nesting structure units. ... Arguments parsed order_trts functions. .record Whether record step.","code":""},{"path":"https://edibble.emitanaka.org/reference/assign_fcts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign treatments or units to units — assign_fcts","text":"edibble design.","code":""},{"path":"https://edibble.emitanaka.org/reference/assign_fcts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign treatments or units to units — assign_fcts","text":"","code":"# 10 subject, 2 vaccine treatments design() %>%   set_units(subject = 10) %>%   set_trts(vaccine = 2) %>%   allot_trts(vaccine ~ subject) %>%   assign_trts() %>%   serve_table() #> # An edibble: 10 x 2 #>       subject  vaccine #>    <unit(10)> <trt(2)> #>         <chr>    <chr>                                                           #>  1  subject01 vaccine1 #>  2  subject02 vaccine1 #>  3  subject03 vaccine2 #>  4  subject04 vaccine2 #>  5  subject05 vaccine2 #>  6  subject06 vaccine1 #>  7  subject07 vaccine2 #>  8  subject08 vaccine2 #>  9  subject09 vaccine1 #> 10  subject10 vaccine1  # 20 subjects, 2 blocks, assign subjects to blocks design() %>%   set_units(subject = 20,             block = 2) %>%   allot_units(block ~ subject) %>%   assign_units() %>%   serve_table() #> Error in serve_table(.): The graph cannot be converted to a table format."},{"path":"https://edibble.emitanaka.org/reference/autofill_rcrds.html","id":null,"dir":"Reference","previous_headings":"","what":"Autofill the records — autofill_rcrds","title":"Autofill the records — autofill_rcrds","text":"function fills values record factors automatically choosing simulation process. tries smart ensuring use values within expectation.","code":""},{"path":"https://edibble.emitanaka.org/reference/autofill_rcrds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autofill the records — autofill_rcrds","text":"","code":"autofill_rcrds(.data, ..., .seed = NULL)"},{"path":"https://edibble.emitanaka.org/reference/autofill_rcrds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Autofill the records — autofill_rcrds","text":".data edibble data. ... supplied, name-value pair name correspond record factor name value f .seed seed number.","code":""},{"path":"https://edibble.emitanaka.org/reference/column.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a column. — column","title":"Select a column. — column","text":"helper function select column data supplied lvls.","code":""},{"path":"https://edibble.emitanaka.org/reference/column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a column. — column","text":"","code":"column(x)"},{"path":"https://edibble.emitanaka.org/reference/column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select a column. — column","text":"x column select. Can unquoted name column index.","code":""},{"path":"https://edibble.emitanaka.org/reference/crossed_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify the units to cross to index a new unit — crossed_by","title":"Specify the units to cross to index a new unit — crossed_by","text":"crossed_by(, B) ~:B crossed_by offers control names new units well adding new attributes.","code":""},{"path":"https://edibble.emitanaka.org/reference/crossed_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify the units to cross to index a new unit — crossed_by","text":"","code":"crossed_by(..., attrs = NULL)"},{"path":"https://edibble.emitanaka.org/reference/crossed_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify the units to cross to index a new unit — crossed_by","text":"... sequence units attrs Currently implemented.","code":""},{"path":"https://edibble.emitanaka.org/reference/crossed_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify the units to cross to index a new unit — crossed_by","text":"object class \"cross_lvls\".","code":""},{"path":"https://edibble.emitanaka.org/reference/crossed_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify the units to cross to index a new unit — crossed_by","text":"","code":"design(\"Strip-Plot Design | Strip-Unit Design\") %>%   set_units(block = 3,             row = nested_in(block, 7),             col = nested_in(block, 6),             unit = nested_in(block, crossed_by(row, col))) #> Strip-Plot Design | Strip-Unit Design #> └─block (3 levels) #>   ├─row (21 levels) #>   │ └─unit (126 levels) #>   ├─col (18 levels) #>   │ └─unit (126 levels) #>   └─unit (126 levels)"},{"path":"https://edibble.emitanaka.org/reference/design-helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Test and get edibble objects — design-helpers","title":"Test and get edibble objects — design-helpers","text":"functions tests object (object attribute) inherits particular class returns TRUE , otherwise FALSE. is_edibble_design checks inherits edbl_design. is_edibble_graph checks inherits edbl_graph. is_edibble_table checks inherits edbl_table is_edibble checks object inherits edbl. search quite simple, checks object edbl_design, failing looks see attribute \"design\" object edbl_design. is_named_design check inherits NamedDesign. get functions extracts requested edibble component (table, graph, design) object possible. edbl_design tries get edbl_design. edbl_table tries get edbl_table design attribute. edbl_graph tries get edbl_graph.","code":""},{"path":"https://edibble.emitanaka.org/reference/design-helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test and get edibble objects — design-helpers","text":"","code":"is_edibble_design(x)  is_named_design(x)  is_edibble_table(x)  is_edibble_graph(x)  is_edibble(x)  is_edibble_levels(x)  is_nest_levels(x)  is_cross_levels(x)  edbl_design(x)  edbl_table(x)"},{"path":"https://edibble.emitanaka.org/reference/design-helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test and get edibble objects — design-helpers","text":"x object.","code":""},{"path":"https://edibble.emitanaka.org/reference/design-helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test and get edibble objects — design-helpers","text":"logical value.","code":""},{"path":"https://edibble.emitanaka.org/reference/design-helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test and get edibble objects — design-helpers","text":"","code":"is_edibble_design(takeout()) #> → No name was supplied so selecting a random named experimental design... #> → Selected Strip-Plot DesignSelected Strip-Unit Design #> [1] FALSE"},{"path":"https://edibble.emitanaka.org/reference/design.html","id":null,"dir":"Reference","previous_headings":"","what":"Start the edibble design — design","title":"Start the edibble design — design","text":"function really much besides create new edibble design object.","code":""},{"path":"https://edibble.emitanaka.org/reference/design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start the edibble design — design","text":"","code":"design(   title = NULL,   name = \"edibble\",   .record = TRUE,   seed = NULL,   provenance = Provenance$new() )  redesign(   .data,   name = NULL,   .record = TRUE,   seed = NULL,   provenance = provenance,   ... )"},{"path":"https://edibble.emitanaka.org/reference/design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start the edibble design — design","text":"title Optional title experiment. name Optional name experiment. .record logical value. indicates whether record code step. default TRUE. remain TRUE unless function used wrapper code. seed seed number reproducibility. provenance environment setup manner store methods information trace origin design .data edibble table. ... Either name-value pair series names.","code":""},{"path":"https://edibble.emitanaka.org/reference/design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start the edibble design — design","text":"empty edbl_design object.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start the edibble design — design","text":"","code":"design(\"My design\") #> My design"},{"path":"https://edibble.emitanaka.org/reference/design_anatomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Anatomy of the design — design_anatomy","title":"Anatomy of the design — design_anatomy","text":"convenient wrapper dae::designAnatomy formulae structure automatically determined unit treatment structure specified edibble system. Note: computation may long design quite complicated many units.","code":""},{"path":"https://edibble.emitanaka.org/reference/design_anatomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anatomy of the design — design_anatomy","text":"","code":"design_anatomy(.edibble, ...)"},{"path":"https://edibble.emitanaka.org/reference/design_anatomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anatomy of the design — design_anatomy","text":".edibble complete edibble design object edibble table. ... arguments parsed dae::designAnatomy.","code":""},{"path":"https://edibble.emitanaka.org/reference/design_anatomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anatomy of the design — design_anatomy","text":"object class \"des_anatomy\".","code":""},{"path":"https://edibble.emitanaka.org/reference/design_anatomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anatomy of the design — design_anatomy","text":"","code":"split <- takeout(menu_split(t1 = 3, t2 = 2, r = 2)) anatomy(split) #> Error in anatomy(split): could not find function \"anatomy\""},{"path":"https://edibble.emitanaka.org/reference/design_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the node or edge data from an edibble design — design_data","title":"Get the node or edge data from an edibble design — design_data","text":"Get node edge data edibble design","code":""},{"path":"https://edibble.emitanaka.org/reference/design_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the node or edge data from an edibble design — design_data","text":"","code":"fct_nodes(x)  fct_edges(x)  lvl_nodes(x)  lvl_edges(x)"},{"path":"https://edibble.emitanaka.org/reference/design_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the node or edge data from an edibble design — design_data","text":"x edibble object.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/design_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A baseline model for given experimental design — design_model","text":"","code":"design_model(data, type = c(\"anova\", \"lmer\"))"},{"path":"https://edibble.emitanaka.org/reference/design_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A baseline model for given experimental design — design_model","text":"data edibble data. type type model expression return.","code":""},{"path":"https://edibble.emitanaka.org/reference/edibble-package.html","id":null,"dir":"Reference","previous_headings":"","what":"edibble: Designing Comparative Experiments — edibble-package","title":"edibble: Designing Comparative Experiments — edibble-package","text":"system facilitate designing comparative experiments using grammar experimental designs https://emitanaka.org/edibble-book/. experimental design treated intermediate, mutable object built progressively fundamental experimental components like units, treatments, relation.","code":""},{"path":"https://edibble.emitanaka.org/reference/edibble-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"edibble: Designing Comparative Experiments — edibble-package","text":"(WIP)","code":""},{"path":"https://edibble.emitanaka.org/reference/edibble-package.html","id":"website","dir":"Reference","previous_headings":"","what":"Website","title":"edibble: Designing Comparative Experiments — edibble-package","text":"website package https://edibble.emitanaka.org Discussion https://github.com/emitanaka/edibble/discussions","code":""},{"path":"https://edibble.emitanaka.org/reference/edibble-package.html","id":"package-options","dir":"Reference","previous_headings":"","what":"Package options","title":"edibble: Designing Comparative Experiments — edibble-package","text":"following options used changing default view print edibble design edibble graph. edibble.tree.decorate.trts edibble.tree.decorate.units edibble.tree.decorate.rcrd edibble.tree.decorate.levels edibble.tree.decorate.main TODO","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/edibble-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"edibble: Designing Comparative Experiments — edibble-package","text":"Maintainer: Emi Tanaka dr.emi.tanaka@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://edibble.emitanaka.org/reference/examine_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Examine the simulation process — examine_process","title":"Examine the simulation process — examine_process","text":"Examine simulation process","code":""},{"path":"https://edibble.emitanaka.org/reference/examine_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Examine the simulation process — examine_process","text":"","code":"examine_process(data, process = NULL)  examine_process_values(data, process = NULL)"},{"path":"https://edibble.emitanaka.org/reference/examine_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Examine the simulation process — examine_process","text":"data edibble data frame. process process name. Typically name process. unknown, leave empty.","code":""},{"path":"https://edibble.emitanaka.org/reference/examine_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the recipe code — examine_recipe","title":"Check the recipe code — examine_recipe","text":"Check recipe code","code":""},{"path":"https://edibble.emitanaka.org/reference/examine_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the recipe code — examine_recipe","text":"","code":"examine_recipe(x, ...)"},{"path":"https://edibble.emitanaka.org/reference/examine_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the recipe code — examine_recipe","text":"x edibble design, edibble, takeout object. ... used.","code":""},{"path":"https://edibble.emitanaka.org/reference/examine_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the recipe code — examine_recipe","text":"recipe code.","code":""},{"path":"https://edibble.emitanaka.org/reference/examine_recipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the recipe code — examine_recipe","text":"","code":"examine_recipe(takeout()) #> → No name was supplied so selecting a random named experimental design... #> → Selected Graeco-Latin Square Design #> design(\"Graeco-Latin Square Design\") %>% #>   set_units(row = 5, #>             col = 5, #>             unit = crossed_by(row, col)) %>% #>   set_trts(trt1 = 5, #>            trt2 = 5) %>% #>   allot_trts(trt1 ~ unit, #>              trt2 ~ unit) %>% #>   assign_trts(\"random\", seed = 523) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/expect-vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected type of data entry — expect-vars","title":"Expected type of data entry — expect-vars","text":"functions used within expect_vars variables recorded constraint expected values exported xlsx file export_design(). functions set particular value type (numeric, integer, date, time character) preceded \"to_be_\" corresponding restriction set with_value().","code":""},{"path":"https://edibble.emitanaka.org/reference/expect-vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected type of data entry — expect-vars","text":"","code":"to_be_numeric(range)  to_be_integer(range)  to_be_date(range)  to_be_time(range)  to_be_character(length)  to_be_factor(levels)"},{"path":"https://edibble.emitanaka.org/reference/expect-vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected type of data entry — expect-vars","text":"range, length named list two elements: \"operator\" \"value\" provided helper with_value() gives possible range values expected type can take. levels character vector factor levels.","code":""},{"path":"https://edibble.emitanaka.org/reference/expect-vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected type of data entry — expect-vars","text":"record type.","code":""},{"path":"https://edibble.emitanaka.org/reference/expect_rcrds.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the expected values for recording variables — expect_rcrds","title":"Set the expected values for recording variables — expect_rcrds","text":"Set expected values recording variables","code":""},{"path":"https://edibble.emitanaka.org/reference/expect_rcrds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the expected values for recording variables — expect_rcrds","text":"","code":"expect_rcrds(.edibble, ..., .record = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/expect_rcrds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the expected values for recording variables — expect_rcrds","text":".edibble edibble design (edbl_design), edibble data frame (edbl_table) object contains edibble data frame attribute design. ... Name-value pairs name belonging variable plan recorded set_rcrds() values expected types values set helper functions, see ?expect-rcrds. .record logical value. indicates whether record code step. default TRUE. remain TRUE unless function used wrapper code.","code":""},{"path":"https://edibble.emitanaka.org/reference/expect_rcrds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the expected values for recording variables — expect_rcrds","text":"edibble design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/expect_rcrds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the expected values for recording variables — expect_rcrds","text":"","code":"takeout(menu_crd(t = 4, n = 10)) %>%   set_rcrds(y = unit) %>%   expect_rcrds(y > 0) #> design(\"Completely Randomised Design\") %>% #>   set_units(unit = 10) %>% #>   set_trts(trt = 4) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 647) %>% #>   serve_table()  #>  #> # Completely Randomised Design  #> # An edibble: 10 x 3 #>          unit      trt      y #>    <unit(10)> <trt(4)> <rcrd> #>         <chr>    <chr>  <dbl>                                                    #>  1     unit01     trt1      o #>  2     unit02     trt3      o #>  3     unit03     trt4      o #>  4     unit04     trt3      o #>  5     unit05     trt4      o #>  6     unit06     trt1      o #>  7     unit07     trt1      o #>  8     unit08     trt2      o #>  9     unit09     trt2      o #> 10     unit10     trt2      o"},{"path":"https://edibble.emitanaka.org/reference/export_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the design to xlsx — export_design","title":"Export the design to xlsx — export_design","text":"function designed export design made using edibble external xlsx file.","code":""},{"path":"https://edibble.emitanaka.org/reference/export_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the design to xlsx — export_design","text":"","code":"export_design(   .data,   file,   author = NULL,   date = Sys.Date(),   overwrite = FALSE,   hide_treatments = FALSE,   theme = NULL,   subject = NULL,   category = NULL,   table_style = \"TableStyleMedium9\" )"},{"path":"https://edibble.emitanaka.org/reference/export_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the design to xlsx — export_design","text":".data edibble table export. file File, including path, export data . author (Optional) name author character. vector character supported multiple authors. date date inserted header (defaults today). overwrite logical value indicating whether overwrite existing file . hide_treatments logical value indicating whether treatments included data entry sheet. Default true. theme Excel theme use (optional). One \"Atlas\", \"Badge\", \"Berlin\", \"Celestial\", \"Crop\", \"Depth\", \"Droplet\", \"Facet\", \"Feathered\", \"Gallery\", \"Headlines\", \"Integral\", \"Ion\", \"Ion Boardroom\", \"Madison\", \"Main Event\", \"Mesh\", \"Office Theme\", \"Old Office Theme\", \"Organic\", \"Parallax\", \"Parcel\", \"Retrospect\", \"Savon\", \"Slice\", \"Vapor Trail\", \"View\", \"Wisp\", \"Wood Type\". subject subject workbook (optional). category category workbook (optional). table_style table style apply exported data (default: \"TableStyleMedium9\").","code":""},{"path":"https://edibble.emitanaka.org/reference/export_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the design to xlsx — export_design","text":"input data object.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/fct_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Setting the traits of factors — fct_attrs","title":"Setting the traits of factors — fct_attrs","text":"function used set characteristics factors.","code":""},{"path":"https://edibble.emitanaka.org/reference/fct_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setting the traits of factors — fct_attrs","text":"","code":"fct_attrs(.levels, ...)"},{"path":"https://edibble.emitanaka.org/reference/fct_attrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setting the traits of factors — fct_attrs","text":".levels Either short hand given either single integer (number levels), vector levels created lvls(). ... name-value pair attributes. value must scalar attributed whole factor (individual levels). values added attributes output object.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/fct_attrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setting the traits of factors — fct_attrs","text":"","code":"fct_attrs(c(\"A\", \"B\")) #> [1] \"A\" \"B\" #> attr(,\"attrs\") #> named list()"},{"path":"https://edibble.emitanaka.org/reference/fct_generator.html","id":null,"dir":"Reference","previous_headings":"","what":"Factor name generator — fct_generator","title":"Factor name generator — fct_generator","text":"Generate factor custom levels repetitions.","code":""},{"path":"https://edibble.emitanaka.org/reference/fct_generator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factor name generator — fct_generator","text":"","code":"fct_generator(labels, nlevels)"},{"path":"https://edibble.emitanaka.org/reference/fct_generator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factor name generator — fct_generator","text":"labels character vector specifying custom labels factor levels. nlevels integer vector integers indicating number repetitions label. single integer provided, recycled match length labels. vector provided, length labels.","code":""},{"path":"https://edibble.emitanaka.org/reference/fct_generator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Factor name generator — fct_generator","text":"factor custom levels repetitions.","code":""},{"path":"https://edibble.emitanaka.org/reference/fct_generator.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Factor name generator — fct_generator","text":"function creates factor custom labels specified repetitions label.","code":""},{"path":"https://edibble.emitanaka.org/reference/fct_generator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Factor name generator — fct_generator","text":"","code":"# Example usage of the function fct_generator(labels = c(\"A\", \"B\", \"C\"), nlevels = 3) #> $A #> [1] 3 #>  #> $B #> [1] 3 #>  #> $C #> [1] 3 #>  #> attr(,\"class\") #> [1] \"fct_names\""},{"path":"https://edibble.emitanaka.org/reference/fct_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Factor graph — fct_graph","title":"Factor graph — fct_graph","text":"Get factor graph.","code":""},{"path":"https://edibble.emitanaka.org/reference/fct_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Factor graph — fct_graph","text":"","code":"fct_graph(x)"},{"path":"https://edibble.emitanaka.org/reference/fct_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Factor graph — fct_graph","text":"x edibble object.","code":""},{"path":"https://edibble.emitanaka.org/reference/formatting.html","id":null,"dir":"Reference","previous_headings":"","what":"Print intermediate experimental design to terminal — formatting","title":"Print intermediate experimental design to terminal — formatting","text":"function prints edbl_graph object tree terminal. variables color coded (decorated) given options. ANSI coloring styling visible console terminal outputs support . print output best used interactively since text styling lost text R Markdown output. details can found vignette(\"edbl-output\", package = \"edibble\").","code":""},{"path":"https://edibble.emitanaka.org/reference/formatting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print intermediate experimental design to terminal — formatting","text":"","code":"# S3 method for edbl_design print(   x,   decorate_units = edibble_decorate(\"units\"),   decorate_trts = edibble_decorate(\"trts\"),   decorate_rcrds = edibble_decorate(\"rcrds\"),   decorate_levels = edibble_decorate(\"levels\"),   decorate_title = edibble_decorate(\"title\"),   title = NULL,   ... )"},{"path":"https://edibble.emitanaka.org/reference/formatting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print intermediate experimental design to terminal — formatting","text":"x edibble graph. decorate_trts, decorate_units, decorate_rcrds, decorate_levels, decorate_title function applied name treatment, unit, response factors design title. function return string. often wraps name ANSI colored text. title title design. ... Unused.","code":""},{"path":"https://edibble.emitanaka.org/reference/graph_input.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to process input as input for graph manipulation — graph_input","title":"A function to process input as input for graph manipulation — graph_input","text":"function process input input graph manipulation","code":""},{"path":"https://edibble.emitanaka.org/reference/graph_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to process input as input for graph manipulation — graph_input","text":"","code":"graph_input(input, prov, ...)"},{"path":"https://edibble.emitanaka.org/reference/graph_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to process input as input for graph manipulation — graph_input","text":"input input. prov provenance object. ... Unused.","code":""},{"path":"https://edibble.emitanaka.org/reference/is_provenance.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if an object is an instance of the ","title":"Check if an object is an instance of the ","text":"function determines whether given object instance \"Provenance\" class.","code":""},{"path":"https://edibble.emitanaka.org/reference/is_provenance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if an object is an instance of the ","text":"","code":"is_provenance(x)"},{"path":"https://edibble.emitanaka.org/reference/is_provenance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if an object is an instance of the ","text":"x object checked class membership.","code":""},{"path":"https://edibble.emitanaka.org/reference/is_provenance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if an object is an instance of the ","text":"TRUE object instance \"Provenance\" class, FALSE otherwise.","code":""},{"path":"https://edibble.emitanaka.org/reference/is_takeout.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to check if the output is a takeout design — is_takeout","title":"A function to check if the output is a takeout design — is_takeout","text":"function returns TRUE input takeout design.","code":""},{"path":"https://edibble.emitanaka.org/reference/is_takeout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to check if the output is a takeout design — is_takeout","text":"","code":"is_takeout(x)"},{"path":"https://edibble.emitanaka.org/reference/is_takeout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to check if the output is a takeout design — is_takeout","text":"x object.","code":""},{"path":"https://edibble.emitanaka.org/reference/is_takeout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to check if the output is a takeout design — is_takeout","text":"logical value.","code":""},{"path":"https://edibble.emitanaka.org/reference/is_takeout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to check if the output is a takeout design — is_takeout","text":"","code":"is_takeout(takeout()) #> → No name was supplied so selecting a random named experimental design... #> → Selected Split-Plot DesignSelected Split-Unit Design #> [1] TRUE"},{"path":"https://edibble.emitanaka.org/reference/label_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a sequence of labels with custom formatting options — label_seq","title":"Generate a sequence of labels with custom formatting options — label_seq","text":"can handy generating pseudo labels levels factor names using fct_generator","code":""},{"path":"https://edibble.emitanaka.org/reference/label_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a sequence of labels with custom formatting options — label_seq","text":"","code":"label_seq_from_to(   from = 1L,   to = 1L,   by = 1L,   prefix = \"\",   suffix = \"\",   sep_prefix = \"\",   sep_suffix = \"\",   leading_zero = edibble_labels_opt(\"leading_zero\") )  label_seq_from_length(   from = 1L,   length = 1L,   by = 1L,   prefix = \"\",   suffix = \"\",   sep_prefix = \"\",   sep_suffix = \"\",   leading_zero = edibble_labels_opt(\"leading_zero\") )  label_seq_to_length(   to = 1L,   length = 1L,   by = 1L,   prefix = \"\",   suffix = \"\",   sep_prefix = \"\",   sep_suffix = \"\",   leading_zero = edibble_labels_opt(\"leading_zero\") )  label_seq_length(   length = 1L,   prefix = \"\",   suffix = \"\",   sep_prefix = \"\",   sep_suffix = \"\",   leading_zero = edibble_labels_opt(\"leading_zero\") )"},{"path":"https://edibble.emitanaka.org/reference/label_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a sequence of labels with custom formatting options — label_seq","text":"integer specifying starting value (inclusive) sequence. integer specifying ending value (inclusive) sequence. integer specifying increment values sequence. prefix character string prepended labels. suffix character string appended labels. sep_prefix character string used separate prefix labels. sep_suffix character string used separate suffix labels. leading_zero logical value indicating whether add leading zeros labels. integer, pad based number supplied. length integer specifying desired length sequence.","code":""},{"path":"https://edibble.emitanaka.org/reference/label_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a sequence of labels with custom formatting options — label_seq","text":"character vector containing labels generated sequence.","code":""},{"path":"https://edibble.emitanaka.org/reference/label_seq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a sequence of labels with custom formatting options — label_seq","text":"","code":"label_seq_to_length(to = 10, length = 5, by = 2) #> [1] \"02\" \"04\" \"06\" \"08\" \"10\" label_seq_from_to(from = 8, to = 10, leading_zero = 3) #> [1] \"008\" \"009\" \"010\" label_seq_length(10, leading_zero = FALSE) #>  [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\""},{"path":"https://edibble.emitanaka.org/reference/lady_tasting_tea.html","id":null,"dir":"Reference","previous_headings":"","what":"Lady tasting tea — lady_tasting_tea","title":"Lady tasting tea — lady_tasting_tea","text":"Lady tasting tea experiment described Fisher (1935) test ability lady said tell whether tea milk added first cup tea. experiment consisted preparing eight cups tea, four milk poured first four tea poured first. lady told advance four kind preparation. data consists experimental structure result order presented practice unknown. cup cup number. first cup tea prepared milk tea first. guess guess lady one poured first. correct Whether lady's guess correct.","code":""},{"path":"https://edibble.emitanaka.org/reference/lady_tasting_tea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lady tasting tea — lady_tasting_tea","text":"","code":"lady_tasting_tea"},{"path":"https://edibble.emitanaka.org/reference/lady_tasting_tea.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lady tasting tea — lady_tasting_tea","text":"object class tbl_df (inherits tbl, data.frame) 8 rows 4 columns.","code":""},{"path":"https://edibble.emitanaka.org/reference/lady_tasting_tea.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Lady tasting tea — lady_tasting_tea","text":"Fisher, Ronald (1935) Design Experiments.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/latin.html","id":null,"dir":"Reference","previous_headings":"","what":"Latin square designs and its generalisations as an array — latin","title":"Latin square designs and its generalisations as an array — latin","text":"Latin square designs generalisations array","code":""},{"path":"https://edibble.emitanaka.org/reference/latin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Latin square designs and its generalisations as an array — latin","text":"","code":"latin_square(n, randomise = TRUE)  latin_rectangle(nr, nc, nt, randomise = TRUE)  latin_array(dim, nt, randomise = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/latin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Latin square designs and its generalisations as an array — latin","text":"n, nt number treatments randomise logical value indicate whether treatment allocation randomised. default value TRUE. nr number rows nc number columns dim vector integers indicate number elements dimension.","code":""},{"path":"https://edibble.emitanaka.org/reference/latin.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Latin square designs and its generalisations as an array — latin","text":"latin_square(): Latin square design latin_rectangle(): Like Latin square design allow different number rows columns latin_array(): Returns array stitches multiple Latin square/rectangle design","code":""},{"path":"https://edibble.emitanaka.org/reference/latin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Latin square designs and its generalisations as an array — latin","text":"","code":"latin_square(n = 3) #>      [,1] [,2] [,3] #> [1,]    1    3    2 #> [2,]    2    1    3 #> [3,]    3    2    1 latin_rectangle(3, 3, 3) #>      [,1] [,2] [,3] #> [1,]    1    3    2 #> [2,]    2    1    3 #> [3,]    3    2    1 latin_array(3, c(3, 3, 3)) #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]    2    3    1 #> [2,]    3    1    2 #> [3,]    1    2    3 #>  #> , , 2 #>  #>      [,1] [,2] [,3] #> [1,]    3    1    2 #> [2,]    1    2    3 #> [3,]    2    3    1 #>  #> , , 3 #>  #>      [,1] [,2] [,3] #> [1,]    1    2    3 #> [2,]    2    3    1 #> [3,]    3    1    2 #>"},{"path":"https://edibble.emitanaka.org/reference/lvls.html","id":null,"dir":"Reference","previous_headings":"","what":"Setting the traits of the levels — lvls","title":"Setting the traits of the levels — lvls","text":"Setting traits levels","code":""},{"path":"https://edibble.emitanaka.org/reference/lvls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setting the traits of the levels — lvls","text":"","code":"lvls(value = NULL, n = NA_integer_, data = NULL, ...)"},{"path":"https://edibble.emitanaka.org/reference/lvls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setting the traits of the levels — lvls","text":"value vector level values. data list data frame size levels. ... Name-value pair denoting level attributes. value length levels single value.","code":""},{"path":"https://edibble.emitanaka.org/reference/lvls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setting the traits of the levels — lvls","text":"edbl_lvls object.","code":""},{"path":"https://edibble.emitanaka.org/reference/lvls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setting the traits of the levels — lvls","text":"","code":"lvls(c(\"A\", \"B\")) #> <edbl_lvls[2]> #> [1] A B"},{"path":"https://edibble.emitanaka.org/reference/menu_bibd.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance incomplete block design — menu_bibd","title":"Balance incomplete block design — menu_bibd","text":"combinations parameter values create balanced incomplete block design.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_bibd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance incomplete block design — menu_bibd","text":"","code":"menu_bibd(   t = random_integer_small(min = 3),   k = random_integer_small(max = t - 1),   r = random_integer_small(),   seed = random_seed_number() )"},{"path":"https://edibble.emitanaka.org/reference/menu_bibd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance incomplete block design — menu_bibd","text":"t number treatments. k size block. less number treatments. r number replications treatment level. seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_bibd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balance incomplete block design — menu_bibd","text":"recipe balance incomplete block design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_bibd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balance incomplete block design — menu_bibd","text":"","code":"menu_bibd(t = 3, k = 2, r = 4) #> design(\"Balanced Incomplete Block Design\") %>% #>   set_units(block = 6, #>             unit = nested_in(block, 2)) %>% #>   set_trts(trt = 3) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 117) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_crd.html","id":null,"dir":"Reference","previous_headings":"","what":"Completely randomised design — menu_crd","title":"Completely randomised design — menu_crd","text":"Completely randomised design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_crd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Completely randomised design — menu_crd","text":"","code":"menu_crd(   t = random_integer_small(),   n = random_integer_medium(min = t),   r = NULL,   seed = random_seed_number() )"},{"path":"https://edibble.emitanaka.org/reference/menu_crd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Completely randomised design — menu_crd","text":"t number treatment levels n number experimental units r (Optional) number replicates. seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_crd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Completely randomised design — menu_crd","text":"recipe completely randomised design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_crd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Completely randomised design — menu_crd","text":"","code":"menu_crd(t = 3, n = 10) #> design(\"Completely Randomised Design\") %>% #>   set_units(unit = 10) %>% #>   set_trts(trt = 3) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 994) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_factorial.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a factorial design — menu_factorial","title":"Prepare a factorial design — menu_factorial","text":"Prepare factorial design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_factorial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a factorial design — menu_factorial","text":"","code":"menu_factorial(   trt = c(random_integer_small(), random_integer_small()),   r = random_integer_small(),   design = c(\"crd\", \"rcbd\"),   seed = random_seed_number() )"},{"path":"https://edibble.emitanaka.org/reference/menu_factorial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a factorial design — menu_factorial","text":"trt vector number levels treatment factor. r number replications treatment level. design unit structure: \"crd\" \"rcbd\". default \"crd\". seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_factorial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare a factorial design — menu_factorial","text":"recipe factorial design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_factorial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare a factorial design — menu_factorial","text":"","code":"menu_factorial(trt = c(3, 2), r = 2, design = \"crd\") #> design(\"Factorial Design\") %>% #>   set_units(unit = 12) %>% #>   set_trts(trt1 = 3, #>            trt2 = 2) %>% #>   allot_trts(~unit) %>% #>   assign_trts(\"random\", seed = 138) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_graeco.html","id":null,"dir":"Reference","previous_headings":"","what":"Graeco-Latin Square Design — menu_graeco","title":"Graeco-Latin Square Design — menu_graeco","text":"Graeco-Latin Square Design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_graeco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graeco-Latin Square Design — menu_graeco","text":"","code":"menu_graeco(t = random_integer_small(), seed = random_seed_number())"},{"path":"https://edibble.emitanaka.org/reference/menu_graeco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graeco-Latin Square Design — menu_graeco","text":"t number treatments. seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_graeco.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graeco-Latin Square Design — menu_graeco","text":"recipe Graeco-Latin square design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_graeco.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graeco-Latin Square Design — menu_graeco","text":"","code":"menu_graeco(t = 3) #> design(\"Graeco-Latin Square Design\") %>% #>   set_units(row = 3, #>             col = 3, #>             unit = crossed_by(row, col)) %>% #>   set_trts(trt1 = 3, #>            trt2 = 3) %>% #>   allot_trts(trt1 ~ unit, #>              trt2 ~ unit) %>% #>   assign_trts(\"random\", seed = 950) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_hyper_graeco.html","id":null,"dir":"Reference","previous_headings":"","what":"Hyper-Graeco-Latin Square Design — menu_hyper_graeco","title":"Hyper-Graeco-Latin Square Design — menu_hyper_graeco","text":"Hyper-Graeco-Latin Square Design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_hyper_graeco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hyper-Graeco-Latin Square Design — menu_hyper_graeco","text":"","code":"menu_hyper_graeco(t = random_integer_small(), seed = random_seed_number())"},{"path":"https://edibble.emitanaka.org/reference/menu_hyper_graeco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hyper-Graeco-Latin Square Design — menu_hyper_graeco","text":"t number treatments seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_hyper_graeco.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hyper-Graeco-Latin Square Design — menu_hyper_graeco","text":"recipe Hyper-Graeco-Latin square design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_hyper_graeco.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hyper-Graeco-Latin Square Design — menu_hyper_graeco","text":"","code":"menu_hyper_graeco(t = 3) #> design(\"Hyper-Graeco-Latin Square Design\") %>% #>   set_units(block1 = 3, #>             block2 = 3, #>             block3 = 3, #>             block4 = 3, #>             unit = crossed_by(block1, block2, block3, block4)) %>% #>   set_trts(trt = 3) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 832) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_lsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare classical Latin square design — menu_lsd","title":"Prepare classical Latin square design — menu_lsd","text":"Prepare classical Latin square design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_lsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare classical Latin square design — menu_lsd","text":"","code":"menu_lsd(t = random_integer_small(), seed = random_seed_number())"},{"path":"https://edibble.emitanaka.org/reference/menu_lsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare classical Latin square design — menu_lsd","text":"t number treatments seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_lsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare classical Latin square design — menu_lsd","text":"recipe Latin square design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_lsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare classical Latin square design — menu_lsd","text":"","code":"menu_lsd(t = 3) #> design(\"Latin Square Design\") %>% #>   set_units(row = 3, #>             col = 3, #>             unit = crossed_by(row, col)) %>% #>   set_trts(trt = 3) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 540) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_rcbd.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a randomised complete block design — menu_rcbd","title":"Prepare a randomised complete block design — menu_rcbd","text":"Prepare randomised complete block design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_rcbd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a randomised complete block design — menu_rcbd","text":"","code":"menu_rcbd(   t = random_integer_small(),   r = random_integer_small(),   seed = random_seed_number() )"},{"path":"https://edibble.emitanaka.org/reference/menu_rcbd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a randomised complete block design — menu_rcbd","text":"t number treatments. r number replications treatment level. seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_rcbd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare a randomised complete block design — menu_rcbd","text":"recipe randomised complete block design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_rcbd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare a randomised complete block design — menu_rcbd","text":"","code":"menu_rcbd(t = 3, r = 2) #> design(\"Randomised Complete Block Design\") %>% #>   set_units(block = 2, #>             unit = nested_in(block, 3)) %>% #>   set_trts(trt = 3) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 201) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Split-unit design — menu_split","title":"Split-unit design — menu_split","text":"Originally referred split-plot design first used.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split-unit design — menu_split","text":"","code":"menu_split(   t1 = random_integer_small(),   t2 = random_integer_small(),   r = random_integer_small(),   seed = random_seed_number() )"},{"path":"https://edibble.emitanaka.org/reference/menu_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split-unit design — menu_split","text":"t1 number treatment levels main plots. t2 number treatment levels subplots. r number replications treatment level. seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split-unit design — menu_split","text":"recipe split-plot design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_split.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split-unit design — menu_split","text":"","code":"menu_split(t1 = 3, t2 = 2, r = 4) #> design(\"Split-Plot Design | Split-Unit Design\") %>% #>   set_units(mainplot = 12, #>              subplot = nested_in(mainplot, 2)) %>% #>   set_trts(trt1 = 3, #>            trt2 = 2) %>% #>   allot_trts(trt1 ~ mainplot, #>              trt2 ~ subplot) %>% #>   assign_trts(\"random\", seed = 872) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_strip.html","id":null,"dir":"Reference","previous_headings":"","what":"Strip-unit design — menu_strip","title":"Strip-unit design — menu_strip","text":"Strip-unit design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_strip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strip-unit design — menu_strip","text":"","code":"menu_strip(   t1 = random_integer_small(),   t2 = random_integer_small(),   r = random_integer_small(),   seed = random_seed_number() )"},{"path":"https://edibble.emitanaka.org/reference/menu_strip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strip-unit design — menu_strip","text":"t1 number treatment levels main plots. t2 number treatment levels subplots. r number replications treatment level. seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_strip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strip-unit design — menu_strip","text":"recipe strip-unit design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_strip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strip-unit design — menu_strip","text":"","code":"menu_strip(t1 = 3, t2 = 3, r = 2) #> design(\"Strip-Plot Design | Strip-Unit Design\") %>% #>   set_units(block = 2, #>             row = nested_in(block, 3), #>             col = nested_in(block, 3), #>             unit = nested_in(block, crossed_by(row, col))) %>% #>   set_trts(trt1 = 3, #>            trt2 = 3) %>% #>   allot_trts(trt1 ~ row, #>              trt2 ~ col) %>% #>   assign_trts(\"random\", seed = 468) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_youden.html","id":null,"dir":"Reference","previous_headings":"","what":"Youden square design — menu_youden","title":"Youden square design — menu_youden","text":"Youden square design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_youden.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Youden square design — menu_youden","text":"","code":"menu_youden(   nc = random_integer_small(),   t = random_integer_small(min = nc + 1),   seed = random_seed_number() )"},{"path":"https://edibble.emitanaka.org/reference/menu_youden.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Youden square design — menu_youden","text":"nc number columns. t number treatments. seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_youden.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Youden square design — menu_youden","text":"recipe Youden square design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_youden.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Youden square design — menu_youden","text":"","code":"menu_youden(nc = 4, t = 5) #> design(\"Youden Square Design\") %>% #>   set_units(row = 5, #>             col = 4, #>             unit = crossed_by(row, col)) %>% #>   set_trts(trt = 5) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 269) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/nested_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify the nesting or conditional structure for units or treatments — nested_in","title":"Specify the nesting or conditional structure for units or treatments — nested_in","text":"Conditional treatment different nested units levels assumed distinct latter former.","code":""},{"path":"https://edibble.emitanaka.org/reference/nested_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify the nesting or conditional structure for units or treatments — nested_in","text":"","code":"nested_in(x, ...)  conditioned_on(x, ...)"},{"path":"https://edibble.emitanaka.org/reference/nested_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify the nesting or conditional structure for units or treatments — nested_in","text":"x name parent unit nest . ... single number sequence two-sided formula left-hand side corresponds name level (level number) x right-hand side integer specifying number levels nested corresponding levels.","code":""},{"path":"https://edibble.emitanaka.org/reference/nested_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify the nesting or conditional structure for units or treatments — nested_in","text":"nested level.","code":""},{"path":"https://edibble.emitanaka.org/reference/nested_in.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify the nesting or conditional structure for units or treatments — nested_in","text":"Currently specifying conditional treatment, character vectors accepted RHS.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/nested_in.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify the nesting or conditional structure for units or treatments — nested_in","text":"","code":"design(\"Split-Plot Design | Split-Unit Design\") %>%   set_units(mainplot = 60,             subplot = nested_in(mainplot, 10)) #> Split-Plot Design | Split-Unit Design #> └─mainplot (60 levels) #>   └─subplot (600 levels)"},{"path":"https://edibble.emitanaka.org/reference/nesting_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the nesting structure for the units — nesting_structure","title":"Get the nesting structure for the units — nesting_structure","text":"Get nesting structure units","code":""},{"path":"https://edibble.emitanaka.org/reference/nesting_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the nesting structure for the units — nesting_structure","text":"","code":"nesting_structure(design)"},{"path":"https://edibble.emitanaka.org/reference/nesting_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the nesting structure for the units — nesting_structure","text":"design edibble design","code":""},{"path":"https://edibble.emitanaka.org/reference/nesting_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the nesting structure for the units — nesting_structure","text":"Return named list. shows direct parent.","code":""},{"path":"https://edibble.emitanaka.org/reference/nesting_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the nesting structure for the units — nesting_structure","text":"","code":"nesting_structure(takeout(menu_split())) #> $subplot #> [1] \"mainplot\" #>"},{"path":"https://edibble.emitanaka.org/reference/new_edibble.html","id":null,"dir":"Reference","previous_headings":"","what":"An edibble table constructor — new_edibble","title":"An edibble table constructor — new_edibble","text":"helps construct new edibble table special type tibble.","code":""},{"path":"https://edibble.emitanaka.org/reference/new_edibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An edibble table constructor — new_edibble","text":"","code":"new_edibble(.data, ..., design = NULL, class = NULL)  as_edibble(.data, ...)  edibble(   .data,   title = NULL,   name = \"edibble\",   .record = TRUE,   seed = NULL,   provenance = Provenance$new(),   ... )"},{"path":"https://edibble.emitanaka.org/reference/new_edibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An edibble table constructor — new_edibble","text":".data data frame list size. ... Passed new_tibble. design edibble graph object. class Subclasses edibble table. default NULL. title Optional title experiment. name Optional name experiment. .record logical value. indicates whether record code step. default TRUE. remain TRUE unless function used wrapper code. seed seed number reproducibility. provenance environment setup manner store methods information trace origin design","code":""},{"path":"https://edibble.emitanaka.org/reference/new_edibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An edibble table constructor — new_edibble","text":"edibble table.","code":""},{"path":"https://edibble.emitanaka.org/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://edibble.emitanaka.org/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://edibble.emitanaka.org/reference/pivot_trts_widelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot treatments to a wider list or table format — pivot_trts_widelist","title":"Pivot treatments to a wider list or table format — pivot_trts_widelist","text":"Pivot treatments wider list table format","code":""},{"path":"https://edibble.emitanaka.org/reference/pivot_trts_widelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot treatments to a wider list or table format — pivot_trts_widelist","text":"","code":"pivot_trts_widelist(.data, trts = NULL, fcts = NULL, drop = FALSE)  pivot_trts_widetable(.data, trts = NULL, fcts = NULL)"},{"path":"https://edibble.emitanaka.org/reference/pivot_trts_widelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot treatments to a wider list or table format — pivot_trts_widelist","text":".data edibble table. trts vector treatment (tidyselect compatible). default NULL includes treatments. fcts vector factors edibble table. drop Whether resulting list drop vector within list element one column. Default FALSE.","code":""},{"path":"https://edibble.emitanaka.org/reference/pivot_trts_widelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot treatments to a wider list or table format — pivot_trts_widelist","text":"named list elements data names treatments.","code":""},{"path":"https://edibble.emitanaka.org/reference/pivot_trts_widelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot treatments to a wider list or table format — pivot_trts_widelist","text":"","code":"pivot_trts_widelist(takeout(menu_crd(t = 5, n = 20))) #> Warning: `pivot_trts_widelist()` was deprecated in edibble 1.1.0. #> ℹ Please use `pivot_trts()` instead. #> $trt1 #>      unit #> 2  unit02 #> 6  unit06 #> 11 unit11 #> 14 unit14 #>  #> $trt2 #>      unit #> 7  unit07 #> 9  unit09 #> 10 unit10 #> 17 unit17 #>  #> $trt3 #>      unit #> 1  unit01 #> 12 unit12 #> 13 unit13 #> 16 unit16 #>  #> $trt4 #>      unit #> 5  unit05 #> 8  unit08 #> 15 unit15 #> 18 unit18 #>  #> $trt5 #>      unit #> 3  unit03 #> 4  unit04 #> 19 unit19 #> 20 unit20 #>"},{"path":"https://edibble.emitanaka.org/reference/pivot_wider_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot factor to a wider list — pivot_wider_by","title":"Pivot factor to a wider list — pivot_wider_by","text":"function makes easier see units records associated particular level factor. arguments closely follow tidyr::pivot_wider(), major difference aware relationships columns makes use present information without unnecessary duplication.","code":""},{"path":"https://edibble.emitanaka.org/reference/pivot_wider_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot factor to a wider list — pivot_wider_by","text":"","code":"pivot_wider_by(   data,   id_cols = NULL,   id_expand = FALSE,   names_from = where(is_trt),   names_prefix = \"\",   names_sep = \":\",   names_glue = NULL,   names_sort = FALSE,   names_vary = \"fastest\",   names_expand = FALSE,   names_repair = \"check_unique\",   values_from = NULL,   values_fill = NULL,   values_fn = NULL )"},{"path":"https://edibble.emitanaka.org/reference/pivot_wider_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot factor to a wider list — pivot_wider_by","text":"data edibble table id_cols Columns data levels correspond unique level row. id_expand multiple columns selected, whether combinations levels taken account. names_from expression specifying columns pivot . names_prefix prefix add resulting column names. names_sep separator use column names resulting wide format. names_glue glue specification control column names. names_sort logical indicating whether sort resulting column names. names_vary character vector options specify handle varying identifiers. names_expand logical indicating whether expand identifiers column names. names_repair method handle non-unique resulting column names. values_from character vector specifying columns use values wide format. values_fill value function fill missing values. values_fn function aggregate values.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/plot.edbl_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive plot of the edibble design — plot.edbl_design","title":"Interactive plot of the edibble design — plot.edbl_design","text":"Interactive plot edibble design","code":""},{"path":"https://edibble.emitanaka.org/reference/plot.edbl_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive plot of the edibble design — plot.edbl_design","text":"","code":"# S3 method for edbl_design plot(   x,   which = c(\"factors\", \"levels\"),   width = \"100%\",   height = NULL,   seed = 1,   title = NULL,   subtitle = NULL,   footer = NULL,   background = \"transparent\",   view = c(\"show-buttons\", \"hide-buttons\", \"static\"),   ... )  # S3 method for edbl_table plot(x, ...)  plot_fct_graph(   x,   width = \"100%\",   height = NULL,   seed = 1,   title = NULL,   subtitle = NULL,   footer = NULL,   background = \"transparent\",   view = c(\"show-buttons\", \"hide-buttons\", \"static\"),   ... )  plot_lvl_graph(   x,   width = \"100%\",   height = NULL,   seed = 1,   title = NULL,   subtitle = NULL,   footer = NULL,   background = \"transparent\",   view = c(\"show-buttons\", \"hide-buttons\", \"static\"),   ... )"},{"path":"https://edibble.emitanaka.org/reference/plot.edbl_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive plot of the edibble design — plot.edbl_design","text":"x edibble design. string either \"factors\" \"levels\". width, height width height plot. seed seed number plot always generated. title, subtitle, footer title, subtitle footer plot. default uses name x object title rest empty. modify look text, can pass character string consisting valid input style value HTML object, e.g. \"font-size: 18px;font-family:serif;\" named vector name corresponds text display, e.g. c(\"Title\" = \"font-size:20px;\"). background background color plot. Default transparent. input can color name (e.g. \"white\"), HEX value (\"#FFFFFF\"), rgb/rgba format like rgba(0, 0, 0, 0). view string either \"show-buttons\" (default), \"hide-buttons\", \"static\" ... Currently unused.","code":""},{"path":"https://edibble.emitanaka.org/reference/plot.edbl_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive plot of the edibble design — plot.edbl_design","text":"plot.","code":""},{"path":"https://edibble.emitanaka.org/reference/plot.edbl_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive plot of the edibble design — plot.edbl_design","text":"","code":"plot(takeout(menu_crd(t = 4, n = 20))) #> Loading required namespace: visNetwork  {\"x\":{\"nodes\":{\"id\":[1,2],\"role\":[\"edbl_unit\",\"edbl_trt\"],\"name\":[\"unit\",\"trt\"],\"group\":[\"unit\",\"trt\"],\"label\":[\"unit\",\"trt\"],\"shape\":[\"circle\",\"diamond\"]},\"edges\":{\"from\":[2],\"to\":[1],\"type\":[\"allot\"],\"group\":[1],\"var_from\":[\"trt\"],\"var_to\":[\"unit\"],\"arrows.middle.type\":[\"arrow\"],\"dashes\":[false],\"arrows\":[\"to\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"id\":\"id\"},\"manipulation\":{\"enabled\":true},\"layout\":{\"randomSeed\":1},\"edges\":{\"id\":\"id\"},\"interaction\":{\"navigationButtons\":true,\"zoomSpeed\":1}},\"groups\":[\"unit\",\"trt\"],\"width\":\"100%\",\"height\":null,\"idselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false,\"variable\":\"group\",\"main\":\"Select by group\",\"values\":[\"trt\",\"unit\"]},\"main\":{\"text\":\"Completely Randomised Design\",\"style\":\"\"},\"submain\":{\"text\":\"\",\"style\":\"\"},\"footer\":{\"text\":\"\",\"style\":\"\"},\"background\":\"rgba(0, 0, 0, 0)\",\"opts_manipulation\":{\"datacss\":\"table.legend_table {\\n  font-size: 11px;\\n  border-width:1px;\\n  border-color:#d3d3d3;\\n  border-style:solid;\\n}\\ntable.legend_table td {\\n  border-width:1px;\\n  border-color:#d3d3d3;\\n  border-style:solid;\\n  padding: 2px;\\n}\\ndiv.table_content {\\n  width:80px;\\n  text-align:center;\\n}\\ndiv.table_description {\\n  width:100px;\\n}\\n\\n.operation {\\n  font-size:20px;\\n}\\n\\n.network-popUp {\\n  display:none;\\n  z-index:299;\\n  width:250px;\\n  /*height:150px;*/\\n  background-color: #f9f9f9;\\n  border-style:solid;\\n  border-width:1px;\\n  border-color: #0d0d0d;\\n  padding:10px;\\n  text-align: center;\\n  position:fixed;\\n  top:50%;  \\n  left:50%;  \\n  margin:-100px 0 0 -100px;  \\n\\n}\",\"addNodeCols\":[\"id\",\"label\"],\"editNodeCols\":[\"id\",\"label\"],\"tab_add_node\":\"<span id=\\\"addnode-operation\\\" class = \\\"operation\\\">node<\\/span> <br><table style=\\\"margin:auto;\\\"><tr><td>id<\\/td><td><input id=\\\"addnode-id\\\"  type= \\\"text\\\" value=\\\"new value\\\"><\\/td><\\/tr><tr><td>label<\\/td><td><input id=\\\"addnode-label\\\"  type= \\\"text\\\" value=\\\"new value\\\"><\\/td><\\/tr><\\/table><input type=\\\"button\\\" value=\\\"save\\\" id=\\\"addnode-saveButton\\\"><\\/button><input type=\\\"button\\\" value=\\\"cancel\\\" id=\\\"addnode-cancelButton\\\"><\\/button>\",\"tab_edit_node\":\"<span id=\\\"editnode-operation\\\" class = \\\"operation\\\">node<\\/span> <br><table style=\\\"margin:auto;\\\"><tr><td>id<\\/td><td><input id=\\\"editnode-id\\\"  type= \\\"text\\\" value=\\\"new value\\\"><\\/td><\\/tr><tr><td>label<\\/td><td><input id=\\\"editnode-label\\\"  type= \\\"text\\\" value=\\\"new value\\\"><\\/td><\\/tr><\\/table><input type=\\\"button\\\" value=\\\"save\\\" id=\\\"editnode-saveButton\\\"><\\/button><input type=\\\"button\\\" value=\\\"cancel\\\" id=\\\"editnode-cancelButton\\\"><\\/button>\"},\"highlight\":{\"enabled\":true,\"hoverNearest\":false,\"degree\":1,\"algorithm\":\"all\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":true,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"},\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://edibble.emitanaka.org/reference/rescale_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Rescale a numerical vector — rescale_values","title":"Rescale a numerical vector — rescale_values","text":"Similar scales::rescale() different behaviour upper lower bound given.","code":""},{"path":"https://edibble.emitanaka.org/reference/rescale_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rescale a numerical vector — rescale_values","text":"","code":"rescale_values(x, lower = NA, upper = NA)"},{"path":"https://edibble.emitanaka.org/reference/rescale_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rescale a numerical vector — rescale_values","text":"x numerical vector. lower lower bound. upper upper bound.","code":""},{"path":"https://edibble.emitanaka.org/reference/scan_menu.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the short names of the named designs — scan_menu","title":"Find the short names of the named designs — scan_menu","text":"Find short names named designs","code":""},{"path":"https://edibble.emitanaka.org/reference/scan_menu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the short names of the named designs — scan_menu","text":"","code":"scan_menu(packages = NULL, exclude = NULL)"},{"path":"https://edibble.emitanaka.org/reference/scan_menu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the short names of the named designs — scan_menu","text":"packages character vector containing package names search named designs . default search edibble packages loaded. exclude character vector denoting packages exclude search .","code":""},{"path":"https://edibble.emitanaka.org/reference/scan_menu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the short names of the named designs — scan_menu","text":"data.frame package, name, arguments, full name.","code":""},{"path":"https://edibble.emitanaka.org/reference/scan_menu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the short names of the named designs — scan_menu","text":"","code":"scan_menu() #> # A tibble: 10 × 4 #>    package name         args                 name_full                           #>    <chr>   <chr>        <chr>                <chr>                               #>  1 edibble bibd         t, k, r, seed        Balanced Incomplete Block Design    #>  2 edibble crd          t, n, r, seed        Completely Randomised Design        #>  3 edibble factorial    trt, r, design, seed Factorial Design                    #>  4 edibble graeco       t, seed              Graeco-Latin Square Design          #>  5 edibble hyper_graeco t, seed              Hyper-Graeco-Latin Square Design    #>  6 edibble lsd          t, seed              Latin Square Design                 #>  7 edibble rcbd         t, r, seed           Randomised Complete Block Design    #>  8 edibble split        t1, t2, r, seed      Split-Plot Design, Split-Unit Desi… #>  9 edibble strip        t1, t2, r, seed      Strip-Plot Design, Strip-Unit Desi… #> 10 edibble youden       nc, t, seed          Youden Square Design"},{"path":"https://edibble.emitanaka.org/reference/serve_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Serve edibble table — serve_table","title":"Serve edibble table — serve_table","text":"converts edibble graph object data frame called edibble. function used design final form (close final form). table can formed variables can reconciled, otherwise data frame zero rows.","code":""},{"path":"https://edibble.emitanaka.org/reference/serve_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Serve edibble table — serve_table","text":"","code":"serve_table(   .edibble,   ...,   .fail = c(\"error\", \"warn\", \"ignore\"),   .record = TRUE )"},{"path":"https://edibble.emitanaka.org/reference/serve_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serve edibble table — serve_table","text":".edibble edibble design (edbl_design), edibble data frame (edbl_table) object contains edibble data frame attribute design. ... columns show nested labels (available). Tidyselect compatible. .fail failing convert graph table. .record logical value. indicates whether record code step. default TRUE. remain TRUE unless function used wrapper code.","code":""},{"path":"https://edibble.emitanaka.org/reference/serve_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Serve edibble table — serve_table","text":"edbl data frame columns defined vertices rows displayed vertices connected reconcile output.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/serve_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Serve edibble table — serve_table","text":"","code":"design(\"Completely Randomised Design\") %>%   set_units(unit = 28) %>%   set_trts(trt = 6) %>%   allot_trts(trt ~ unit) %>%   assign_trts(\"random\", seed = 521) %>%   serve_table() #> # Completely Randomised Design  #> # An edibble: 28 x 2 #>          unit      trt #>    <unit(28)> <trt(6)> #>         <chr>    <chr>                                                           #>  1     unit01     trt5 #>  2     unit02     trt6 #>  3     unit03     trt1 #>  4     unit04     trt1 #>  5     unit05     trt5 #>  6     unit06     trt6 #>  7     unit07     trt2 #>  8     unit08     trt1 #>  9     unit09     trt3 #> 10     unit10     trt4 #> # ℹ 18 more rows"},{"path":"https://edibble.emitanaka.org/reference/set_context.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the experimental context as metadata — set_context","title":"Set the experimental context as metadata — set_context","text":"structured information can encoded design object. encoding information, can make interoperable. use export_design(), information exported title sheet excel output.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the experimental context as metadata — set_context","text":"","code":"set_context(.edibble, ...)"},{"path":"https://edibble.emitanaka.org/reference/set_context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the experimental context as metadata — set_context","text":".edibble edibble table design. ... series name-value pairs name corresponds name metadata nad value corresponds actual metadata value. name omitted, name metadata assigned corresponding value.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the experimental context as metadata — set_context","text":"","code":"crd <- design(\"Completely Randomised Design\") %>%   set_units(subject = 30) %>%   set_trts(vaccine = c(\"A\", \"B\")) %>%   set_context(aim = \"Testing for new flu vaccine.\",               contact = \"emi.tanaka (at) anu.edu\",               \"Funded by Better Experiments Institute.\") %>%   allot_trts(vaccine ~ subject) %>%   assign_trts(\"random\", seed = 222)  crd$context #> $aim #> [1] \"Testing for new flu vaccine.\" #>  #> $contact #> [1] \"emi.tanaka (at) anu.edu\" #>  #> [[3]] #> [1] \"Funded by Better Experiments Institute.\" #>"},{"path":"https://edibble.emitanaka.org/reference/set_rcrds.html","id":null,"dir":"Reference","previous_headings":"","what":"Set records for given unit — set_rcrds","title":"Set records for given unit — set_rcrds","text":"function creates new nodes edibble graph name corresponding either intended response measured variable recorded. Avoid record names staring \".\" reserved purposes downstream.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_rcrds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set records for given unit — set_rcrds","text":"","code":"set_rcrds(   .edibble,   ...,   .name_repair = c(\"check_unique\", \"unique\", \"universal\", \"minimal\"),   .record = TRUE )  set_rcrds_of(.edibble, ...)"},{"path":"https://edibble.emitanaka.org/reference/set_rcrds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set records for given unit — set_rcrds","text":".edibble edibble design (edbl_design), edibble data frame (edbl_table) object contains edibble data frame attribute design. ... Name-value pair. value correspond single name unit defined set_units. name name record variable. .name_repair argument tibble::tibble(). .record logical value. indicates whether record code step. default TRUE. remain TRUE unless function used wrapper code.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_rcrds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set records for given unit — set_rcrds","text":"edibble design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/set_rcrds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set records for given unit — set_rcrds","text":"","code":"takeout(menu_crd(t = 4, n = 10)) %>%   set_rcrds(y = unit) #> design(\"Completely Randomised Design\") %>% #>   set_units(unit = 10) %>% #>   set_trts(trt = 4) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 53) %>% #>   serve_table()  #>  #> # Completely Randomised Design  #> # An edibble: 10 x 3 #>          unit      trt      y #>    <unit(10)> <trt(4)> <rcrd> #>         <chr>    <chr>  <dbl>                                                    #>  1     unit01     trt1      o #>  2     unit02     trt2      o #>  3     unit03     trt3      o #>  4     unit04     trt2      o #>  5     unit05     trt2      o #>  6     unit06     trt1      o #>  7     unit07     trt4      o #>  8     unit08     trt3      o #>  9     unit09     trt3      o #> 10     unit10     trt4      o  takeout(menu_crd(t = 4, n = 10)) %>%   set_rcrds_of(unit = \"y\") #> design(\"Completely Randomised Design\") %>% #>   set_units(unit = 10) %>% #>   set_trts(trt = 4) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 529) %>% #>   serve_table()  #>  #> # Completely Randomised Design  #> # An edibble: 10 x 3 #>          unit      trt      y #>    <unit(10)> <trt(4)> <rcrd> #>         <chr>    <chr>  <dbl>                                                    #>  1     unit01     trt2      o #>  2     unit02     trt3      o #>  3     unit03     trt3      o #>  4     unit04     trt2      o #>  5     unit05     trt4      o #>  6     unit06     trt1      o #>  7     unit07     trt1      o #>  8     unit08     trt1      o #>  9     unit09     trt2      o #> 10     unit10     trt4      o"},{"path":"https://edibble.emitanaka.org/reference/set_trts.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the treatment variables — set_trts","title":"Set the treatment variables — set_trts","text":"function add special class, called edbl_trt, edibble variables.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_trts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the treatment variables — set_trts","text":"","code":"set_trts(   .edibble = design(),   ...,   .name_repair = c(\"check_unique\", \"unique\", \"universal\", \"minimal\"),   .record = TRUE )"},{"path":"https://edibble.emitanaka.org/reference/set_trts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the treatment variables — set_trts","text":".edibble edibble design (edbl_design), edibble data frame (edbl_table) object contains edibble data frame attribute design. ... Either name-value pair series names. .name_repair argument tibble::tibble(). .record logical value. indicates whether record code step. default TRUE. remain TRUE unless function used wrapper code.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_trts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the treatment variables — set_trts","text":"edibble design.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_trts.html","id":"definition-of-treatment","dir":"Reference","previous_headings":"","what":"Definition of treatment","title":"Set the treatment variables — set_trts","text":"word treatment sometimes used refer one variables. one treatment variables unfortunately confuses whether treatment refers variable combination treatment variables. Treatment whole description applied experiment.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/set_trts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the treatment variables — set_trts","text":"","code":"design() %>%   set_trts(pesticide = c(\"A\", \"B\", \"C\"),            dosage = c(0, 10, 20, 30, 40)) #> An edibble design #> ├─pesticide (3 levels) #> └─dosage (5 levels)"},{"path":"https://edibble.emitanaka.org/reference/set_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Set units used in experiment — set_units","title":"Set units used in experiment — set_units","text":"function sets new edibble variables class edbl_unit. specifically, means new nodes added edbl_graph.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set units used in experiment — set_units","text":"","code":"set_units(   .edibble = design(),   ...,   .name_repair = c(\"check_unique\", \"unique\", \"universal\", \"minimal\"),   .record = TRUE )"},{"path":"https://edibble.emitanaka.org/reference/set_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set units used in experiment — set_units","text":".edibble edibble design (edbl_design), edibble data frame (edbl_table) object contains edibble data frame attribute design. ... Either name-value pair series names. .name_repair argument tibble::tibble(). .record logical value. indicates whether record code step. default TRUE. remain TRUE unless function used wrapper code.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set units used in experiment — set_units","text":"edibble design.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_units.html","id":"definition-of-unit","dir":"Reference","previous_headings":"","what":"Definition of unit","title":"Set units used in experiment — set_units","text":"unit, much like factor, -used word due lack better word, edibble uses word \"unit\" refer entity, physical otherwise, pertain experiment. function doen't explicitly distinguish experimental observational units, unit limited type units. unit edibble can blocking factor even discrete time unit.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_units.html","id":"limitations","dir":"Reference","previous_headings":"","what":"Limitations","title":"Set units used in experiment — set_units","text":"Currently unit discrete set levels need know number levels prior setting units.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/set_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set units used in experiment — set_units","text":"","code":"# 30 rats design() %>%   set_units(rat = 30) %>%   serve_table() #> # An edibble: 30 x 1 #>           rat #>    <unit(30)> #>         <chr>                                                                    #>  1      rat01 #>  2      rat02 #>  3      rat03 #>  4      rat04 #>  5      rat05 #>  6      rat06 #>  7      rat07 #>  8      rat08 #>  9      rat09 #> 10      rat10 #> # ℹ 20 more rows  # 4 girls named \"Anna\", \"Betty\", \"Carol\", \"Diana\" design() %>%   set_units(girl = c(\"Anna\", \"Betty\", \"Carol\", \"Diana\")) %>%   serve_table() #> # An edibble: 4 x 1 #>        girl #>   <unit(4)> #>       <chr>                                                                      #> 1     Anna  #> 2     Betty #> 3     Carol #> 4     Diana  # 3 companies, with 10 boxes each design() %>%   set_units(company = c(\"A\", \"B\", \"C\"),                 box = nested_in(company, 10)) #> An edibble design #> └─company (3 levels) #>   └─box (30 levels)  # 2 classes, one with 10 students, the other with 20 students design() %>%   set_units(class = 2,             student = nested_in(class,                                 1 ~ 10,                                 2 ~ 20)) #> An edibble design #> └─class (2 levels) #>   └─student (30 levels)  # 4 countries with 10 people from Australia & New Zealand and 20 from the rest design() %>%   set_units(country = c(\"AU\", \"NZ\", \"USA\", \"JPN\"),             person = nested_in(country,                                c(\"AU\", \"NZ\") ~ 10,                                            . ~ 20)) %>%   serve_table() #> # An edibble: 60 x 2 #>      country     person #>    <unit(4)> <unit(60)> #>        <chr>      <chr>                                                          #>  1        AU   person01 #>  2        AU   person02 #>  3        AU   person03 #>  4        AU   person04 #>  5        AU   person05 #>  6        AU   person06 #>  7        AU   person07 #>  8        AU   person08 #>  9        AU   person09 #> 10        AU   person10 #> # ℹ 50 more rows"},{"path":"https://edibble.emitanaka.org/reference/simulate_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation process — simulate_process","title":"Simulation process — simulate_process","text":"function create store functions simulate records.","code":""},{"path":"https://edibble.emitanaka.org/reference/simulate_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation process — simulate_process","text":"","code":"simulate_process(.data, ...)"},{"path":"https://edibble.emitanaka.org/reference/simulate_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation process — simulate_process","text":".data edibble table. ... name-value pair name correspond either record name simulating process name return object data frame columns corresponding name records. value must function set default arguments. return object function either vector data frame column names corresponding record names. size correspond number columns.","code":""},{"path":"https://edibble.emitanaka.org/reference/simulate_process.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulation process — simulate_process","text":"creating function, internally can refer factors without referring actual data. data referred expected full data. Like tidyverse, syntax .data reserved full data .env can used refer environment variables. can use syntax n() refer nrow(.data) n(fct) fct corresponds unquoted factor name. return value number observed number levels factor fct data. n(fct1, fct2) return observed number distinct interaction levels fct1 fct2. Note can actually put many process like use process name (starting dot), even record factor.","code":""},{"path":"https://edibble.emitanaka.org/reference/simulate_rcrds.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate records — simulate_rcrds","title":"Simulate records — simulate_rcrds","text":"Simulate records","code":""},{"path":"https://edibble.emitanaka.org/reference/simulate_rcrds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate records — simulate_rcrds","text":"","code":"simulate_rcrds(.data, ..., .seed = NULL)"},{"path":"https://edibble.emitanaka.org/reference/simulate_rcrds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate records — simulate_rcrds","text":".data edibble data ... name-value pair name correspond names used simulate_process(). value returned calling with_params(). .seed optional seed value.","code":""},{"path":"https://edibble.emitanaka.org/reference/skittles.html","id":null,"dir":"Reference","previous_headings":"","what":"Skittles experiment — skittles","title":"Skittles experiment — skittles","text":"contains data skittle experiment conducted Nick Tierney. goal experiment assess people can discern flavour skittle (indicated color skittle) based taste alone. participants blindfolded. experiment 3 participants participant tasting 10 skittles, 2 5 color, random order. skittle_type type skittle. Coincides real_skittle. person participant. order order skittle tasted. choice participant's choice. real_skittle actual skittle color.","code":""},{"path":"https://edibble.emitanaka.org/reference/skittles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skittles experiment — skittles","text":"","code":"skittles"},{"path":"https://edibble.emitanaka.org/reference/skittles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Skittles experiment — skittles","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 30 rows 6 columns.","code":""},{"path":"https://edibble.emitanaka.org/reference/skittles.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Skittles experiment — skittles","text":"https://github.com/njtierney/skittles","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/split_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Split or count the data according to certain factors — split_by","title":"Split or count the data according to certain factors — split_by","text":"function similar result split() returns named list names corresponding levels separating factor (concatenated strings multiple separating factors). key differences split(), splitting factor appear elements list linked factors ancestors appear output, e.g. treatment applied wholeplot subplots nested within subplots, subplot shown output split treatment.","code":""},{"path":"https://edibble.emitanaka.org/reference/split_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split or count the data according to certain factors — split_by","text":"","code":"split_by(.data, ..., .sep = \":\", .remove_empty = TRUE)  count_by(.data, ..., .remove_empty = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/split_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split or count the data according to certain factors — split_by","text":".data edibble table. ... factors split count . split record factor factor uniquely indexes smallest unit design. also combine treatment unit factors together. .sep separator use one factor split . .remove_empty Remove empty combinations. Default TRUE.","code":""},{"path":"https://edibble.emitanaka.org/reference/split_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split or count the data according to certain factors — split_by","text":"named list.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/split_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split or count the data according to certain factors — split_by","text":"","code":"spd <- takeout(menu_split()) spd %>% split(trt1) #> Error: object 'trt1' not found spd %>% split_by(trt1) #> $trt11 #> # A tibble: 8 × 1 #>     mainplot #>   <unit(64)> #> 1 mainplot07 #> 2 mainplot08 #> 3 mainplot21 #> 4 mainplot22 #> 5 mainplot25 #> 6 mainplot28 #> 7 mainplot48 #> 8 mainplot52 #>  #> $trt12 #> # A tibble: 8 × 1 #>     mainplot #>   <unit(64)> #> 1 mainplot02 #> 2 mainplot04 #> 3 mainplot20 #> 4 mainplot24 #> 5 mainplot33 #> 6 mainplot35 #> 7 mainplot40 #> 8 mainplot45 #>  #> $trt13 #> # A tibble: 8 × 1 #>     mainplot #>   <unit(64)> #> 1 mainplot18 #> 2 mainplot19 #> 3 mainplot26 #> 4 mainplot27 #> 5 mainplot29 #> 6 mainplot36 #> 7 mainplot58 #> 8 mainplot59 #>  #> $trt14 #> # A tibble: 8 × 1 #>     mainplot #>   <unit(64)> #> 1 mainplot01 #> 2 mainplot03 #> 3 mainplot09 #> 4 mainplot12 #> 5 mainplot32 #> 6 mainplot37 #> 7 mainplot46 #> 8 mainplot47 #>  #> $trt15 #> # A tibble: 8 × 1 #>     mainplot #>   <unit(64)> #> 1 mainplot11 #> 2 mainplot14 #> 3 mainplot34 #> 4 mainplot38 #> 5 mainplot51 #> 6 mainplot53 #> 7 mainplot54 #> 8 mainplot64 #>  #> $trt16 #> # A tibble: 8 × 1 #>     mainplot #>   <unit(64)> #> 1 mainplot15 #> 2 mainplot30 #> 3 mainplot44 #> 4 mainplot55 #> 5 mainplot56 #> 6 mainplot57 #> 7 mainplot61 #> 8 mainplot63 #>  #> $trt17 #> # A tibble: 8 × 1 #>     mainplot #>   <unit(64)> #> 1 mainplot10 #> 2 mainplot13 #> 3 mainplot16 #> 4 mainplot17 #> 5 mainplot23 #> 6 mainplot39 #> 7 mainplot43 #> 8 mainplot62 #>  #> $trt18 #> # A tibble: 8 × 1 #>     mainplot #>   <unit(64)> #> 1 mainplot05 #> 2 mainplot06 #> 3 mainplot31 #> 4 mainplot41 #> 5 mainplot42 #> 6 mainplot49 #> 7 mainplot50 #> 8 mainplot60 #>  spd %>% split_by(trt2) #> $trt21 #> # A tibble: 64 × 2 #>        subplot   mainplot #>    <unit(576)> <unit(64)> #>  1  subplot009 mainplot01 #>  2  subplot010 mainplot02 #>  3  subplot026 mainplot03 #>  4  subplot030 mainplot04 #>  5  subplot041 mainplot05 #>  6  subplot052 mainplot06 #>  7  subplot059 mainplot07 #>  8  subplot071 mainplot08 #>  9  subplot080 mainplot09 #> 10  subplot085 mainplot10 #> # ℹ 54 more rows #>  #> $trt22 #> # A tibble: 64 × 2 #>        subplot   mainplot #>    <unit(576)> <unit(64)> #>  1  subplot005 mainplot01 #>  2  subplot013 mainplot02 #>  3  subplot020 mainplot03 #>  4  subplot031 mainplot04 #>  5  subplot044 mainplot05 #>  6  subplot053 mainplot06 #>  7  subplot058 mainplot07 #>  8  subplot066 mainplot08 #>  9  subplot076 mainplot09 #> 10  subplot088 mainplot10 #> # ℹ 54 more rows #>  #> $trt23 #> # A tibble: 64 × 2 #>        subplot   mainplot #>    <unit(576)> <unit(64)> #>  1  subplot001 mainplot01 #>  2  subplot014 mainplot02 #>  3  subplot021 mainplot03 #>  4  subplot032 mainplot04 #>  5  subplot045 mainplot05 #>  6  subplot047 mainplot06 #>  7  subplot057 mainplot07 #>  8  subplot065 mainplot08 #>  9  subplot077 mainplot09 #> 10  subplot084 mainplot10 #> # ℹ 54 more rows #>  #> $trt24 #> # A tibble: 64 × 2 #>        subplot   mainplot #>    <unit(576)> <unit(64)> #>  1  subplot002 mainplot01 #>  2  subplot011 mainplot02 #>  3  subplot023 mainplot03 #>  4  subplot034 mainplot04 #>  5  subplot037 mainplot05 #>  6  subplot050 mainplot06 #>  7  subplot055 mainplot07 #>  8  subplot070 mainplot08 #>  9  subplot075 mainplot09 #> 10  subplot086 mainplot10 #> # ℹ 54 more rows #>  #> $trt25 #> # A tibble: 64 × 2 #>        subplot   mainplot #>    <unit(576)> <unit(64)> #>  1  subplot003 mainplot01 #>  2  subplot017 mainplot02 #>  3  subplot019 mainplot03 #>  4  subplot028 mainplot04 #>  5  subplot043 mainplot05 #>  6  subplot048 mainplot06 #>  7  subplot063 mainplot07 #>  8  subplot072 mainplot08 #>  9  subplot078 mainplot09 #> 10  subplot089 mainplot10 #> # ℹ 54 more rows #>  #> $trt26 #> # A tibble: 64 × 2 #>        subplot   mainplot #>    <unit(576)> <unit(64)> #>  1  subplot006 mainplot01 #>  2  subplot016 mainplot02 #>  3  subplot027 mainplot03 #>  4  subplot033 mainplot04 #>  5  subplot039 mainplot05 #>  6  subplot054 mainplot06 #>  7  subplot060 mainplot07 #>  8  subplot068 mainplot08 #>  9  subplot073 mainplot09 #> 10  subplot083 mainplot10 #> # ℹ 54 more rows #>  #> $trt27 #> # A tibble: 64 × 2 #>        subplot   mainplot #>    <unit(576)> <unit(64)> #>  1  subplot007 mainplot01 #>  2  subplot015 mainplot02 #>  3  subplot024 mainplot03 #>  4  subplot029 mainplot04 #>  5  subplot042 mainplot05 #>  6  subplot051 mainplot06 #>  7  subplot062 mainplot07 #>  8  subplot067 mainplot08 #>  9  subplot074 mainplot09 #> 10  subplot090 mainplot10 #> # ℹ 54 more rows #>  #> $trt28 #> # A tibble: 64 × 2 #>        subplot   mainplot #>    <unit(576)> <unit(64)> #>  1  subplot004 mainplot01 #>  2  subplot018 mainplot02 #>  3  subplot022 mainplot03 #>  4  subplot035 mainplot04 #>  5  subplot040 mainplot05 #>  6  subplot046 mainplot06 #>  7  subplot061 mainplot07 #>  8  subplot064 mainplot08 #>  9  subplot079 mainplot09 #> 10  subplot087 mainplot10 #> # ℹ 54 more rows #>  #> $trt29 #> # A tibble: 64 × 2 #>        subplot   mainplot #>    <unit(576)> <unit(64)> #>  1  subplot008 mainplot01 #>  2  subplot012 mainplot02 #>  3  subplot025 mainplot03 #>  4  subplot036 mainplot04 #>  5  subplot038 mainplot05 #>  6  subplot049 mainplot06 #>  7  subplot056 mainplot07 #>  8  subplot069 mainplot08 #>  9  subplot081 mainplot09 #> 10  subplot082 mainplot10 #> # ℹ 54 more rows #>  spd %>% split_by(mainplot) #> $mainplot01 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot001    trt23 #> 2  subplot002    trt24 #> 3  subplot003    trt25 #> 4  subplot004    trt28 #> 5  subplot005    trt22 #> 6  subplot006    trt26 #> 7  subplot007    trt27 #> 8  subplot008    trt29 #> 9  subplot009    trt21 #>  #> $mainplot02 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot010    trt21 #> 2  subplot011    trt24 #> 3  subplot012    trt29 #> 4  subplot013    trt22 #> 5  subplot014    trt23 #> 6  subplot015    trt27 #> 7  subplot016    trt26 #> 8  subplot017    trt25 #> 9  subplot018    trt28 #>  #> $mainplot03 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot019    trt25 #> 2  subplot020    trt22 #> 3  subplot021    trt23 #> 4  subplot022    trt28 #> 5  subplot023    trt24 #> 6  subplot024    trt27 #> 7  subplot025    trt29 #> 8  subplot026    trt21 #> 9  subplot027    trt26 #>  #> $mainplot04 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot028    trt25 #> 2  subplot029    trt27 #> 3  subplot030    trt21 #> 4  subplot031    trt22 #> 5  subplot032    trt23 #> 6  subplot033    trt26 #> 7  subplot034    trt24 #> 8  subplot035    trt28 #> 9  subplot036    trt29 #>  #> $mainplot05 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot037    trt24 #> 2  subplot038    trt29 #> 3  subplot039    trt26 #> 4  subplot040    trt28 #> 5  subplot041    trt21 #> 6  subplot042    trt27 #> 7  subplot043    trt25 #> 8  subplot044    trt22 #> 9  subplot045    trt23 #>  #> $mainplot06 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot046    trt28 #> 2  subplot047    trt23 #> 3  subplot048    trt25 #> 4  subplot049    trt29 #> 5  subplot050    trt24 #> 6  subplot051    trt27 #> 7  subplot052    trt21 #> 8  subplot053    trt22 #> 9  subplot054    trt26 #>  #> $mainplot07 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot055    trt24 #> 2  subplot056    trt29 #> 3  subplot057    trt23 #> 4  subplot058    trt22 #> 5  subplot059    trt21 #> 6  subplot060    trt26 #> 7  subplot061    trt28 #> 8  subplot062    trt27 #> 9  subplot063    trt25 #>  #> $mainplot08 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot064    trt28 #> 2  subplot065    trt23 #> 3  subplot066    trt22 #> 4  subplot067    trt27 #> 5  subplot068    trt26 #> 6  subplot069    trt29 #> 7  subplot070    trt24 #> 8  subplot071    trt21 #> 9  subplot072    trt25 #>  #> $mainplot09 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot073    trt26 #> 2  subplot074    trt27 #> 3  subplot075    trt24 #> 4  subplot076    trt22 #> 5  subplot077    trt23 #> 6  subplot078    trt25 #> 7  subplot079    trt28 #> 8  subplot080    trt21 #> 9  subplot081    trt29 #>  #> $mainplot10 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot082    trt29 #> 2  subplot083    trt26 #> 3  subplot084    trt23 #> 4  subplot085    trt21 #> 5  subplot086    trt24 #> 6  subplot087    trt28 #> 7  subplot088    trt22 #> 8  subplot089    trt25 #> 9  subplot090    trt27 #>  #> $mainplot11 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot091    trt24 #> 2  subplot092    trt29 #> 3  subplot093    trt27 #> 4  subplot094    trt28 #> 5  subplot095    trt25 #> 6  subplot096    trt21 #> 7  subplot097    trt23 #> 8  subplot098    trt26 #> 9  subplot099    trt22 #>  #> $mainplot12 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot100    trt24 #> 2  subplot101    trt25 #> 3  subplot102    trt28 #> 4  subplot103    trt22 #> 5  subplot104    trt23 #> 6  subplot105    trt21 #> 7  subplot106    trt29 #> 8  subplot107    trt26 #> 9  subplot108    trt27 #>  #> $mainplot13 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot109    trt21 #> 2  subplot110    trt24 #> 3  subplot111    trt28 #> 4  subplot112    trt25 #> 5  subplot113    trt27 #> 6  subplot114    trt22 #> 7  subplot115    trt26 #> 8  subplot116    trt29 #> 9  subplot117    trt23 #>  #> $mainplot14 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot118    trt29 #> 2  subplot119    trt25 #> 3  subplot120    trt23 #> 4  subplot121    trt24 #> 5  subplot122    trt22 #> 6  subplot123    trt28 #> 7  subplot124    trt26 #> 8  subplot125    trt27 #> 9  subplot126    trt21 #>  #> $mainplot15 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot127    trt24 #> 2  subplot128    trt28 #> 3  subplot129    trt27 #> 4  subplot130    trt29 #> 5  subplot131    trt21 #> 6  subplot132    trt23 #> 7  subplot133    trt22 #> 8  subplot134    trt26 #> 9  subplot135    trt25 #>  #> $mainplot16 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot136    trt22 #> 2  subplot137    trt29 #> 3  subplot138    trt26 #> 4  subplot139    trt21 #> 5  subplot140    trt23 #> 6  subplot141    trt27 #> 7  subplot142    trt24 #> 8  subplot143    trt25 #> 9  subplot144    trt28 #>  #> $mainplot17 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot145    trt27 #> 2  subplot146    trt26 #> 3  subplot147    trt25 #> 4  subplot148    trt23 #> 5  subplot149    trt28 #> 6  subplot150    trt21 #> 7  subplot151    trt22 #> 8  subplot152    trt24 #> 9  subplot153    trt29 #>  #> $mainplot18 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot154    trt24 #> 2  subplot155    trt21 #> 3  subplot156    trt27 #> 4  subplot157    trt25 #> 5  subplot158    trt29 #> 6  subplot159    trt28 #> 7  subplot160    trt22 #> 8  subplot161    trt23 #> 9  subplot162    trt26 #>  #> $mainplot19 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot163    trt21 #> 2  subplot164    trt22 #> 3  subplot165    trt23 #> 4  subplot166    trt24 #> 5  subplot167    trt25 #> 6  subplot168    trt28 #> 7  subplot169    trt29 #> 8  subplot170    trt27 #> 9  subplot171    trt26 #>  #> $mainplot20 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot172    trt25 #> 2  subplot173    trt22 #> 3  subplot174    trt28 #> 4  subplot175    trt26 #> 5  subplot176    trt21 #> 6  subplot177    trt29 #> 7  subplot178    trt27 #> 8  subplot179    trt23 #> 9  subplot180    trt24 #>  #> $mainplot21 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot181    trt29 #> 2  subplot182    trt24 #> 3  subplot183    trt25 #> 4  subplot184    trt28 #> 5  subplot185    trt23 #> 6  subplot186    trt21 #> 7  subplot187    trt26 #> 8  subplot188    trt22 #> 9  subplot189    trt27 #>  #> $mainplot22 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot190    trt26 #> 2  subplot191    trt23 #> 3  subplot192    trt27 #> 4  subplot193    trt29 #> 5  subplot194    trt22 #> 6  subplot195    trt21 #> 7  subplot196    trt28 #> 8  subplot197    trt24 #> 9  subplot198    trt25 #>  #> $mainplot23 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot199    trt23 #> 2  subplot200    trt22 #> 3  subplot201    trt29 #> 4  subplot202    trt25 #> 5  subplot203    trt27 #> 6  subplot204    trt28 #> 7  subplot205    trt24 #> 8  subplot206    trt26 #> 9  subplot207    trt21 #>  #> $mainplot24 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot208    trt25 #> 2  subplot209    trt27 #> 3  subplot210    trt26 #> 4  subplot211    trt28 #> 5  subplot212    trt29 #> 6  subplot213    trt21 #> 7  subplot214    trt23 #> 8  subplot215    trt22 #> 9  subplot216    trt24 #>  #> $mainplot25 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot217    trt24 #> 2  subplot218    trt27 #> 3  subplot219    trt29 #> 4  subplot220    trt28 #> 5  subplot221    trt21 #> 6  subplot222    trt25 #> 7  subplot223    trt22 #> 8  subplot224    trt23 #> 9  subplot225    trt26 #>  #> $mainplot26 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot226    trt24 #> 2  subplot227    trt23 #> 3  subplot228    trt22 #> 4  subplot229    trt21 #> 5  subplot230    trt27 #> 6  subplot231    trt26 #> 7  subplot232    trt29 #> 8  subplot233    trt25 #> 9  subplot234    trt28 #>  #> $mainplot27 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot235    trt28 #> 2  subplot236    trt21 #> 3  subplot237    trt25 #> 4  subplot238    trt24 #> 5  subplot239    trt23 #> 6  subplot240    trt27 #> 7  subplot241    trt26 #> 8  subplot242    trt22 #> 9  subplot243    trt29 #>  #> $mainplot28 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot244    trt27 #> 2  subplot245    trt25 #> 3  subplot246    trt21 #> 4  subplot247    trt24 #> 5  subplot248    trt29 #> 6  subplot249    trt22 #> 7  subplot250    trt26 #> 8  subplot251    trt23 #> 9  subplot252    trt28 #>  #> $mainplot29 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot253    trt24 #> 2  subplot254    trt23 #> 3  subplot255    trt27 #> 4  subplot256    trt29 #> 5  subplot257    trt28 #> 6  subplot258    trt22 #> 7  subplot259    trt25 #> 8  subplot260    trt26 #> 9  subplot261    trt21 #>  #> $mainplot30 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot262    trt29 #> 2  subplot263    trt26 #> 3  subplot264    trt28 #> 4  subplot265    trt27 #> 5  subplot266    trt25 #> 6  subplot267    trt21 #> 7  subplot268    trt24 #> 8  subplot269    trt22 #> 9  subplot270    trt23 #>  #> $mainplot31 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot271    trt26 #> 2  subplot272    trt24 #> 3  subplot273    trt29 #> 4  subplot274    trt21 #> 5  subplot275    trt28 #> 6  subplot276    trt23 #> 7  subplot277    trt27 #> 8  subplot278    trt25 #> 9  subplot279    trt22 #>  #> $mainplot32 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot280    trt24 #> 2  subplot281    trt27 #> 3  subplot282    trt22 #> 4  subplot283    trt25 #> 5  subplot284    trt28 #> 6  subplot285    trt21 #> 7  subplot286    trt29 #> 8  subplot287    trt23 #> 9  subplot288    trt26 #>  #> $mainplot33 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot289    trt22 #> 2  subplot290    trt23 #> 3  subplot291    trt24 #> 4  subplot292    trt28 #> 5  subplot293    trt21 #> 6  subplot294    trt29 #> 7  subplot295    trt27 #> 8  subplot296    trt26 #> 9  subplot297    trt25 #>  #> $mainplot34 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot298    trt25 #> 2  subplot299    trt21 #> 3  subplot300    trt28 #> 4  subplot301    trt26 #> 5  subplot302    trt23 #> 6  subplot303    trt24 #> 7  subplot304    trt27 #> 8  subplot305    trt29 #> 9  subplot306    trt22 #>  #> $mainplot35 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot307    trt24 #> 2  subplot308    trt27 #> 3  subplot309    trt22 #> 4  subplot310    trt28 #> 5  subplot311    trt23 #> 6  subplot312    trt29 #> 7  subplot313    trt21 #> 8  subplot314    trt25 #> 9  subplot315    trt26 #>  #> $mainplot36 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot316    trt25 #> 2  subplot317    trt28 #> 3  subplot318    trt22 #> 4  subplot319    trt26 #> 5  subplot320    trt29 #> 6  subplot321    trt23 #> 7  subplot322    trt21 #> 8  subplot323    trt24 #> 9  subplot324    trt27 #>  #> $mainplot37 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot325    trt29 #> 2  subplot326    trt24 #> 3  subplot327    trt22 #> 4  subplot328    trt21 #> 5  subplot329    trt27 #> 6  subplot330    trt23 #> 7  subplot331    trt26 #> 8  subplot332    trt25 #> 9  subplot333    trt28 #>  #> $mainplot38 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot334    trt23 #> 2  subplot335    trt25 #> 3  subplot336    trt21 #> 4  subplot337    trt22 #> 5  subplot338    trt24 #> 6  subplot339    trt28 #> 7  subplot340    trt27 #> 8  subplot341    trt26 #> 9  subplot342    trt29 #>  #> $mainplot39 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot343    trt28 #> 2  subplot344    trt29 #> 3  subplot345    trt23 #> 4  subplot346    trt27 #> 5  subplot347    trt25 #> 6  subplot348    trt24 #> 7  subplot349    trt22 #> 8  subplot350    trt26 #> 9  subplot351    trt21 #>  #> $mainplot40 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot352    trt29 #> 2  subplot353    trt21 #> 3  subplot354    trt22 #> 4  subplot355    trt26 #> 5  subplot356    trt27 #> 6  subplot357    trt25 #> 7  subplot358    trt23 #> 8  subplot359    trt24 #> 9  subplot360    trt28 #>  #> $mainplot41 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot361    trt29 #> 2  subplot362    trt26 #> 3  subplot363    trt22 #> 4  subplot364    trt27 #> 5  subplot365    trt23 #> 6  subplot366    trt25 #> 7  subplot367    trt21 #> 8  subplot368    trt28 #> 9  subplot369    trt24 #>  #> $mainplot42 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot370    trt27 #> 2  subplot371    trt26 #> 3  subplot372    trt28 #> 4  subplot373    trt22 #> 5  subplot374    trt29 #> 6  subplot375    trt25 #> 7  subplot376    trt21 #> 8  subplot377    trt24 #> 9  subplot378    trt23 #>  #> $mainplot43 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot379    trt28 #> 2  subplot380    trt22 #> 3  subplot381    trt27 #> 4  subplot382    trt24 #> 5  subplot383    trt29 #> 6  subplot384    trt25 #> 7  subplot385    trt26 #> 8  subplot386    trt23 #> 9  subplot387    trt21 #>  #> $mainplot44 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot388    trt26 #> 2  subplot389    trt27 #> 3  subplot390    trt21 #> 4  subplot391    trt29 #> 5  subplot392    trt23 #> 6  subplot393    trt24 #> 7  subplot394    trt28 #> 8  subplot395    trt25 #> 9  subplot396    trt22 #>  #> $mainplot45 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot397    trt21 #> 2  subplot398    trt25 #> 3  subplot399    trt26 #> 4  subplot400    trt23 #> 5  subplot401    trt28 #> 6  subplot402    trt24 #> 7  subplot403    trt29 #> 8  subplot404    trt22 #> 9  subplot405    trt27 #>  #> $mainplot46 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot406    trt26 #> 2  subplot407    trt23 #> 3  subplot408    trt27 #> 4  subplot409    trt29 #> 5  subplot410    trt25 #> 6  subplot411    trt21 #> 7  subplot412    trt24 #> 8  subplot413    trt28 #> 9  subplot414    trt22 #>  #> $mainplot47 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot415    trt26 #> 2  subplot416    trt29 #> 3  subplot417    trt25 #> 4  subplot418    trt22 #> 5  subplot419    trt21 #> 6  subplot420    trt24 #> 7  subplot421    trt23 #> 8  subplot422    trt28 #> 9  subplot423    trt27 #>  #> $mainplot48 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot424    trt21 #> 2  subplot425    trt25 #> 3  subplot426    trt28 #> 4  subplot427    trt22 #> 5  subplot428    trt23 #> 6  subplot429    trt27 #> 7  subplot430    trt24 #> 8  subplot431    trt26 #> 9  subplot432    trt29 #>  #> $mainplot49 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot433    trt28 #> 2  subplot434    trt29 #> 3  subplot435    trt23 #> 4  subplot436    trt25 #> 5  subplot437    trt21 #> 6  subplot438    trt26 #> 7  subplot439    trt22 #> 8  subplot440    trt27 #> 9  subplot441    trt24 #>  #> $mainplot50 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot442    trt26 #> 2  subplot443    trt22 #> 3  subplot444    trt23 #> 4  subplot445    trt25 #> 5  subplot446    trt28 #> 6  subplot447    trt27 #> 7  subplot448    trt29 #> 8  subplot449    trt24 #> 9  subplot450    trt21 #>  #> $mainplot51 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot451    trt27 #> 2  subplot452    trt26 #> 3  subplot453    trt22 #> 4  subplot454    trt21 #> 5  subplot455    trt24 #> 6  subplot456    trt23 #> 7  subplot457    trt28 #> 8  subplot458    trt29 #> 9  subplot459    trt25 #>  #> $mainplot52 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot460    trt21 #> 2  subplot461    trt23 #> 3  subplot462    trt22 #> 4  subplot463    trt24 #> 5  subplot464    trt25 #> 6  subplot465    trt27 #> 7  subplot466    trt28 #> 8  subplot467    trt29 #> 9  subplot468    trt26 #>  #> $mainplot53 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot469    trt21 #> 2  subplot470    trt23 #> 3  subplot471    trt25 #> 4  subplot472    trt28 #> 5  subplot473    trt26 #> 6  subplot474    trt22 #> 7  subplot475    trt24 #> 8  subplot476    trt29 #> 9  subplot477    trt27 #>  #> $mainplot54 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot478    trt21 #> 2  subplot479    trt24 #> 3  subplot480    trt28 #> 4  subplot481    trt22 #> 5  subplot482    trt29 #> 6  subplot483    trt27 #> 7  subplot484    trt23 #> 8  subplot485    trt25 #> 9  subplot486    trt26 #>  #> $mainplot55 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot487    trt21 #> 2  subplot488    trt24 #> 3  subplot489    trt28 #> 4  subplot490    trt23 #> 5  subplot491    trt25 #> 6  subplot492    trt29 #> 7  subplot493    trt26 #> 8  subplot494    trt22 #> 9  subplot495    trt27 #>  #> $mainplot56 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot496    trt26 #> 2  subplot497    trt22 #> 3  subplot498    trt25 #> 4  subplot499    trt28 #> 5  subplot500    trt24 #> 6  subplot501    trt23 #> 7  subplot502    trt27 #> 8  subplot503    trt29 #> 9  subplot504    trt21 #>  #> $mainplot57 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot505    trt21 #> 2  subplot506    trt27 #> 3  subplot507    trt25 #> 4  subplot508    trt22 #> 5  subplot509    trt28 #> 6  subplot510    trt24 #> 7  subplot511    trt26 #> 8  subplot512    trt29 #> 9  subplot513    trt23 #>  #> $mainplot58 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot514    trt29 #> 2  subplot515    trt21 #> 3  subplot516    trt25 #> 4  subplot517    trt24 #> 5  subplot518    trt26 #> 6  subplot519    trt23 #> 7  subplot520    trt28 #> 8  subplot521    trt22 #> 9  subplot522    trt27 #>  #> $mainplot59 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot523    trt27 #> 2  subplot524    trt26 #> 3  subplot525    trt24 #> 4  subplot526    trt23 #> 5  subplot527    trt21 #> 6  subplot528    trt29 #> 7  subplot529    trt28 #> 8  subplot530    trt25 #> 9  subplot531    trt22 #>  #> $mainplot60 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot532    trt22 #> 2  subplot533    trt26 #> 3  subplot534    trt24 #> 4  subplot535    trt28 #> 5  subplot536    trt29 #> 6  subplot537    trt25 #> 7  subplot538    trt27 #> 8  subplot539    trt21 #> 9  subplot540    trt23 #>  #> $mainplot61 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot541    trt22 #> 2  subplot542    trt25 #> 3  subplot543    trt21 #> 4  subplot544    trt29 #> 5  subplot545    trt24 #> 6  subplot546    trt28 #> 7  subplot547    trt23 #> 8  subplot548    trt26 #> 9  subplot549    trt27 #>  #> $mainplot62 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot550    trt28 #> 2  subplot551    trt27 #> 3  subplot552    trt23 #> 4  subplot553    trt21 #> 5  subplot554    trt29 #> 6  subplot555    trt24 #> 7  subplot556    trt25 #> 8  subplot557    trt22 #> 9  subplot558    trt26 #>  #> $mainplot63 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot559    trt24 #> 2  subplot560    trt23 #> 3  subplot561    trt22 #> 4  subplot562    trt27 #> 5  subplot563    trt29 #> 6  subplot564    trt25 #> 7  subplot565    trt26 #> 8  subplot566    trt21 #> 9  subplot567    trt28 #>  #> $mainplot64 #> # A tibble: 9 × 2 #>       subplot     trt2 #>   <unit(576)> <trt(9)> #> 1  subplot568    trt29 #> 2  subplot569    trt26 #> 3  subplot570    trt27 #> 4  subplot571    trt28 #> 5  subplot572    trt24 #> 6  subplot573    trt22 #> 7  subplot574    trt25 #> 8  subplot575    trt21 #> 9  subplot576    trt23 #>  spd %>% count_by(trt1) #>    trt1 mainplot #> 1 trt11        8 #> 2 trt12        8 #> 3 trt13        8 #> 4 trt14        8 #> 5 trt15        8 #> 6 trt16        8 #> 7 trt17        8 #> 8 trt18        8  fac <- takeout(menu_factorial(trt = c(2, 2, 2))) fac %>% count_by(where(~is_trt(.x))) #>    trt1  trt2  trt3 unit #> 1 trt11 trt21 trt31    2 #> 2 trt12 trt21 trt31    2 #> 3 trt11 trt22 trt31    2 #> 4 trt12 trt22 trt31    2 #> 5 trt11 trt21 trt32    2 #> 6 trt12 trt21 trt32    2 #> 7 trt11 trt22 trt32    2 #> 8 trt12 trt22 trt32    2"},{"path":"https://edibble.emitanaka.org/reference/takeout.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a named experimental design — takeout","title":"Create a named experimental design — takeout","text":"function generates named experimental design supplying selected menu named design prints default can find available recipes scan_menu().","code":""},{"path":"https://edibble.emitanaka.org/reference/takeout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a named experimental design — takeout","text":"","code":"takeout(recipe = NULL, show = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/takeout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a named experimental design — takeout","text":"recipe named design object. typically generated function prefix menu_. nothing supplied, randomly select one. show logical value indicate whether code shown . Default TRUE.","code":""},{"path":"https://edibble.emitanaka.org/reference/takeout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a named experimental design — takeout","text":"recipe design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/takeout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a named experimental design — takeout","text":"","code":"takeout(menu_crd(n = 50, t = 5)) #> design(\"Completely Randomised Design\") %>% #>   set_units(unit = 50) %>% #>   set_trts(trt = 5) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 506) %>% #>   serve_table()  #>  #> # Completely Randomised Design  #> # An edibble: 50 x 2 #>          unit      trt #>  * <unit(50)> <trt(5)> #>         <chr>    <chr>                                                           #>  1     unit01     trt1 #>  2     unit02     trt2 #>  3     unit03     trt1 #>  4     unit04     trt2 #>  5     unit05     trt2 #>  6     unit06     trt5 #>  7     unit07     trt4 #>  8     unit08     trt5 #>  9     unit09     trt3 #> 10     unit10     trt1 #> # ℹ 40 more rows # if you omit the design parameters then it will use the default # (which may be random) takeout(menu_crd()) #> design(\"Completely Randomised Design\") %>% #>   set_units(unit = 16) %>% #>   set_trts(trt = 4) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 267) %>% #>   serve_table()  #>  #> # Completely Randomised Design  #> # An edibble: 16 x 2 #>          unit      trt #>  * <unit(16)> <trt(4)> #>         <chr>    <chr>                                                           #>  1     unit01     trt3 #>  2     unit02     trt2 #>  3     unit03     trt2 #>  4     unit04     trt3 #>  5     unit05     trt1 #>  6     unit06     trt4 #>  7     unit07     trt1 #>  8     unit08     trt2 #>  9     unit09     trt4 #> 10     unit10     trt4 #> 11     unit11     trt3 #> 12     unit12     trt1 #> 13     unit13     trt4 #> 14     unit14     trt3 #> 15     unit15     trt2 #> 16     unit16     trt1 # if you don't give any short names then it will generate a random one takeout() #> → No name was supplied so selecting a random named experimental design... #> → Selected Split-Plot DesignSelected Split-Unit Design #> design(\"Split-Plot Design | Split-Unit Design\") %>% #>   set_units(mainplot = 14, #>              subplot = nested_in(mainplot, 9)) %>% #>   set_trts(trt1 = 7, #>            trt2 = 9) %>% #>   allot_trts(trt1 ~ mainplot, #>              trt2 ~ subplot) %>% #>   assign_trts(\"random\", seed = 948) %>% #>   serve_table()  #>  #> # Split-Plot Design | Split-Unit Design  #> # An edibble: 126 x 4 #>      mainplot     subplot     trt1     trt2 #>  * <unit(14)> <unit(126)> <trt(7)> <trt(9)> #>         <chr>       <chr>    <chr>    <chr>                                      #>  1 mainplot01  subplot001    trt11    trt26 #>  2 mainplot01  subplot002    trt11    trt22 #>  3 mainplot01  subplot003    trt11    trt23 #>  4 mainplot01  subplot004    trt11    trt29 #>  5 mainplot01  subplot005    trt11    trt25 #>  6 mainplot01  subplot006    trt11    trt21 #>  7 mainplot01  subplot007    trt11    trt28 #>  8 mainplot01  subplot008    trt11    trt27 #>  9 mainplot01  subplot009    trt11    trt24 #> 10 mainplot02  subplot010    trt15    trt24 #> # ℹ 116 more rows"},{"path":"https://edibble.emitanaka.org/reference/trts_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Treatments table — trts_table","title":"Treatments table — trts_table","text":"Treatments table","code":""},{"path":"https://edibble.emitanaka.org/reference/trts_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Treatments table — trts_table","text":"","code":"trts_table(.edibble)"},{"path":"https://edibble.emitanaka.org/reference/trts_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Treatments table — trts_table","text":".edibble edibble table","code":""},{"path":"https://edibble.emitanaka.org/reference/utility-edibble-var.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility functions for edibble variable — utility-edibble-var","title":"Utility functions for edibble variable — utility-edibble-var","text":"S3 methods edbl_fct objects expected output factor. functions utility functions related edbl_fct object.","code":""},{"path":"https://edibble.emitanaka.org/reference/utility-edibble-var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility functions for edibble variable — utility-edibble-var","text":"","code":"# S3 method for edbl_fct as.character(x, ...)  # S3 method for edbl_fct as.integer(x, ...)  is_fct(x)  is_unit(x)  is_trt(x)  is_rcrd(x)"},{"path":"https://edibble.emitanaka.org/reference/utility-edibble-var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility functions for edibble variable — utility-edibble-var","text":"x edbl_fct object. ... Ignored.","code":""},{"path":"https://edibble.emitanaka.org/reference/utility-edibble-var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility functions for edibble variable — utility-edibble-var","text":"character vector.","code":""},{"path":"https://edibble.emitanaka.org/reference/with_params.html","id":null,"dir":"Reference","previous_headings":"","what":"This is a helper function to set the parameter values — with_params","title":"This is a helper function to set the parameter values — with_params","text":"helper function set parameter values","code":""},{"path":"https://edibble.emitanaka.org/reference/with_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This is a helper function to set the parameter values — with_params","text":"","code":"with_params(..., .censor = NA, .aggregate = NULL)"},{"path":"https://edibble.emitanaka.org/reference/with_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This is a helper function to set the parameter values — with_params","text":"... series name-value pair inputs used simulation process. .censor value censor outside valid values. value lower upper bound vector size 2. Use -Inf Inf want censor either value. can use list want different censoring different records name corresponds name record. want apply default value/function censoring use name \".default\". can use function instead value. function may specified lambda function. object .lower .upper special reserved values, corresponding limits given valid values, can used within function. .aggregate function aggregation response values differ within unit level record. Use NA want aggregate. default, get mean mode depending encoding (numeric mean, mode character factor), absent, based returned encoding. can named list names correspond record name values corresponding function.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/with_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Validation values — with_value","title":"Validation values — with_value","text":"creates list used later creating data validation rules data exported.","code":""},{"path":"https://edibble.emitanaka.org/reference/with_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validation values — with_value","text":"","code":"with_value(   operator = c(\"=\", \"==\", \">=\", \"<=\", \"<\", \">\", \"!=\"),   value = NULL,   between = NULL,   not_between = NULL )"},{"path":"https://edibble.emitanaka.org/reference/with_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validation values — with_value","text":"operator Operator apply. value optional value related operator , not_between optional numerical vector size two first entry minimum value second entry maximum value. , value valid within range minimum maximum value inclusive. not_between, value must lie outside values.","code":""},{"path":"https://edibble.emitanaka.org/reference/with_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validation values — with_value","text":"list two elements operator value.","code":""},{"path":"https://edibble.emitanaka.org/reference/with_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"A helper function to set variables that the record is dependent on. — with_variables","title":"A helper function to set variables that the record is dependent on. — with_variables","text":"options give characteristics record (independent variables). Warning: none options work moment!","code":""},{"path":"https://edibble.emitanaka.org/reference/with_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A helper function to set variables that the record is dependent on. — with_variables","text":"","code":"with_variables(   ...,   .missing = FALSE,   .interaction = random_true_false(),   .discrete = FALSE,   .linear = random_true_false(),   .error_dist = NULL )"},{"path":"https://edibble.emitanaka.org/reference/with_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A helper function to set variables that the record is dependent on. — with_variables","text":"... series factors record explicitly dependent upon (tidyselect campatible). .missing logical value indicating whether missing values. Default FALSE. missing values introduced random. can also numeric 0 1 giving proportion missing values. .interaction Whether treatment interaction effects. .discrete Whether make response value discrete . .linear Whether include non-linear term . value always additive. .dist random distribution use numerical values (either \"normal\", \"uniform\", \"exponential\", \"gamma\", \"beta\", \"cauchy\", \"chisq\", \"f\", \"t\", \"poisson\", \"weibull\"). default choice random higher chances \"normal\".","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/news/index.html","id":"edibble-development-version","dir":"Changelog","previous_headings":"","what":"edibble (development version)","title":"edibble (development version)","text":"Format change title page export Bug fix export_design record factor exists Change behaviour fct_attrs() levels supplied numeric vector instead lvls(). Added new functions count_by() split_by(). Added ability specify conditional treatment. simuluate_rcrds() now facelift delineation process specification simulate_process(). autofill_rcrds() implemented.","code":""},{"path":"https://edibble.emitanaka.org/news/index.html","id":"edibble-100","dir":"Changelog","previous_headings":"","what":"edibble 1.0.0","title":"edibble 1.0.0","text":"CRAN release: 2023-09-03 Major internal change. R6 class completely changed Provenance object. Provenance object now track internal external commands. Changed export use openxlsx2 instead openxlsx. display now shows variable class (just role).","code":""},{"path":"https://edibble.emitanaka.org/news/index.html","id":"edibble-013","dir":"Changelog","previous_headings":"","what":"edibble 0.1.3","title":"edibble 0.1.3","text":"CRAN release: 2023-03-22 Make S3 generic/method consistent Updated old-style citEntry() bibentry()","code":""},{"path":"https://edibble.emitanaka.org/news/index.html","id":"edibble-012","dir":"Changelog","previous_headings":"","what":"edibble 0.1.2","title":"edibble 0.1.2","text":"CRAN release: 2022-10-04 Fix dev tidyselect (thanks @hadley)","code":""},{"path":"https://edibble.emitanaka.org/news/index.html","id":"edibble-011","dir":"Changelog","previous_headings":"","what":"edibble 0.1.1","title":"edibble 0.1.1","text":"CRAN release: 2022-08-26 Fix issue Rd files generated roxygen2; uses “align”, becoming obsolete HTML5","code":""},{"path":"https://edibble.emitanaka.org/news/index.html","id":"edibble-010","dir":"Changelog","previous_headings":"","what":"edibble 0.1.0","title":"edibble 0.1.0","text":"CRAN release: 2022-06-22 Initial release package","code":""}]
