[{"path":"https://edibble.emitanaka.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Emi Tanaka Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://edibble.emitanaka.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Emi Tanaka. Author, maintainer, copyright holder.","code":""},{"path":"https://edibble.emitanaka.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Tanaka E (2022). edibble: Designing Comparative Experiments. https://edibble.emitanaka.org/, https://github.com/emitanaka/edibble.","code":"@Manual{,   title = {edibble: Designing Comparative Experiments},   author = {Emi Tanaka},   year = {2022},   note = {https://edibble.emitanaka.org/, https://github.com/emitanaka/edibble}, }"},{"path":[]},{"path":"https://edibble.emitanaka.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"edibble - an R package to facilitate construction of experimental designs","text":"Install development version :","code":"# install.packages(\"remotes\") remotes::install_github(\"emitanaka/edibble\")"},{"path":"https://edibble.emitanaka.org/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"edibble - an R package to facilitate construction of experimental designs","text":"goal edibble R-package aid plan, design simulation experiments mapping fundamental components experiments object oriented system. edibble system built principle system must make easy recover experimental context encouraging user explicit experimental details fundamental terms.","code":""},{"path":"https://edibble.emitanaka.org/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"edibble - an R package to facilitate construction of experimental designs","text":"Consider experiment want know effective way teaching (flipped traditional style) teaching particular subject different forms exams (take-home, open-book closed-book) affect student’s marks. four classes subject class holding 30 students. teaching style can applied whole class exam can different individual students. constructing experiment, might want think recording level unit values variables can recorded . export edibble design using export_design function, variables recording constraint values expect, e.g. factors, cells drop-menu select possible values.  addition, spreadsheet every observational level. E.g. room teacher students one class rather entering duplicate information, exported another sheet data entry.  also support complex nesting structures. can always make structure using edibble take resulting data frame use experimental design software. ’s also possible bring existing data frame edibble want take advantage exporting feature edibble.","code":"library(edibble)  set.seed(2020)  des <- design(name = \"Effective teaching\") %>%     set_units(class = 4,               student = nested_in(class, 30)) %>%     set_trts(style = c(\"flipped\", \"traditional\"),              exam = c(\"take-home\", \"open-book\", \"closed-book\")) %>%     allot_trts(style ~ class,                exam ~ student) %>%     assign_trts(\"random\")  serve_table(des) #> # Effective teaching  #> # An edibble: 120 x 4 #>        class     student       style        exam #>    <unit(4)> <unit(120)>    <trt(2)>    <trt(3)> #>  1    class1   student1  traditional closed-book #>  2    class1   student2  traditional open-book   #>  3    class1   student3  traditional take-home   #>  4    class1   student4  traditional closed-book #>  5    class1   student5  traditional take-home   #>  6    class1   student6  traditional take-home   #>  7    class1   student7  traditional open-book   #>  8    class1   student8  traditional open-book   #>  9    class1   student9  traditional closed-book #> 10    class1   student10 traditional closed-book #> # … with 110 more rows out <- des %>%      set_rcrds_of(student = c(\"exam_mark\",                              \"quiz1_mark\",                              \"quiz2_mark\",                              \"gender\"),               class = c(\"room\",                         \"teacher\")) %>%     expect_rcrds(exam_mark <= 100,                  exam_mark >= 0,                  quiz1_mark <= 15L,                  quiz1_mark >= 0L,                  quiz2_mark <= 30L,                  quiz2_mark >= 0L,                  factor(gender, levels = c(\"female\", \"male\", \"non-binary\", \"unknown\"))) %>%     serve_table()  out #> # Effective teaching  #> # An edibble: 120 x 10 #>        class     student       style        exam exam_mark quiz1_mark quiz2_mark #>    <unit(4)> <unit(120)>    <trt(2)>    <trt(3)>    <rcrd>     <rcrd>     <rcrd> #>  1    class1   student1  traditional closed-book         o          o          o #>  2    class1   student2  traditional open-book           o          o          o #>  3    class1   student3  traditional take-home           o          o          o #>  4    class1   student4  traditional closed-book         o          o          o #>  5    class1   student5  traditional take-home           o          o          o #>  6    class1   student6  traditional take-home           o          o          o #>  7    class1   student7  traditional open-book           o          o          o #>  8    class1   student8  traditional open-book           o          o          o #>  9    class1   student9  traditional closed-book         o          o          o #> 10    class1   student10 traditional closed-book         o          o          o #> # … with 110 more rows, and 3 more variables: gender <rcrd>, room <rcrd>, #> #   teacher <rcrd> export_design(out, file = \"/PATH/TO/FILE.xlsx\") design(\"nesting structure\") %>%    # there are 3 sites labelled A, B, C   set_units(site = c(\"A\", \"B\", \"C\"),             # each site has 2 blocks except B with 3 sites             block = nested_in(site,                                \"B\" ~ 3,                                 . ~ 2),             # levels can be specified by their number instead             # so for below \"block1\" has 30 plots,              # \"block2\" and \"block3\" has 40 plots,             # the rest of blocks have 20 plots.             plot = nested_in(block,                                1 ~ 30,                         c(2, 3) ~ 40,                               . ~ 20)) %>%    serve_table() #> # nesting structure  #> # An edibble: 190 x 3 #>         site     block        plot #>    <unit(3)> <unit(7)> <unit(190)> #>  1         A    block1      plot1  #>  2         A    block1      plot2  #>  3         A    block1      plot3  #>  4         A    block1      plot4  #>  5         A    block1      plot5  #>  6         A    block1      plot6  #>  7         A    block1      plot7  #>  8         A    block1      plot8  #>  9         A    block1      plot9  #> 10         A    block1      plot10 #> # … with 180 more rows"},{"path":"https://edibble.emitanaka.org/index.html","id":"experimental-data","dir":"","previous_headings":"","what":"Experimental data","title":"edibble - an R package to facilitate construction of experimental designs","text":"tidyverse well suited data science project workflow illustrated (B) (Grolemund Wickham 2017). experimental data, statistical aspect begins obtaining data depicted (). focus edibble facilitate work ().  edibble R-package differ considerably packages constructing experimental design focus whole process less randomisation process (software generally focus well ). features include: declaratively create experimental designs based experimental components (e.g. units treatments), explicitly specify variables recorded (e.g. response), set expected values variables recorded restrict data entry design exported xlsx file, simulate values record variables, make classical named designs see Cookbook chapter. Work--progress book package can found .","code":""},{"path":"https://edibble.emitanaka.org/index.html","id":"limitations","dir":"","previous_headings":"","what":"Limitations","title":"edibble - an R package to facilitate construction of experimental designs","text":"Currently, edibble: expects know number units available start. Unknown numbers supported future versions. theory, edibble support experiments comparative experiments tested. enough testing design diagnosed construction (done regardless much testing edibble implements).","code":""},{"path":"https://edibble.emitanaka.org/index.html","id":"related-work","dir":"","previous_headings":"","what":"Related Work","title":"edibble - an R package to facilitate construction of experimental designs","text":"way edibble specifies experimental design largely novel (say ) work resembles . ’m concurrently working two extension packages: deggust - visualise designs constructed edibble ggplot2 objects (WIP). sizzled - experiments require sample size calculation (WIP). related work. can also look CRAN Task View Design Experiment Analysis Experimental Data whole collection. DeclareDesign survey sampling designs designr balanced factorial designs crossed nested random fixed effect data frame dae functions useful design ANOVA experiments (fact powering randomisation edibble) plotdesignr designing agronomic field experiments","code":""},{"path":"https://edibble.emitanaka.org/index.html","id":"acknowledgement","dir":"","previous_headings":"","what":"Acknowledgement","title":"edibble - an R package to facilitate construction of experimental designs","text":"edibble hugely inspired work Tidyverse Team. ’m grateful dedication work Tidyverse Team, well R Development Core Team supports core R ecosystem, made developing package possible.","code":""},{"path":"https://edibble.emitanaka.org/index.html","id":"tidyverse-familiarity","dir":"","previous_headings":"","what":"Tidyverse familiarity","title":"edibble - an R package to facilitate construction of experimental designs","text":"implementation edibble adopt similar nomenclature design philosophy tidyverse (, ’s likely shortcoming) tidyverse users can leverage familiarity tidyverse language using edibble. Specifically, edibble follows philosophy: main functions one thing consistent form <verb>_<noun> (e.g. set_units set_rcrds) nouns generally plural. Exceptions subject matter clearly singular (e.g. design set_context); pipable functions; dots arguments dynamic dots; duplicate names repaired option tibble additions edibble graph; ability developers extend certain components. Currently supported others contribute classical named experimental designs via prep_classical_; specification complex nested structure drawing similarity dplyr::case_when (LHS character integer edibble however).","code":""},{"path":"https://edibble.emitanaka.org/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"edibble - an R package to facilitate construction of experimental designs","text":"Please note edibble project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":null,"dir":"Reference","previous_headings":"","what":"A manipulator for the edbl_design. — Kitchen","title":"A manipulator for the edbl_design. — Kitchen","text":"manipulator edbl_design. manipulator edbl_design.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A manipulator for the edbl_design. — Kitchen","text":"Internal functions create new Kitchen object. Kitchen contains set operations manipulate nodes edges edibble design object.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"A manipulator for the edbl_design. — Kitchen","text":"design edibble design object Initialise function","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"A manipulator for the edbl_design. — Kitchen","text":"fct_nodes Get factor nodes lvl_nodes Get level nodes fct_edges Get factor edges lvl_edges Get level edges fct_n Get number nodes factor graph lvl_n Get number nodes level graph fct_last_id Get last factor id. lvl_last_id Get last level id. fct_leaves Get leave factor ids. rcrd_ids Get ids edbl_rcrd factors. unit_ids Get ids edbl_unit factors. trt_ids Get ids edbl_trt factors. trt_names Get node labels treatments unit_names Get node labels units rcrd_names Get node labels record is_connected Check nodes connected.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"A manipulator for the edbl_design. — Kitchen","text":"Kitchen$new() Kitchen$fct_id() Kitchen$lvl_id() Kitchen$fct_names() Kitchen$lvl_names() Kitchen$append_fct_nodes() Kitchen$append_lvl_nodes() Kitchen$append_fct_edges() Kitchen$append_lvl_edges() Kitchen$fct_class() Kitchen$lvl_class() Kitchen$fct_child() Kitchen$lvl_child() Kitchen$fct_parent() Kitchen$lvl_parent() Kitchen$fct_ancestor() Kitchen$lvl_ancestor() Kitchen$fct_levels() Kitchen$setup_data() Kitchen$add_anatomy() Kitchen$fct_exists() Kitchen$trts_exists() Kitchen$units_exists() Kitchen$rcrds_exists() Kitchen$clone()","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$new(design = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"design edibble design.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-fct-id-","dir":"Reference","previous_headings":"","what":"Method fct_id()","title":"A manipulator for the edbl_design. — Kitchen","text":"Get id based either name factor node class.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$fct_id(name = NULL, class = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"name name vertex. class class vertex/node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-lvl-id-","dir":"Reference","previous_headings":"","what":"Method lvl_id()","title":"A manipulator for the edbl_design. — Kitchen","text":"Get id based name level node","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$lvl_id(name = NULL, class = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"name name vertex. class class vertex/node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-fct-names-","dir":"Reference","previous_headings":"","what":"Method fct_names()","title":"A manipulator for the edbl_design. — Kitchen","text":"Get factor names based id class","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$fct_names(id = NULL, class = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"id id corresponding node. class class vertex/node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-lvl-names-","dir":"Reference","previous_headings":"","what":"Method lvl_names()","title":"A manipulator for the edbl_design. — Kitchen","text":"Get level names based id class","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$lvl_names(id = NULL, class = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"id id corresponding node. class class vertex/node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-append-fct-nodes-","dir":"Reference","previous_headings":"","what":"Method append_fct_nodes()","title":"A manipulator for the edbl_design. — Kitchen","text":"Given node data, append factor nodes","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$append_fct_nodes(data)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"data nodes data","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-append-lvl-nodes-","dir":"Reference","previous_headings":"","what":"Method append_lvl_nodes()","title":"A manipulator for the edbl_design. — Kitchen","text":"Given node data, append level nodes","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$append_lvl_nodes(data)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"data nodes data","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-append-fct-edges-","dir":"Reference","previous_headings":"","what":"Method append_fct_edges()","title":"A manipulator for the edbl_design. — Kitchen","text":"Given edge data, append factor edges","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$append_fct_edges(data)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"data nodes data","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-append-lvl-edges-","dir":"Reference","previous_headings":"","what":"Method append_lvl_edges()","title":"A manipulator for the edbl_design. — Kitchen","text":"Given edge data, append level edges","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$append_lvl_edges(data)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"data nodes data","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-fct-class-","dir":"Reference","previous_headings":"","what":"Method fct_class()","title":"A manipulator for the edbl_design. — Kitchen","text":"Get class vertex given factor id","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$fct_class(id = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"id id corresponding node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-lvl-class-","dir":"Reference","previous_headings":"","what":"Method lvl_class()","title":"A manipulator for the edbl_design. — Kitchen","text":"Get class vertex given level id","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$lvl_class(id = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"id id corresponding node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-fct-child-","dir":"Reference","previous_headings":"","what":"Method fct_child()","title":"A manipulator for the edbl_design. — Kitchen","text":"Get factor child ids. class supplied child fit class","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$fct_child(id = NULL, class = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"id id corresponding node. class class vertex/node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-lvl-child-","dir":"Reference","previous_headings":"","what":"Method lvl_child()","title":"A manipulator for the edbl_design. — Kitchen","text":"Get level child ids","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$lvl_child(id = NULL, class = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"id id corresponding node. class class vertex/node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-fct-parent-","dir":"Reference","previous_headings":"","what":"Method fct_parent()","title":"A manipulator for the edbl_design. — Kitchen","text":"Get factor parent ids","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$fct_parent(id = NULL, class = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"id id corresponding node. class class vertex/node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-lvl-parent-","dir":"Reference","previous_headings":"","what":"Method lvl_parent()","title":"A manipulator for the edbl_design. — Kitchen","text":"Get level parent ids","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$lvl_parent(id = NULL, class = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"id id corresponding node. class class vertex/node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-fct-ancestor-","dir":"Reference","previous_headings":"","what":"Method fct_ancestor()","title":"A manipulator for the edbl_design. — Kitchen","text":"Get factor ancestor ids","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$fct_ancestor(id = NULL, class = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"id id corresponding node. class class vertex/node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-lvl-ancestor-","dir":"Reference","previous_headings":"","what":"Method lvl_ancestor()","title":"A manipulator for the edbl_design. — Kitchen","text":"Get level ancestor ids","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$lvl_ancestor(id = NULL, class = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"id id corresponding node. class class vertex/node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-fct-levels-","dir":"Reference","previous_headings":"","what":"Method fct_levels()","title":"A manipulator for the edbl_design. — Kitchen","text":"Get levels factor","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$fct_levels(id = NULL, name = NULL)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"id id corresponding node. name name vertex.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-setup-data-","dir":"Reference","previous_headings":"","what":"Method setup_data()","title":"A manipulator for the edbl_design. — Kitchen","text":"Setup node edge data","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$setup_data(fresh, name, class)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"fresh value new graph structure add. name name vertex. class class vertex/node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-add-anatomy-","dir":"Reference","previous_headings":"","what":"Method add_anatomy()","title":"A manipulator for the edbl_design. — Kitchen","text":"Add anatomy structure","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$add_anatomy(fresh, name, class)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"fresh value new graph structure add. name name vertex. class class vertex/node.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-fct-exists-","dir":"Reference","previous_headings":"","what":"Method fct_exists()","title":"A manipulator for the edbl_design. — Kitchen","text":"One name, id class defined check exists. one arguments name, id class supplied, intersection checked.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$fct_exists(name = NULL, id = NULL, class = NULL, abort = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"name name vertex. id id corresponding node. class class vertex/node. abort logical value indicate whether abort exist.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-trts-exists-","dir":"Reference","previous_headings":"","what":"Method trts_exists()","title":"A manipulator for the edbl_design. — Kitchen","text":"Check treatment exists.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$trts_exists(abort = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"abort Whether abort.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-units-exists-","dir":"Reference","previous_headings":"","what":"Method units_exists()","title":"A manipulator for the edbl_design. — Kitchen","text":"Check unit exists.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$units_exists(abort = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"abort Whether abort.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-rcrds-exists-","dir":"Reference","previous_headings":"","what":"Method rcrds_exists()","title":"A manipulator for the edbl_design. — Kitchen","text":"Check record exists.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$rcrds_exists(abort = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-23","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"abort Whether abort.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"A manipulator for the edbl_design. — Kitchen","text":"objects class cloneable method.","code":""},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"A manipulator for the edbl_design. — Kitchen","text":"","code":"Kitchen$clone(deep = FALSE)"},{"path":"https://edibble.emitanaka.org/reference/Kitchen.html","id":"arguments-24","dir":"Reference","previous_headings":"","what":"Arguments","title":"A manipulator for the edbl_design. — Kitchen","text":"deep Whether make deep clone.","code":""},{"path":"https://edibble.emitanaka.org/reference/allot.html","id":null,"dir":"Reference","previous_headings":"","what":"Define the possible allocation of treatments to units — allot","title":"Define the possible allocation of treatments to units — allot","text":"function adds edges variable nodes specify mapping units treatment. function actually assign specific treatment levels onto actual units.","code":""},{"path":"https://edibble.emitanaka.org/reference/allot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define the possible allocation of treatments to units — allot","text":"","code":"allot_trts(.edibble, ..., .record = TRUE)  allot_units(.edibble, ..., .record = TRUE)  allot_table(   .edibble,   ...,   order = \"random\",   seed = NULL,   constrain = nesting_structure(.edibble) )"},{"path":"https://edibble.emitanaka.org/reference/allot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define the possible allocation of treatments to units — allot","text":".edibble edibble design (edbl_design), edibble data frame (edbl_table) object contains edibble data frame attribute design. ... One-sided two-sided formula. input one-sided formula whole treatment applied specified unit. .record Whether record step. order character vector signifying apportion treatments units. value either \"random\", \"systematic\" \"systematic-random\". \"random\" allocates treatment randomly units based specified allotment restrictions implied unit structure. \"systematic\" allocates treatment systematic order units. \"systematic-random\" allocates treatment systematic order units possible divide treatments equally (number units divisible number levels treatment factor), extras chosen randomly. seed scalar value used set seed result reproducible. constrain nesting structure units.","code":""},{"path":"https://edibble.emitanaka.org/reference/allot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define the possible allocation of treatments to units — allot","text":"Return edibble design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/allot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define the possible allocation of treatments to units — allot","text":"","code":"design() %>%   set_units(block = 10,             plot = nested_in(block, 3)) %>%   set_trts(treat = c(\"A\", \"B\", \"C\"),            pest = c(\"a\", \"b\")) %>%   allot_trts(treat ~ plot,               pest ~ block) #> An edibble design #> ├─block (10 levels) #> │ └─plot (30 levels) #> ├─treat (3 levels) #> └─pest (2 levels) #> Allotment: #>  #> • treat ~ plot #> • pest ~ block"},{"path":"https://edibble.emitanaka.org/reference/anatomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Anatomy of the design — anatomy","title":"Anatomy of the design — anatomy","text":"convenient wrapper dae::designAnatomy formulae structure automatically determined unit treatment structure specified edibble system. Note: computation may long design quite complicated many units.","code":""},{"path":"https://edibble.emitanaka.org/reference/anatomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Anatomy of the design — anatomy","text":"","code":"anatomy(.edibble, ...)"},{"path":"https://edibble.emitanaka.org/reference/anatomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Anatomy of the design — anatomy","text":".edibble complete edibble design object edibble table. ... arguments parsed dae::designAnatomy.","code":""},{"path":"https://edibble.emitanaka.org/reference/anatomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Anatomy of the design — anatomy","text":"object class \"des_anatomy\".","code":""},{"path":"https://edibble.emitanaka.org/reference/anatomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Anatomy of the design — anatomy","text":"","code":"split <- takeout(menu_split(t1 = 3, t2 = 2, r = 2)) anatomy(split) #>  #>  #> Summary table of the decomposition for unit & trt #>  #>  Source.unit       df1 Source.trt df2 aefficiency eefficiency order #>  mainplot            5 trt1         2      1.0000      1.0000     1 #>                        Residual     3                               #>  subplot[mainplot]   6 trt2         1      1.0000      1.0000     1 #>                        trt1#trt2    2      1.0000      1.0000     1 #>                        Residual     3"},{"path":"https://edibble.emitanaka.org/reference/as.data.frame.edbl_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert edibble table to normal data frame — as.data.frame.edbl_table","title":"Convert edibble table to normal data frame — as.data.frame.edbl_table","text":"Convert edibble table normal data frame","code":""},{"path":"https://edibble.emitanaka.org/reference/as.data.frame.edbl_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert edibble table to normal data frame — as.data.frame.edbl_table","text":"","code":"# S3 method for edbl_table as.data.frame(x, levels_as = \"factor\", ignore_numeric = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/as.data.frame.edbl_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert edibble table to normal data frame — as.data.frame.edbl_table","text":"x edibble table levels_as Coerce edibble factors either \"factor\" \"character\". ignore_numeric Whether coerce numeric factors . Default TRUE, .e. coerce numeric factors.","code":""},{"path":"https://edibble.emitanaka.org/reference/as_data_frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an edibble data frame to normal data frame — as_data_frame","title":"Convert an edibble data frame to normal data frame — as_data_frame","text":"patch function issue edbl factors","code":""},{"path":"https://edibble.emitanaka.org/reference/as_data_frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an edibble data frame to normal data frame — as_data_frame","text":"","code":"as_data_frame(.data)"},{"path":"https://edibble.emitanaka.org/reference/as_data_frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an edibble data frame to normal data frame — as_data_frame","text":".data can list data frame","code":""},{"path":"https://edibble.emitanaka.org/reference/as_data_frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an edibble data frame to normal data frame — as_data_frame","text":"data.frame.","code":""},{"path":"https://edibble.emitanaka.org/reference/assign.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign treatments or units to units — assign","title":"Assign treatments or units to units — assign","text":"function assigns specific treatment unit levels actual units.","code":""},{"path":"https://edibble.emitanaka.org/reference/assign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign treatments or units to units — assign","text":"","code":"assign_trts(   .design,   order = \"random\",   seed = NULL,   constrain = nesting_structure(.design),   ...,   .record = TRUE )  assign_units(   .design,   order = \"random\",   seed = NULL,   constrain = nesting_structure(.design),   ...,   .record = TRUE )"},{"path":"https://edibble.emitanaka.org/reference/assign.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign treatments or units to units — assign","text":".design edibble design units, treatments allotment defined. order character vector signifying apportion treatments units. value either \"random\", \"systematic\" \"systematic-random\". \"random\" allocates treatment randomly units based specified allotment restrictions implied unit structure. \"systematic\" allocates treatment systematic order units. \"systematic-random\" allocates treatment systematic order units possible divide treatments equally (number units divisible number levels treatment factor), extras chosen randomly. seed scalar value used set seed result reproducible. constrain nesting structure units. ... Arguments parsed order_trts functions. .record Whether record step.","code":""},{"path":"https://edibble.emitanaka.org/reference/assign.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign treatments or units to units — assign","text":"edibble design.","code":""},{"path":"https://edibble.emitanaka.org/reference/assign.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign treatments or units to units — assign","text":"","code":"# 10 subject, 2 vaccine treatments design() %>%   set_units(subject = 10) %>%   set_trts(vaccine = 2) %>%   allot_trts(vaccine ~ subject) %>%   assign_trts() %>%   serve_table() #> # An edibble: 10 x 2 #>       subject  vaccine #>    <unit(10)> <trt(2)> #>  1  subject1  vaccine2 #>  2  subject2  vaccine1 #>  3  subject3  vaccine2 #>  4  subject4  vaccine1 #>  5  subject5  vaccine1 #>  6  subject6  vaccine2 #>  7  subject7  vaccine1 #>  8  subject8  vaccine1 #>  9  subject9  vaccine2 #> 10  subject10 vaccine2  # 20 subjects, 2 blocks, assign subjects to blocks design() %>%   set_units(subject = 20,             block = 2) %>%   allot_units(block ~ subject) %>%   assign_units() %>%   serve_table() #> # An edibble: 20 x 2 #>       subject     block #>    <unit(20)> <unit(2)> #>  1  subject1     block2 #>  2  subject2     block1 #>  3  subject3     block1 #>  4  subject4     block2 #>  5  subject5     block1 #>  6  subject6     block2 #>  7  subject7     block1 #>  8  subject8     block2 #>  9  subject9     block1 #> 10  subject10    block2 #> 11  subject11    block2 #> 12  subject12    block1 #> 13  subject13    block2 #> 14  subject14    block1 #> 15  subject15    block1 #> 16  subject16    block2 #> 17  subject17    block1 #> 18  subject18    block2 #> 19  subject19    block2 #> 20  subject20    block1"},{"path":"https://edibble.emitanaka.org/reference/cook_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Cook the design in the kitchen — cook_design","title":"Cook the design in the kitchen — cook_design","text":"developer function create new Kitchen class existing design.","code":""},{"path":"https://edibble.emitanaka.org/reference/cook_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cook the design in the kitchen — cook_design","text":"","code":"cook_design(x)"},{"path":"https://edibble.emitanaka.org/reference/cook_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cook the design in the kitchen — cook_design","text":"x edibble object.","code":""},{"path":"https://edibble.emitanaka.org/reference/cook_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cook the design in the kitchen — cook_design","text":"Kitchen object.","code":""},{"path":"https://edibble.emitanaka.org/reference/cook_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cook the design in the kitchen — cook_design","text":"","code":"cook_design(takeout()) #> → No name was supplied so selecting a random named experimental design... #> → Selected Latin Square Design #> <Kitchen> #>   Public: #>     add_anatomy: function (fresh, name, class)  #>     append_fct_edges: function (data)  #>     append_fct_nodes: function (data)  #>     append_lvl_edges: function (data)  #>     append_lvl_nodes: function (data)  #>     clone: function (deep = FALSE)  #>     design: edbl_design, edbl #>     fct_ancestor: function (id = NULL, class = NULL)  #>     fct_child: function (id = NULL, class = NULL)  #>     fct_class: function (id = NULL)  #>     fct_edges: active binding #>     fct_exists: function (name = NULL, id = NULL, class = NULL, abort = TRUE)  #>     fct_id: function (name = NULL, class = NULL)  #>     fct_last_id: active binding #>     fct_leaves: active binding #>     fct_levels: function (id = NULL, name = NULL)  #>     fct_n: active binding #>     fct_names: function (id = NULL, class = NULL)  #>     fct_nodes: active binding #>     fct_parent: function (id = NULL, class = NULL)  #>     initialize: function (design = NULL)  #>     is_connected: active binding #>     lvl_ancestor: function (id = NULL, class = NULL)  #>     lvl_child: function (id = NULL, class = NULL)  #>     lvl_class: function (id = NULL)  #>     lvl_edges: active binding #>     lvl_id: function (name = NULL, class = NULL)  #>     lvl_last_id: active binding #>     lvl_n: active binding #>     lvl_names: function (id = NULL, class = NULL)  #>     lvl_nodes: active binding #>     lvl_parent: function (id = NULL, class = NULL)  #>     rcrd_ids: active binding #>     rcrd_names: active binding #>     rcrds_exists: function (abort = TRUE)  #>     setup_data: function (fresh, name, class)  #>     trt_ids: active binding #>     trt_names: active binding #>     trts_exists: function (abort = TRUE)  #>     unit_ids: active binding #>     unit_names: active binding #>     units_exists: function (abort = TRUE)  #>   Private: #>     fresh_type: function (fresh)  #>     next_method: function (generic, class)  #>     setup_data.cross_lvls: function (fresh, name, class)  #>     setup_data.default: function (fresh, name, class)  #>     setup_data.edbl_fct: function (fresh, name, class)  #>     setup_data.edbl_lvls: function (fresh, name, class)  #>     setup_data.formula: function (fresh, name, class)  #>     setup_data.nest_lvls: function (fresh, name, class)  #>     var_names: function (nodes, id, class)  #>     version: NULL"},{"path":"https://edibble.emitanaka.org/reference/crossed_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify the units to cross to index a new unit — crossed_by","title":"Specify the units to cross to index a new unit — crossed_by","text":"crossed_by(, B) ~:B crossed_by offers control names new units well adding new attributes.","code":""},{"path":"https://edibble.emitanaka.org/reference/crossed_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify the units to cross to index a new unit — crossed_by","text":"","code":"crossed_by(   ...,   prefix = NULL,   suffix = NULL,   leading0 = NULL,   sep = NULL,   attrs = NULL )"},{"path":"https://edibble.emitanaka.org/reference/crossed_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify the units to cross to index a new unit — crossed_by","text":"... sequence units prefix Currently implemented.prefix label. suffix Currently implemented.suffix label. leading0 Currently implemented.Whether leading 0 labels made. sep Currently implemented.separator added prefix number prefix empty. attrs Currently implemented.","code":""},{"path":"https://edibble.emitanaka.org/reference/crossed_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify the units to cross to index a new unit — crossed_by","text":"object class \"cross_lvls\".","code":""},{"path":"https://edibble.emitanaka.org/reference/crossed_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify the units to cross to index a new unit — crossed_by","text":"","code":"design(\"Strip-Plot Design | Strip-Unit Design\") %>%   set_units(block = 3,             row = nested_in(block, 7),             col = nested_in(block, 6),             unit = nested_in(block, crossed_by(row, col))) #> Strip-Plot Design | Strip-Unit Design #> └─block (3 levels) #>   ├─row (21 levels) #>   │ └─unit (126 levels) #>   ├─col (18 levels) #>   │ └─unit (126 levels) #>   └─unit (126 levels)"},{"path":"https://edibble.emitanaka.org/reference/design-helpers.html","id":null,"dir":"Reference","previous_headings":"","what":"Test and get edibble objects — design-helpers","title":"Test and get edibble objects — design-helpers","text":"functions tests object (object attribute) inherits particular class returns TRUE , otherwise FALSE. is_edibble_design checks inherits edbl_design. is_edibble_graph checks inherits edbl_graph. is_edibble_table checks inherits edbl_table is_edibble checks object inherits edbl. search quite simple, checks object edbl_design, failing looks see attribute \"design\" object edbl_design. is_named_design check inherits NamedDesign. get functions extracts requested edibble component (table, graph, design) object possible. edbl_design tries get edbl_design. edbl_table tries get edbl_table design attribute. edbl_graph tries get edbl_graph.","code":""},{"path":"https://edibble.emitanaka.org/reference/design-helpers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test and get edibble objects — design-helpers","text":"","code":"is_edibble_design(x)  is_named_design(x)  is_edibble_table(x)  is_edibble_graph(x)  is_edibble(x)  is_edibble_levels(x)  is_nest_levels(x)  is_cross_levels(x)  edbl_design(x)  edbl_table(x)"},{"path":"https://edibble.emitanaka.org/reference/design-helpers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test and get edibble objects — design-helpers","text":"x object.","code":""},{"path":"https://edibble.emitanaka.org/reference/design-helpers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test and get edibble objects — design-helpers","text":"logical value.","code":""},{"path":"https://edibble.emitanaka.org/reference/design-helpers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test and get edibble objects — design-helpers","text":"","code":"is_edibble_design(takeout()) #> → No name was supplied so selecting a random named experimental design... #> → Selected Youden Square Design #> [1] FALSE"},{"path":"https://edibble.emitanaka.org/reference/design.html","id":null,"dir":"Reference","previous_headings":"","what":"Start the edibble design — design","title":"Start the edibble design — design","text":"function really much besides create new edibble design object.","code":""},{"path":"https://edibble.emitanaka.org/reference/design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start the edibble design — design","text":"","code":"design(name = NULL, .record = TRUE, seed = NULL, kitchen = Kitchen)  redesign(   .data,   name = NULL,   .record = TRUE,   seed = NULL,   kitchen = Kitchen,   ... )"},{"path":"https://edibble.emitanaka.org/reference/design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start the edibble design — design","text":"name Optional name used title printing design. .record logical value. indicates whether record code step. default TRUE. remain TRUE unless function used wrapper code. seed seed number reproducibility. kitchen environment setup manner manipulate, extract query information design. .data edibble table. ... Either name-value pair series names.","code":""},{"path":"https://edibble.emitanaka.org/reference/design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start the edibble design — design","text":"empty edbl_design object.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start the edibble design — design","text":"","code":"design(\"My design\") #> My design"},{"path":"https://edibble.emitanaka.org/reference/design_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the node or edge data from an edibble design — design_data","title":"Get the node or edge data from an edibble design — design_data","text":"Get node edge data edibble design","code":""},{"path":"https://edibble.emitanaka.org/reference/design_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the node or edge data from an edibble design — design_data","text":"","code":"fct_nodes(edibble)  fct_edges(edibble)  lvl_nodes(edibble)  lvl_edges(edibble)"},{"path":"https://edibble.emitanaka.org/reference/design_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the node or edge data from an edibble design — design_data","text":"edibble edibble object.","code":""},{"path":"https://edibble.emitanaka.org/reference/edibble-package.html","id":null,"dir":"Reference","previous_headings":"","what":"edibble: Designing Comparative Experiments — edibble-package","title":"edibble: Designing Comparative Experiments — edibble-package","text":"system facilitate designing comparative experiments using grammar experimental designs <https://emitanaka.org/edibble-book/>. experimental design treated intermediate, mutable object built progressively fundamental experimental components like units, treatments, relation.","code":""},{"path":"https://edibble.emitanaka.org/reference/edibble-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"edibble: Designing Comparative Experiments — edibble-package","text":"(WIP)","code":""},{"path":"https://edibble.emitanaka.org/reference/edibble-package.html","id":"website","dir":"Reference","previous_headings":"","what":"Website","title":"edibble: Designing Comparative Experiments — edibble-package","text":"website package https://edibble.emitanaka.org Discussion https://github.com/emitanaka/edibble/discussions","code":""},{"path":"https://edibble.emitanaka.org/reference/edibble-package.html","id":"package-options","dir":"Reference","previous_headings":"","what":"Package options","title":"edibble: Designing Comparative Experiments — edibble-package","text":"following options used changing default view print edibble design edibble graph. edibble.tree.decorate.trts edibble.tree.decorate.units edibble.tree.decorate.rcrd edibble.tree.decorate.levels edibble.tree.decorate.main TODO","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/edibble-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"edibble: Designing Comparative Experiments — edibble-package","text":"Maintainer: Emi Tanaka dr.emi.tanaka@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://edibble.emitanaka.org/reference/examine_recipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the recipe code — examine_recipe","title":"Check the recipe code — examine_recipe","text":"Check recipe code","code":""},{"path":"https://edibble.emitanaka.org/reference/examine_recipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the recipe code — examine_recipe","text":"","code":"examine_recipe(x, ...)"},{"path":"https://edibble.emitanaka.org/reference/examine_recipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the recipe code — examine_recipe","text":"x edibble design, edibble, takeout object. ... used.","code":""},{"path":"https://edibble.emitanaka.org/reference/examine_recipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the recipe code — examine_recipe","text":"recipe code.","code":""},{"path":"https://edibble.emitanaka.org/reference/examine_recipe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the recipe code — examine_recipe","text":"","code":"examine_recipe(takeout()) #> → No name was supplied so selecting a random named experimental design... #> → Selected Hyper-Graeco-Latin Square Design #> design(\"Hyper-Graeco-Latin Square Design\") %>% #>   set_units(block1 = 9, #>             block2 = 9, #>             block3 = 9, #>             block4 = 9, #>             unit = crossed_by(block1, block2, block3, block4)) %>% #>   set_trts(trt = 9) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 516) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/expect-vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Expected type of data entry — expect-vars","title":"Expected type of data entry — expect-vars","text":"functions used within expect_vars variables recorded constraint expected values exported xlsx file export_design(). functions set particular value type (numeric, integer, date, time character) preceded \"to_be_\" corresponding restriction set with_value().","code":""},{"path":"https://edibble.emitanaka.org/reference/expect-vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expected type of data entry — expect-vars","text":"","code":"to_be_numeric(range)  to_be_integer(range)  to_be_date(range)  to_be_time(range)  to_be_character(length)  to_be_factor(levels)"},{"path":"https://edibble.emitanaka.org/reference/expect-vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expected type of data entry — expect-vars","text":"range, length named list two elements: \"operator\" \"value\" provided helper with_value() gives possible range values expected type can take. levels character vector factor levels.","code":""},{"path":"https://edibble.emitanaka.org/reference/expect-vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expected type of data entry — expect-vars","text":"record type.","code":""},{"path":"https://edibble.emitanaka.org/reference/expect_rcrds.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the expected values for recording variables — expect_rcrds","title":"Set the expected values for recording variables — expect_rcrds","text":"Set expected values recording variables","code":""},{"path":"https://edibble.emitanaka.org/reference/expect_rcrds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the expected values for recording variables — expect_rcrds","text":"","code":"expect_rcrds(.edibble, ...)"},{"path":"https://edibble.emitanaka.org/reference/expect_rcrds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the expected values for recording variables — expect_rcrds","text":".edibble edibble design (edbl_design), edibble data frame (edbl_table) object contains edibble data frame attribute design. ... Name-value pairs name belonging variable plan recorded set_rcrds() values expected types values set helper functions, see ?expect-rcrds.","code":""},{"path":"https://edibble.emitanaka.org/reference/expect_rcrds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the expected values for recording variables — expect_rcrds","text":"edibble design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/expect_rcrds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the expected values for recording variables — expect_rcrds","text":"","code":"takeout(menu_crd(t = 4, n = 10)) %>%   set_rcrds(y = unit) %>%   expect_rcrds(y > 0) #> # Completely Randomised Design  #> # An edibble: 10 x 3 #>          unit      trt      y #>    <unit(10)> <trt(4)> <rcrd> #>  1     unit1      trt1      o #>  2     unit2      trt3      o #>  3     unit3      trt1      o #>  4     unit4      trt4      o #>  5     unit5      trt2      o #>  6     unit6      trt2      o #>  7     unit7      trt3      o #>  8     unit8      trt4      o #>  9     unit9      trt4      o #> 10     unit10     trt3      o"},{"path":"https://edibble.emitanaka.org/reference/export_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Export the design to xlsx — export_design","title":"Export the design to xlsx — export_design","text":"function designed export design made using edibble external xlsx file.","code":""},{"path":"https://edibble.emitanaka.org/reference/export_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export the design to xlsx — export_design","text":"","code":"export_design(.data, file, author, date = Sys.Date(), overwrite = FALSE)"},{"path":"https://edibble.emitanaka.org/reference/export_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export the design to xlsx — export_design","text":".data edibble data frame design. file File, including path, export data . author Name author character. vector character supported multiple authors. date date inserted header. overwrite logical indicating whether overwrite exisitng file .","code":""},{"path":"https://edibble.emitanaka.org/reference/export_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export the design to xlsx — export_design","text":"input data object.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/fct_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Setting the traits of factors — fct_attrs","title":"Setting the traits of factors — fct_attrs","text":"function used set characteristics factors.","code":""},{"path":"https://edibble.emitanaka.org/reference/fct_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setting the traits of factors — fct_attrs","text":"","code":"fct_attrs(   levels = NULL,   label = NULL,   description = NULL,   unit_of_measure = NULL,   class = NULL,   ... )"},{"path":"https://edibble.emitanaka.org/reference/fct_attrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setting the traits of factors — fct_attrs","text":"levels edbl_lvls object contain information levels factor. label string denotes long name factor. description text description factor. unit_of_measure string denoting unit measurement applicable. class optional subclass. ... name-value pair attributes. value must scalar attributed whole factor (individual levels). values added attributes output object.","code":""},{"path":"https://edibble.emitanaka.org/reference/fct_attrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setting the traits of factors — fct_attrs","text":"edbl_lvls object.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/fct_attrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setting the traits of factors — fct_attrs","text":"","code":"fct_attrs(levels = c(\"A\", \"B\")) #> [1] \"A\" \"B\""},{"path":"https://edibble.emitanaka.org/reference/formatting.html","id":null,"dir":"Reference","previous_headings":"","what":"Print intermediate experimental design to terminal — formatting","title":"Print intermediate experimental design to terminal — formatting","text":"function prints edbl_graph object tree terminal. variables color coded (decorated) given options. ANSI coloring styling visible console terminal outputs support . print output best used interactively since text styling lost text R Markdown output. details can found vignette(\"edbl-output\", package = \"edibble\").","code":""},{"path":"https://edibble.emitanaka.org/reference/formatting.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print intermediate experimental design to terminal — formatting","text":"","code":"# S3 method for edbl_design print(   x,   decorate_units = edibble_decorate(\"units\"),   decorate_trts = edibble_decorate(\"trts\"),   decorate_rcrds = edibble_decorate(\"rcrds\"),   decorate_levels = edibble_decorate(\"levels\"),   decorate_title = edibble_decorate(\"title\"),   title = NULL,   ... )"},{"path":"https://edibble.emitanaka.org/reference/formatting.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print intermediate experimental design to terminal — formatting","text":"x edibble graph. decorate_trts, decorate_units, decorate_rcrds, decorate_levels, decorate_title function applied name treatment, unit, response factors design title. function return string. often wraps name ANSI colored text. title title design. ... Unused.","code":""},{"path":"https://edibble.emitanaka.org/reference/is_takeout.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to check if the output is a takeout design — is_takeout","title":"A function to check if the output is a takeout design — is_takeout","text":"function returns TRUE input takeout design.","code":""},{"path":"https://edibble.emitanaka.org/reference/is_takeout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to check if the output is a takeout design — is_takeout","text":"","code":"is_takeout(x)"},{"path":"https://edibble.emitanaka.org/reference/is_takeout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to check if the output is a takeout design — is_takeout","text":"x object.","code":""},{"path":"https://edibble.emitanaka.org/reference/is_takeout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to check if the output is a takeout design — is_takeout","text":"logical value.","code":""},{"path":"https://edibble.emitanaka.org/reference/is_takeout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to check if the output is a takeout design — is_takeout","text":"","code":"is_takeout(takeout()) #> → No name was supplied so selecting a random named experimental design... #> → Selected Factorial Design #> [1] TRUE"},{"path":"https://edibble.emitanaka.org/reference/lady_tasting_tea.html","id":null,"dir":"Reference","previous_headings":"","what":"Lady tasting tea — lady_tasting_tea","title":"Lady tasting tea — lady_tasting_tea","text":"Lady tasting tea experiment described Fisher (1935) test ability lady said tell whether tea milk added first cup tea. experiment consisted preparing eight cups tea, four milk poured first four tea poured first. lady told advance four kind preparation. data consists experimental structure result order presented practice unknown. cup cup number. first cup tea prepared milk tea first. guess guess lady one poured first. correct Whether lady's guess correct.","code":""},{"path":"https://edibble.emitanaka.org/reference/lady_tasting_tea.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lady tasting tea — lady_tasting_tea","text":"","code":"lady_tasting_tea"},{"path":"https://edibble.emitanaka.org/reference/lady_tasting_tea.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lady tasting tea — lady_tasting_tea","text":"object class tbl_df (inherits tbl, data.frame) 8 rows 4 columns.","code":""},{"path":"https://edibble.emitanaka.org/reference/lady_tasting_tea.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Lady tasting tea — lady_tasting_tea","text":"Fisher, Ronald (1935) Design Experiments.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/latin.html","id":null,"dir":"Reference","previous_headings":"","what":"Latin square designs and its generalisations as an array — latin","title":"Latin square designs and its generalisations as an array — latin","text":"Latin square designs generalisations array","code":""},{"path":"https://edibble.emitanaka.org/reference/latin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Latin square designs and its generalisations as an array — latin","text":"","code":"latin_square(n, randomise = TRUE)  latin_rectangle(nr, nc, nt, randomise = TRUE)  latin_array(dim, nt, randomise = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/latin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Latin square designs and its generalisations as an array — latin","text":"n, nt number treatments randomise logical value indicate whether treatment allocation randomised. default value TRUE. nr number rows nc number columns dim vector integers indicate number elements dimension.","code":""},{"path":"https://edibble.emitanaka.org/reference/latin.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Latin square designs and its generalisations as an array — latin","text":"latin_square: Latin square design latin_rectangle: Like Latin square design allow different number rows columns latin_array: Returns array stitches multiple Latin square/rectangle design","code":""},{"path":"https://edibble.emitanaka.org/reference/latin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Latin square designs and its generalisations as an array — latin","text":"","code":"latin_square(n = 3) #>      [,1] [,2] [,3] #> [1,]    1    3    2 #> [2,]    2    1    3 #> [3,]    3    2    1 latin_rectangle(3, 3, 3) #>      [,1] [,2] [,3] #> [1,]    2    1    3 #> [2,]    1    3    2 #> [3,]    3    2    1 latin_array(3, c(3, 3, 3)) #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> Warning: numerical expression has 3 elements: only the first used #> , , 1 #>  #>      [,1] [,2] [,3] #> [1,]    2    3    1 #> [2,]    3    1    2 #> [3,]    1    2    3 #>  #> , , 2 #>  #>      [,1] [,2] [,3] #> [1,]    1    2    3 #> [2,]    2    3    1 #> [3,]    3    1    2 #>  #> , , 3 #>  #>      [,1] [,2] [,3] #> [1,]    3    1    2 #> [2,]    1    2    3 #> [3,]    2    3    1 #>"},{"path":"https://edibble.emitanaka.org/reference/lvl_attrs.html","id":null,"dir":"Reference","previous_headings":"","what":"Setting the traits of the levels — lvl_attrs","title":"Setting the traits of the levels — lvl_attrs","text":"Use function create \"vector\" levels. vector actually comprised data frame column labels columns corresponding level attribute (). data frame can accessed lvl_data().","code":""},{"path":"https://edibble.emitanaka.org/reference/lvl_attrs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setting the traits of the levels — lvl_attrs","text":"","code":"lvl_attrs(   levels = NULL,   labels = NULL,   prefix = \"\",   suffix = \"\",   sep = edibble_labels_opt(\"sep\"),   include_leading_zero = edibble_labels_opt(\"leading_zero\"),   data = NULL,   ... )"},{"path":"https://edibble.emitanaka.org/reference/lvl_attrs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setting the traits of the levels — lvl_attrs","text":"levels vector either denotes index number short name levels. labels optional character vector long name format levels. prefix prefix labels. suffix suffix labels. sep string add prefix levels. include_leading_zero logical value indicate whether leading zero added level indexes. ignored levels numeric. data list data frame size levels. ... Name-value pair denoting level attributes. value length levels single value.","code":""},{"path":"https://edibble.emitanaka.org/reference/lvl_attrs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Setting the traits of the levels — lvl_attrs","text":"edbl_lvls object.","code":""},{"path":"https://edibble.emitanaka.org/reference/lvl_attrs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Setting the traits of the levels — lvl_attrs","text":"","code":"lvl_attrs(c(\"A\", \"B\")) #> <edbl_lvls[2]> #> [1] A B"},{"path":"https://edibble.emitanaka.org/reference/menu_bibd.html","id":null,"dir":"Reference","previous_headings":"","what":"Balance incomplete block design — menu_bibd","title":"Balance incomplete block design — menu_bibd","text":"combinations parameter values create balanced incomplete block design.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_bibd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Balance incomplete block design — menu_bibd","text":"","code":"menu_bibd(   t = random_integer_small(min = 3),   k = random_integer_small(max = t - 1),   r = random_integer_small(),   seed = random_seed_number() )"},{"path":"https://edibble.emitanaka.org/reference/menu_bibd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Balance incomplete block design — menu_bibd","text":"t number treatments. k size block. less number treatments. r number replications treatment level. seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_bibd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Balance incomplete block design — menu_bibd","text":"recipe balance incomplete block design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_bibd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Balance incomplete block design — menu_bibd","text":"","code":"menu_bibd(t = 3, k = 2, r = 4) #> design(\"Balanced Incomplete Block Design\") %>% #>   set_units(block = 6, #>             unit = nested_in(block, 2)) %>% #>   set_trts(trt = 3) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 770) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_crd.html","id":null,"dir":"Reference","previous_headings":"","what":"Completely randomised design — menu_crd","title":"Completely randomised design — menu_crd","text":"Completely randomised design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_crd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Completely randomised design — menu_crd","text":"","code":"menu_crd(   t = random_integer_small(),   n = random_integer_medium(min = t),   r = NULL,   seed = random_seed_number() )"},{"path":"https://edibble.emitanaka.org/reference/menu_crd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Completely randomised design — menu_crd","text":"t number treatment levels n number experimental units r (Optional) number replicates. seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_crd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Completely randomised design — menu_crd","text":"recipe completely randomised design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_crd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Completely randomised design — menu_crd","text":"","code":"menu_crd(t = 3, n = 10) #> design(\"Completely Randomised Design\") %>% #>   set_units(unit = 10) %>% #>   set_trts(trt = 3) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 375) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_factorial.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a factorial design — menu_factorial","title":"Prepare a factorial design — menu_factorial","text":"Prepare factorial design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_factorial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a factorial design — menu_factorial","text":"","code":"menu_factorial(   trt = c(random_integer_small(), random_integer_small()),   r = random_integer_small(),   design = c(\"crd\", \"rcbd\"),   seed = random_seed_number() )"},{"path":"https://edibble.emitanaka.org/reference/menu_factorial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a factorial design — menu_factorial","text":"trt vector number levels treatment factor. r number replications treatment level. design unit structure: \"crd\" \"rcbd\". default \"crd\". seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_factorial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare a factorial design — menu_factorial","text":"recipe factorial design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_factorial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare a factorial design — menu_factorial","text":"","code":"menu_factorial(trt = c(3, 2), r = 2, design = \"crd\") #> design(\"Factorial Design\") %>% #>   set_units(unit = 12) %>% #>   set_trts(trt1 = 3, #>            trt2 = 2) %>% #>   allot_trts(~unit) %>% #>   assign_trts(\"random\", seed = 252) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_graeco.html","id":null,"dir":"Reference","previous_headings":"","what":"Graeco-Latin Square Design — menu_graeco","title":"Graeco-Latin Square Design — menu_graeco","text":"Graeco-Latin Square Design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_graeco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graeco-Latin Square Design — menu_graeco","text":"","code":"menu_graeco(t = random_integer_small(), seed = random_seed_number())"},{"path":"https://edibble.emitanaka.org/reference/menu_graeco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graeco-Latin Square Design — menu_graeco","text":"t number treatments. seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_graeco.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graeco-Latin Square Design — menu_graeco","text":"recipe Graeco-Latin square design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_graeco.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graeco-Latin Square Design — menu_graeco","text":"","code":"menu_graeco(t = 3) #> design(\"Graeco-Latin Square Design\") %>% #>   set_units(row = 3, #>             col = 3, #>             unit = crossed_by(row, col)) %>% #>   set_trts(trt1 = 3, #>            trt2 = 3) %>% #>   allot_trts(trt1 ~ unit, #>              trt2 ~ unit) %>% #>   assign_trts(\"random\", seed = 591) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_hyper_graeco.html","id":null,"dir":"Reference","previous_headings":"","what":"Hyper-Graeco-Latin Square Design — menu_hyper_graeco","title":"Hyper-Graeco-Latin Square Design — menu_hyper_graeco","text":"Hyper-Graeco-Latin Square Design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_hyper_graeco.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hyper-Graeco-Latin Square Design — menu_hyper_graeco","text":"","code":"menu_hyper_graeco(t = random_integer_small(), seed = random_seed_number())"},{"path":"https://edibble.emitanaka.org/reference/menu_hyper_graeco.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hyper-Graeco-Latin Square Design — menu_hyper_graeco","text":"t number treatments seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_hyper_graeco.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hyper-Graeco-Latin Square Design — menu_hyper_graeco","text":"recipe Hyper-Graeco-Latin square design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_hyper_graeco.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hyper-Graeco-Latin Square Design — menu_hyper_graeco","text":"","code":"menu_hyper_graeco(t = 3) #> design(\"Hyper-Graeco-Latin Square Design\") %>% #>   set_units(block1 = 3, #>             block2 = 3, #>             block3 = 3, #>             block4 = 3, #>             unit = crossed_by(block1, block2, block3, block4)) %>% #>   set_trts(trt = 3) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 331) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_lsd.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare classical Latin square design — menu_lsd","title":"Prepare classical Latin square design — menu_lsd","text":"Prepare classical Latin square design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_lsd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare classical Latin square design — menu_lsd","text":"","code":"menu_lsd(t = random_integer_small(), seed = random_seed_number())"},{"path":"https://edibble.emitanaka.org/reference/menu_lsd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare classical Latin square design — menu_lsd","text":"t number treatments seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_lsd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare classical Latin square design — menu_lsd","text":"recipe Latin square design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_lsd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare classical Latin square design — menu_lsd","text":"","code":"menu_lsd(t = 3) #> design(\"Latin Square Design\") %>% #>   set_units(row = 3, #>             col = 3, #>             unit = crossed_by(row, col)) %>% #>   set_trts(trt = 3) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 668) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_rcbd.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a randomised complete block design — menu_rcbd","title":"Prepare a randomised complete block design — menu_rcbd","text":"Prepare randomised complete block design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_rcbd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a randomised complete block design — menu_rcbd","text":"","code":"menu_rcbd(   t = random_integer_small(),   r = random_integer_small(),   seed = random_seed_number() )"},{"path":"https://edibble.emitanaka.org/reference/menu_rcbd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a randomised complete block design — menu_rcbd","text":"t number treatments. r number replications treatment level. seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_rcbd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare a randomised complete block design — menu_rcbd","text":"recipe randomised complete block design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_rcbd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare a randomised complete block design — menu_rcbd","text":"","code":"menu_rcbd(t = 3, r = 2) #> design(\"Randomised Complete Block Design\") %>% #>   set_units(block = 2, #>             unit = nested_in(block, 3)) %>% #>   set_trts(trt = 3) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 822) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Split-unit design — menu_split","title":"Split-unit design — menu_split","text":"Originally referred split-plot design first used.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split-unit design — menu_split","text":"","code":"menu_split(   t1 = random_integer_small(),   t2 = random_integer_small(),   r = random_integer_small(),   seed = random_seed_number() )"},{"path":"https://edibble.emitanaka.org/reference/menu_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split-unit design — menu_split","text":"t1 number treatment levels main plots. t2 number treatment levels subplots. r number replications treatment level. seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split-unit design — menu_split","text":"recipe split-plot design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_split.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split-unit design — menu_split","text":"","code":"menu_split(t1 = 3, t2 = 2, r = 4) #> design(\"Split-Plot Design | Split-Unit Design\") %>% #>   set_units(mainplot = 12, #>              subplot = nested_in(mainplot, 2)) %>% #>   set_trts(trt1 = 3, #>            trt2 = 2) %>% #>   allot_trts(trt1 ~ mainplot, #>              trt2 ~ subplot) %>% #>   assign_trts(\"random\", seed = 861) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_strip.html","id":null,"dir":"Reference","previous_headings":"","what":"Strip-unit design — menu_strip","title":"Strip-unit design — menu_strip","text":"Strip-unit design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_strip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strip-unit design — menu_strip","text":"","code":"menu_strip(   t1 = random_integer_small(),   t2 = random_integer_small(),   r = random_integer_small(),   seed = random_seed_number() )"},{"path":"https://edibble.emitanaka.org/reference/menu_strip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strip-unit design — menu_strip","text":"t1 number treatment levels main plots. t2 number treatment levels subplots. r number replications treatment level. seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_strip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strip-unit design — menu_strip","text":"recipe strip-unit design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_strip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strip-unit design — menu_strip","text":"","code":"menu_strip(t1 = 3, t2 = 3, r = 2) #> design(\"Strip-Plot Design | Strip-Unit Design\") %>% #>   set_units(block = 2, #>             row = nested_in(block, 3), #>             col = nested_in(block, 3), #>             unit = nested_in(block, crossed_by(row, col))) %>% #>   set_trts(trt1 = 3, #>            trt2 = 3) %>% #>   allot_trts(trt1 ~ row, #>              trt2 ~ col) %>% #>   assign_trts(\"random\", seed = 388) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/menu_youden.html","id":null,"dir":"Reference","previous_headings":"","what":"Youden square design — menu_youden","title":"Youden square design — menu_youden","text":"Youden square design","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_youden.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Youden square design — menu_youden","text":"","code":"menu_youden(   nc = random_integer_small(),   t = random_integer_small(min = nc + 1),   seed = random_seed_number() )"},{"path":"https://edibble.emitanaka.org/reference/menu_youden.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Youden square design — menu_youden","text":"nc number columns. t number treatments. seed scalar value computational reproducibility.","code":""},{"path":"https://edibble.emitanaka.org/reference/menu_youden.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Youden square design — menu_youden","text":"recipe Youden square design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/menu_youden.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Youden square design — menu_youden","text":"","code":"menu_youden(nc = 4, t = 5) #> design(\"Youden Square Design\") %>% #>   set_units(row = 5, #>             col = 4, #>             unit = crossed_by(row, col)) %>% #>   set_trts(trt = 5) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 281) %>% #>   serve_table()"},{"path":"https://edibble.emitanaka.org/reference/nested_in.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify the nesting structure for units — nested_in","title":"Specify the nesting structure for units — nested_in","text":"Specify nesting structure units","code":""},{"path":"https://edibble.emitanaka.org/reference/nested_in.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify the nesting structure for units — nested_in","text":"","code":"nested_in(   x,   ...,   prefix = \"\",   suffix = \"\",   leading0 = FALSE,   sep = edibble_labels_opt(\"sep\"),   attrs = NULL )"},{"path":"https://edibble.emitanaka.org/reference/nested_in.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify the nesting structure for units — nested_in","text":"x name parent unit nest . ... single number sequence two-sided formula left-hand side corresponds name level (level number) x right-hand side integer specifying number levels nested corresponding levels. prefix prefix label. suffix suffix label. leading0 Whether leading 0 labels made. sep separator added prefix number prefix empty. attrs named vector names values correspond attribute names values variable, data frame.","code":""},{"path":"https://edibble.emitanaka.org/reference/nested_in.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify the nesting structure for units — nested_in","text":"nested level.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/nested_in.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify the nesting structure for units — nested_in","text":"","code":"design(\"Split-Plot Design | Split-Unit Design\") %>%   set_units(mainplot = 60,             subplot = nested_in(mainplot, 10)) #> Split-Plot Design | Split-Unit Design #> └─mainplot (60 levels) #>   └─subplot (600 levels)"},{"path":"https://edibble.emitanaka.org/reference/nesting_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the nesting structure for the units — nesting_structure","title":"Get the nesting structure for the units — nesting_structure","text":"Get nesting structure units","code":""},{"path":"https://edibble.emitanaka.org/reference/nesting_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the nesting structure for the units — nesting_structure","text":"","code":"nesting_structure(design)"},{"path":"https://edibble.emitanaka.org/reference/nesting_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the nesting structure for the units — nesting_structure","text":"design edibble design","code":""},{"path":"https://edibble.emitanaka.org/reference/nesting_structure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the nesting structure for the units — nesting_structure","text":"Return named list. shows direct parent.","code":""},{"path":"https://edibble.emitanaka.org/reference/nesting_structure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the nesting structure for the units — nesting_structure","text":"","code":"nesting_structure(takeout(menu_split())) #> $subplot #> [1] \"mainplot\" #>"},{"path":"https://edibble.emitanaka.org/reference/new_edibble.html","id":null,"dir":"Reference","previous_headings":"","what":"An edibble table constructor — new_edibble","title":"An edibble table constructor — new_edibble","text":"helps construct new edibble table special type tibble.","code":""},{"path":"https://edibble.emitanaka.org/reference/new_edibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An edibble table constructor — new_edibble","text":"","code":"new_edibble(.data, ..., design = NULL, class = NULL)  as_edibble(.data, ...)  edibble(   .data,   name = NULL,   .record = TRUE,   seed = NULL,   kitchen = Kitchen,   ... )"},{"path":"https://edibble.emitanaka.org/reference/new_edibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"An edibble table constructor — new_edibble","text":".data data frame list size. ... Passed new_tibble. design edibble graph object. class Subclasses edibble table. default NULL. name Optional name used title printing design. .record logical value. indicates whether record code step. default TRUE. remain TRUE unless function used wrapper code. seed seed number reproducibility. kitchen environment setup manner manipulate, extract query information design.","code":""},{"path":"https://edibble.emitanaka.org/reference/new_edibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"An edibble table constructor — new_edibble","text":"edibble table.","code":""},{"path":"https://edibble.emitanaka.org/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://edibble.emitanaka.org/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://edibble.emitanaka.org/reference/pivot_trts_widelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Pivot treatments to a wider list or table format — pivot_trts_widelist","title":"Pivot treatments to a wider list or table format — pivot_trts_widelist","text":"Pivot treatments wider list table format","code":""},{"path":"https://edibble.emitanaka.org/reference/pivot_trts_widelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pivot treatments to a wider list or table format — pivot_trts_widelist","text":"","code":"pivot_trts_widelist(.data, trts = NULL, fcts = NULL, drop = FALSE)  pivot_trts_widetable(.data, trts = NULL, fcts = NULL)"},{"path":"https://edibble.emitanaka.org/reference/pivot_trts_widelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pivot treatments to a wider list or table format — pivot_trts_widelist","text":".data edibble table. trts vector treatment (tidyselect compatible). default NULL includes treatments. fcts vector factors edibble table. drop Whether resulting list drop vector within list element one column. Default FALSE.","code":""},{"path":"https://edibble.emitanaka.org/reference/pivot_trts_widelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pivot treatments to a wider list or table format — pivot_trts_widelist","text":"named list elements data names treatments.","code":""},{"path":"https://edibble.emitanaka.org/reference/pivot_trts_widelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pivot treatments to a wider list or table format — pivot_trts_widelist","text":"","code":"pivot_trts_widelist(takeout(menu_crd(t = 5, n = 20))) #> $trt1 #>      unit #> 5   unit5 #> 7   unit7 #> 14 unit14 #> 19 unit19 #>  #> $trt2 #>      unit #> 2   unit2 #> 6   unit6 #> 8   unit8 #> 10 unit10 #>  #> $trt3 #>      unit #> 1   unit1 #> 3   unit3 #> 4   unit4 #> 15 unit15 #>  #> $trt4 #>      unit #> 9   unit9 #> 13 unit13 #> 16 unit16 #> 20 unit20 #>  #> $trt5 #>      unit #> 11 unit11 #> 12 unit12 #> 17 unit17 #> 18 unit18 #>"},{"path":"https://edibble.emitanaka.org/reference/plot.edbl_design.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive plot of the edibble design — plot.edbl_design","title":"Interactive plot of the edibble design — plot.edbl_design","text":"Interactive plot edibble design","code":""},{"path":"https://edibble.emitanaka.org/reference/plot.edbl_design.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive plot of the edibble design — plot.edbl_design","text":"","code":"# S3 method for edbl_design plot(   x,   which = c(\"factors\", \"levels\"),   width = \"100%\",   height = NULL,   seed = 1,   title = NULL,   subtitle = NULL,   footer = NULL,   background = \"transparent\",   view = c(\"show-buttons\", \"hide-buttons\", \"static\"),   ... )  # S3 method for edbl_table plot(x, ...)  plot_fct_graph(   x,   width = \"100%\",   height = NULL,   seed = 1,   title = NULL,   subtitle = NULL,   footer = NULL,   background = \"transparent\",   view = c(\"show-buttons\", \"hide-buttons\", \"static\"),   ... )  plot_lvl_graph(   x,   width = \"100%\",   height = NULL,   seed = 1,   title = NULL,   subtitle = NULL,   footer = NULL,   background = \"transparent\",   view = c(\"show-buttons\", \"hide-buttons\", \"static\"),   ... )"},{"path":"https://edibble.emitanaka.org/reference/plot.edbl_design.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive plot of the edibble design — plot.edbl_design","text":"x edibble design. string either \"factors\" \"levels\". width, height width height plot. seed seed number plot always generated. title, subtitle, footer title, subtitle footer plot. default uses name x object title rest empty. modify look text, can pass character string consisting valid input style value HTML object, e.g. \"font-size: 18px;font-family:serif;\" named vector name corresponds text display, e.g. c(\"Title\" = \"font-size:20px;\"). background background color plot. Default transparent. input can color name (e.g. \"white\"), HEX value (\"#FFFFFF\"), rgb/rgba format like rgba(0, 0, 0, 0). view string either \"show-buttons\" (default), \"hide-buttons\", \"static\" ... Currently unused.","code":""},{"path":"https://edibble.emitanaka.org/reference/plot.edbl_design.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive plot of the edibble design — plot.edbl_design","text":"plot.","code":""},{"path":"https://edibble.emitanaka.org/reference/plot.edbl_design.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive plot of the edibble design — plot.edbl_design","text":"","code":"plot(takeout(menu_crd(t = 4, n = 20))) #> Loading required namespace: visNetwork  {\"x\":{\"nodes\":{\"id\":[1,2],\"name\":[\"unit\",\"trt\"],\"class\":[\"edbl_unit\",\"edbl_trt\"],\"group\":[\"unit\",\"trt\"],\"label\":[\"unit\",\"trt\"],\"shape\":[\"circle\",\"diamond\"]},\"edges\":{\"from\":[2],\"to\":[1],\"alloc\":[1],\"type\":[\"allot\"],\"var_from\":[\"trt\"],\"var_to\":[\"unit\"],\"arrows.middle.type\":[\"arrow\"],\"dashes\":[false],\"arrows\":[\"to\"]},\"nodesToDataframe\":true,\"edgesToDataframe\":true,\"options\":{\"width\":\"100%\",\"height\":\"100%\",\"nodes\":{\"shape\":\"dot\",\"id\":\"id\"},\"manipulation\":{\"enabled\":true},\"layout\":{\"randomSeed\":1},\"edges\":{\"id\":\"id\"},\"interaction\":{\"navigationButtons\":true,\"zoomSpeed\":1}},\"groups\":[\"unit\",\"trt\"],\"width\":\"100%\",\"height\":null,\"idselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"useLabels\":true,\"main\":\"Select by id\"},\"byselection\":{\"enabled\":true,\"style\":\"width: 150px; height: 26px\",\"multiple\":false,\"hideColor\":\"rgba(200,200,200,0.5)\",\"highlight\":false,\"variable\":\"group\",\"main\":\"Select by group\",\"values\":[\"trt\",\"unit\"]},\"main\":{\"text\":\"Completely Randomised Design\",\"style\":\"\"},\"submain\":{\"text\":\"\",\"style\":\"\"},\"footer\":{\"text\":\"\",\"style\":\"\"},\"background\":\"rgba(0, 0, 0, 0)\",\"opts_manipulation\":{\"datacss\":\"table.legend_table {\\n  font-size: 11px;\\n  border-width:1px;\\n  border-color:#d3d3d3;\\n  border-style:solid;\\n}\\ntable.legend_table td {\\n  border-width:1px;\\n  border-color:#d3d3d3;\\n  border-style:solid;\\n  padding: 2px;\\n}\\ndiv.table_content {\\n  width:80px;\\n  text-align:center;\\n}\\ndiv.table_description {\\n  width:100px;\\n}\\n\\n.operation {\\n  font-size:20px;\\n}\\n\\n.network-popUp {\\n  display:none;\\n  z-index:299;\\n  width:250px;\\n  /*height:150px;*/\\n  background-color: #f9f9f9;\\n  border-style:solid;\\n  border-width:1px;\\n  border-color: #0d0d0d;\\n  padding:10px;\\n  text-align: center;\\n  position:fixed;\\n  top:50%;  \\n  left:50%;  \\n  margin:-100px 0 0 -100px;  \\n\\n}\",\"addNodeCols\":[\"id\",\"label\"],\"editNodeCols\":[\"id\",\"label\"],\"tab_add_node\":\"<span id=\\\"addnode-operation\\\" class = \\\"operation\\\">node<\\/span> <br><table style=\\\"margin:auto;\\\"><tr><td>id<\\/td><td><input id=\\\"addnode-id\\\"  type= \\\"text\\\" value=\\\"new value\\\"><\\/td><\\/tr><tr><td>label<\\/td><td><input id=\\\"addnode-label\\\"  type= \\\"text\\\" value=\\\"new value\\\"><\\/td><\\/tr><\\/table><input type=\\\"button\\\" value=\\\"save\\\" id=\\\"addnode-saveButton\\\"><\\/button><input type=\\\"button\\\" value=\\\"cancel\\\" id=\\\"addnode-cancelButton\\\"><\\/button>\",\"tab_edit_node\":\"<span id=\\\"editnode-operation\\\" class = \\\"operation\\\">node<\\/span> <br><table style=\\\"margin:auto;\\\"><tr><td>id<\\/td><td><input id=\\\"editnode-id\\\"  type= \\\"text\\\" value=\\\"new value\\\"><\\/td><\\/tr><tr><td>label<\\/td><td><input id=\\\"editnode-label\\\"  type= \\\"text\\\" value=\\\"new value\\\"><\\/td><\\/tr><\\/table><input type=\\\"button\\\" value=\\\"save\\\" id=\\\"editnode-saveButton\\\"><\\/button><input type=\\\"button\\\" value=\\\"cancel\\\" id=\\\"editnode-cancelButton\\\"><\\/button>\"},\"highlight\":{\"enabled\":true,\"hoverNearest\":false,\"degree\":1,\"algorithm\":\"all\",\"hideColor\":\"rgba(200,200,200,0.5)\",\"labelOnly\":true},\"collapse\":{\"enabled\":true,\"fit\":false,\"resetHighlight\":true,\"clusterOptions\":null,\"keepCoord\":true,\"labelSuffix\":\"(cluster)\"},\"tooltipStay\":300,\"tooltipStyle\":\"position: fixed;visibility:hidden;padding: 5px;white-space: nowrap;font-family: verdana;font-size:14px;font-color:#000000;background-color: #f5f4ed;-moz-border-radius: 3px;-webkit-border-radius: 3px;border-radius: 3px;border: 1px solid #808074;box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://edibble.emitanaka.org/reference/record_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Record the coding step — record_step","title":"Record the coding step — record_step","text":"Call function functions modify edibble design table step tracked. output functions using record_step() returning edibble design table.","code":""},{"path":"https://edibble.emitanaka.org/reference/record_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Record the coding step — record_step","text":"","code":"record_step()"},{"path":"https://edibble.emitanaka.org/reference/record_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Record the coding step — record_step","text":"Returns nothing.","code":""},{"path":"https://edibble.emitanaka.org/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. vctrs vec_math","code":""},{"path":"https://edibble.emitanaka.org/reference/scan_menu.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the short names of the named designs — scan_menu","title":"Find the short names of the named designs — scan_menu","text":"Find short names named designs","code":""},{"path":"https://edibble.emitanaka.org/reference/scan_menu.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the short names of the named designs — scan_menu","text":"","code":"scan_menu(pkgs = NULL)"},{"path":"https://edibble.emitanaka.org/reference/scan_menu.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the short names of the named designs — scan_menu","text":"pkgs character vector containing package names search named designs . default search edibble packages loaded.","code":""},{"path":"https://edibble.emitanaka.org/reference/scan_menu.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the short names of the named designs — scan_menu","text":"character vector short names named menu designs.","code":""},{"path":"https://edibble.emitanaka.org/reference/scan_menu.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the short names of the named designs — scan_menu","text":"","code":"scan_menu() #>  #> ── edibble ── #>  #> • bibd seems to be unavailable. #> • crd seems to be unavailable. #> • factorial seems to be unavailable. #> • graeco seems to be unavailable. #> • hyper_graeco seems to be unavailable. #> • lsd seems to be unavailable. #> • rcbd seems to be unavailable. #> • split seems to be unavailable. #> • strip seems to be unavailable. #> • youden seems to be unavailable."},{"path":"https://edibble.emitanaka.org/reference/select_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a subset of units from a cooked design — select_units","title":"Select a subset of units from a cooked design — select_units","text":"Select subset units cooked design","code":""},{"path":"https://edibble.emitanaka.org/reference/select_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a subset of units from a cooked design — select_units","text":"","code":"select_units(prep, ...)"},{"path":"https://edibble.emitanaka.org/reference/select_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select a subset of units from a cooked design — select_units","text":"prep cooked design. ... units select.","code":""},{"path":"https://edibble.emitanaka.org/reference/select_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select a subset of units from a cooked design — select_units","text":"edibble design.","code":""},{"path":"https://edibble.emitanaka.org/reference/serve_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Serve edibble table — serve_table","title":"Serve edibble table — serve_table","text":"converts edibble graph object data frame called edibble. function used design final form (close final form). table can formed variables can reconciled, otherwise data frame zero rows.","code":""},{"path":"https://edibble.emitanaka.org/reference/serve_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Serve edibble table — serve_table","text":"","code":"serve_table(.edibble, use_labels = FALSE, ..., .record = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/serve_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Serve edibble table — serve_table","text":".edibble edibble design (edbl_design), edibble data frame (edbl_table) object contains edibble data frame attribute design. use_labels show labels instead names. ... Either name-value pair series names. .record logical value. indicates whether record code step. default TRUE. remain TRUE unless function used wrapper code.","code":""},{"path":"https://edibble.emitanaka.org/reference/serve_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Serve edibble table — serve_table","text":"edbl data frame columns defined vertices rows displayed vertices connected reconcile output.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/serve_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Serve edibble table — serve_table","text":"","code":"design(\"Completely Randomised Design\") %>%   set_units(unit = 28) %>%   set_trts(trt = 6) %>%   allot_trts(trt ~ unit) %>%   assign_trts(\"random\", seed = 521) %>%   serve_table() #> # Completely Randomised Design  #> # An edibble: 28 x 2 #>          unit      trt #>    <unit(28)> <trt(6)> #>  1     unit1      trt4 #>  2     unit2      trt5 #>  3     unit3      trt3 #>  4     unit4      trt4 #>  5     unit5      trt4 #>  6     unit6      trt6 #>  7     unit7      trt6 #>  8     unit8      trt2 #>  9     unit9      trt4 #> 10     unit10     trt4 #> # … with 18 more rows"},{"path":"https://edibble.emitanaka.org/reference/set_rcrds.html","id":null,"dir":"Reference","previous_headings":"","what":"Set records for given unit — set_rcrds","title":"Set records for given unit — set_rcrds","text":"function creates new nodes edibble graph name corresponding either intended response measured variable recorded.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_rcrds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set records for given unit — set_rcrds","text":"","code":"set_rcrds(   .edibble,   ...,   .name_repair = c(\"check_unique\", \"unique\", \"universal\", \"minimal\"),   .record = TRUE )  set_rcrds_of(.edibble, ...)"},{"path":"https://edibble.emitanaka.org/reference/set_rcrds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set records for given unit — set_rcrds","text":".edibble edibble design (edbl_design), edibble data frame (edbl_table) object contains edibble data frame attribute design. ... Name-value pair. value correspond single name unit defined set_units. name name record variable. .name_repair argument tibble::tibble(). .record logical value. indicates whether record code step. default TRUE. remain TRUE unless function used wrapper code.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_rcrds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set records for given unit — set_rcrds","text":"edibble design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/set_rcrds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set records for given unit — set_rcrds","text":"","code":"takeout(menu_crd(t = 4, n = 10)) %>%   set_rcrds(y = unit) #> # Completely Randomised Design  #> # An edibble: 10 x 3 #>          unit      trt      y #>    <unit(10)> <trt(4)> <rcrd> #>  1     unit1      trt1      o #>  2     unit2      trt2      o #>  3     unit3      trt4      o #>  4     unit4      trt4      o #>  5     unit5      trt1      o #>  6     unit6      trt3      o #>  7     unit7      trt4      o #>  8     unit8      trt3      o #>  9     unit9      trt2      o #> 10     unit10     trt2      o  takeout(menu_crd(t = 4, n = 10)) %>%   set_rcrds_of(unit = \"y\") #> # Completely Randomised Design  #> # An edibble: 10 x 3 #>          unit      trt      y #>    <unit(10)> <trt(4)> <rcrd> #>  1     unit1      trt4      o #>  2     unit2      trt1      o #>  3     unit3      trt2      o #>  4     unit4      trt2      o #>  5     unit5      trt3      o #>  6     unit6      trt4      o #>  7     unit7      trt4      o #>  8     unit8      trt1      o #>  9     unit9      trt1      o #> 10     unit10     trt3      o"},{"path":"https://edibble.emitanaka.org/reference/set_trts.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the treatment variables — set_trts","title":"Set the treatment variables — set_trts","text":"function add special class, called edbl_trt, edibble variables.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_trts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the treatment variables — set_trts","text":"","code":"set_trts(   .edibble,   ...,   .name_repair = c(\"check_unique\", \"unique\", \"universal\", \"minimal\"),   .record = TRUE )"},{"path":"https://edibble.emitanaka.org/reference/set_trts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the treatment variables — set_trts","text":".edibble edibble design (edbl_design), edibble data frame (edbl_table) object contains edibble data frame attribute design. ... Either name-value pair series names. .name_repair argument tibble::tibble(). .record logical value. indicates whether record code step. default TRUE. remain TRUE unless function used wrapper code.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_trts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the treatment variables — set_trts","text":"edibble design.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_trts.html","id":"definition-of-treatment","dir":"Reference","previous_headings":"","what":"Definition of treatment","title":"Set the treatment variables — set_trts","text":"word treatment sometimes used refer one variables. one treatment variables unfortunately confuses whether treatment refers variable combination treatment variables. Treatment whole description applied experiment.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/set_trts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the treatment variables — set_trts","text":"","code":"design() %>%   set_trts(pesticide = c(\"A\", \"B\", \"C\"),            dosage = c(0, 10, 20, 30, 40)) #> An edibble design #> ├─pesticide (3 levels) #> └─dosage (5 levels)"},{"path":"https://edibble.emitanaka.org/reference/set_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Set units used in experiment — set_units","title":"Set units used in experiment — set_units","text":"function sets new edibble variables class edbl_unit. specifically, means new nodes added edbl_graph.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set units used in experiment — set_units","text":"","code":"set_units(   .edibble,   ...,   .name_repair = c(\"check_unique\", \"unique\", \"universal\", \"minimal\"),   .record = TRUE )"},{"path":"https://edibble.emitanaka.org/reference/set_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set units used in experiment — set_units","text":".edibble edibble design (edbl_design), edibble data frame (edbl_table) object contains edibble data frame attribute design. ... Either name-value pair series names. .name_repair argument tibble::tibble(). .record logical value. indicates whether record code step. default TRUE. remain TRUE unless function used wrapper code.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set units used in experiment — set_units","text":"edibble design.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_units.html","id":"definition-of-unit","dir":"Reference","previous_headings":"","what":"Definition of unit","title":"Set units used in experiment — set_units","text":"unit, much like factor, -used word due lack better word, edibble uses word \"unit\" refer entity, physical otherwise, pertain experiment. function doen't explicitly distinguish experimental observational units, unit limited type units. unit edibble can blocking factor even discrete time unit.","code":""},{"path":"https://edibble.emitanaka.org/reference/set_units.html","id":"limitations","dir":"Reference","previous_headings":"","what":"Limitations","title":"Set units used in experiment — set_units","text":"Currently unit discrete set levels need know number levels prior setting units.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/set_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set units used in experiment — set_units","text":"","code":"# 30 rats design() %>%   set_units(rat = 30) %>%   serve_table() #> # An edibble: 30 x 1 #>           rat #>    <unit(30)> #>  1      rat1  #>  2      rat2  #>  3      rat3  #>  4      rat4  #>  5      rat5  #>  6      rat6  #>  7      rat7  #>  8      rat8  #>  9      rat9  #> 10      rat10 #> # … with 20 more rows  # 4 girls named \"Anna\", \"Betty\", \"Carol\", \"Diana\" design() %>%   set_units(girl = c(\"Anna\", \"Betty\", \"Carol\", \"Diana\")) %>%   serve_table() #> # An edibble: 4 x 1 #>        girl #>   <unit(4)> #> 1     Anna  #> 2     Betty #> 3     Carol #> 4     Diana  # 3 companies, with 10 boxes each design() %>%   set_units(company = c(\"A\", \"B\", \"C\"),                 box = nested_in(company, 10)) #> An edibble design #> └─company (3 levels) #>   └─box (30 levels)  # 2 classes, one with 10 students, the other with 20 students design() %>%   set_units(class = 2,             student = nested_in(class,                                 1 ~ 10,                                 2 ~ 20)) #> An edibble design #> └─class (2 levels) #>   └─student (30 levels)  # 4 countries with 10 people from Australia & New Zealand and 20 from the rest design() %>%   set_units(country = c(\"AU\", \"NZ\", \"USA\", \"JPN\"),             person = nested_in(country,                                c(\"AU\", \"NZ\") ~ 10,                                            . ~ 20)) %>%   serve_table() #> # An edibble: 60 x 2 #>      country     person #>    <unit(4)> <unit(60)> #>  1        AU   person1  #>  2        AU   person2  #>  3        AU   person3  #>  4        AU   person4  #>  5        AU   person5  #>  6        AU   person6  #>  7        AU   person7  #>  8        AU   person8  #>  9        AU   person9  #> 10        AU   person10 #> # … with 50 more rows"},{"path":"https://edibble.emitanaka.org/reference/skittles.html","id":null,"dir":"Reference","previous_headings":"","what":"Skittles experiment — skittles","title":"Skittles experiment — skittles","text":"contains data skittle experiment conducted Nick Tierney. goal experiment assess people can discern flavour skittle (indicated color skittle) based taste alone. participants blindfolded. experiment 3 participants participant tasting 10 skittles, 2 5 color, random order. skittle_type type skittle. Coincides real_skittle. person participant. order order skittle tasted. choice participant's choice. real_skittle actual skittle color.","code":""},{"path":"https://edibble.emitanaka.org/reference/skittles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skittles experiment — skittles","text":"","code":"skittles"},{"path":"https://edibble.emitanaka.org/reference/skittles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Skittles experiment — skittles","text":"object class spec_tbl_df (inherits tbl_df, tbl, data.frame) 30 rows 6 columns.","code":""},{"path":"https://edibble.emitanaka.org/reference/skittles.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Skittles experiment — skittles","text":"https://github.com/njtierney/skittles","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/takeout.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a named experimental design — takeout","title":"Create a named experimental design — takeout","text":"function generates named experimental design supplying selected menu named design prints default can find available recipes scan_menu().","code":""},{"path":"https://edibble.emitanaka.org/reference/takeout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a named experimental design — takeout","text":"","code":"takeout(recipe = NULL, show = TRUE)"},{"path":"https://edibble.emitanaka.org/reference/takeout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a named experimental design — takeout","text":"recipe named design object. typically generated function prefix menu_. nothing supplied, randomly select one. show logical value indicate whether code shown . Default TRUE.","code":""},{"path":"https://edibble.emitanaka.org/reference/takeout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a named experimental design — takeout","text":"recipe design.","code":""},{"path":[]},{"path":"https://edibble.emitanaka.org/reference/takeout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a named experimental design — takeout","text":"","code":"takeout(menu_crd(n = 50, t = 5)) #> design(\"Completely Randomised Design\") %>% #>   set_units(unit = 50) %>% #>   set_trts(trt = 5) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 931) %>% #>   serve_table()  #>  #> # Completely Randomised Design  #> # An edibble: 50 x 2 #>          unit      trt #>  * <unit(50)> <trt(5)> #>  1     unit1      trt1 #>  2     unit2      trt5 #>  3     unit3      trt2 #>  4     unit4      trt5 #>  5     unit5      trt3 #>  6     unit6      trt2 #>  7     unit7      trt3 #>  8     unit8      trt2 #>  9     unit9      trt3 #> 10     unit10     trt1 #> # … with 40 more rows # if you omit the design parameters then it will use the default # (which may be random) takeout(menu_crd()) #> design(\"Completely Randomised Design\") %>% #>   set_units(unit = 26) %>% #>   set_trts(trt = 3) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 310) %>% #>   serve_table()  #>  #> # Completely Randomised Design  #> # An edibble: 26 x 2 #>          unit      trt #>  * <unit(26)> <trt(3)> #>  1     unit1      trt3 #>  2     unit2      trt3 #>  3     unit3      trt2 #>  4     unit4      trt1 #>  5     unit5      trt1 #>  6     unit6      trt2 #>  7     unit7      trt1 #>  8     unit8      trt3 #>  9     unit9      trt1 #> 10     unit10     trt3 #> # … with 16 more rows # if you don't give any short names then it will generate a random one takeout() #> → No name was supplied so selecting a random named experimental design... #> → Selected Youden Square Design #> design(\"Youden Square Design\") %>% #>   set_units(row = 10, #>             col = 7, #>             unit = crossed_by(row, col)) %>% #>   set_trts(trt = 10) %>% #>   allot_trts(trt ~ unit) %>% #>   assign_trts(\"random\", seed = 159) %>% #>   serve_table()  #>  #> # Youden Square Design  #> # An edibble: 70 x 4 #>           row       col       unit       trt #>  * <unit(10)> <unit(7)> <unit(70)> <trt(10)> #>  1      row1       col1     unit1      trt5  #>  2      row2       col1     unit2      trt7  #>  3      row3       col1     unit3      trt9  #>  4      row4       col1     unit4      trt2  #>  5      row5       col1     unit5      trt6  #>  6      row6       col1     unit6      trt1  #>  7      row7       col1     unit7      trt3  #>  8      row8       col1     unit8      trt8  #>  9      row9       col1     unit9      trt4  #> 10      row10      col1     unit10     trt10 #> # … with 60 more rows"},{"path":"https://edibble.emitanaka.org/reference/utility-edibble-var.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility functions for edibble variable — utility-edibble-var","title":"Utility functions for edibble variable — utility-edibble-var","text":"S3 methods edbl_fct objects expected output factor. functions utility functions related edbl_fct object.","code":""},{"path":"https://edibble.emitanaka.org/reference/utility-edibble-var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility functions for edibble variable — utility-edibble-var","text":"","code":"# S3 method for edbl_fct as.character(x, ...)  # S3 method for edbl_fct as.integer(x, ...)  is_edibble_var(x)  is_edibble_unit(x)  is_edibble_trt(x)  is_edibble_rcrd(x)"},{"path":"https://edibble.emitanaka.org/reference/utility-edibble-var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility functions for edibble variable — utility-edibble-var","text":"x edbl_fct object. ... Ignored.","code":""},{"path":"https://edibble.emitanaka.org/reference/utility-edibble-var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility functions for edibble variable — utility-edibble-var","text":"character vector.","code":""},{"path":"https://edibble.emitanaka.org/reference/with_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Validation values — with_value","title":"Validation values — with_value","text":"creates list used later creating data validation rules data exported.","code":""},{"path":"https://edibble.emitanaka.org/reference/with_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validation values — with_value","text":"","code":"with_value(   operator = c(\"=\", \"==\", \">=\", \"<=\", \"<\", \">\", \"!=\"),   value = NULL,   between = NULL,   not_between = NULL )"},{"path":"https://edibble.emitanaka.org/reference/with_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validation values — with_value","text":"operator Operator apply. value optional value related operator , not_between optional numerical vector size two first entry minimum value second entry maximum value. , value valid within range minimum maximum value inclusive. not_between, value must lie outside values.","code":""},{"path":"https://edibble.emitanaka.org/reference/with_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validation values — with_value","text":"list two elements operator value.","code":""},{"path":"https://edibble.emitanaka.org/news/index.html","id":"edibble-010","dir":"Changelog","previous_headings":"","what":"edibble 0.1.0","title":"edibble 0.1.0","text":"Initial release package","code":""}]
